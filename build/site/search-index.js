antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component","keyword"],"fieldVectors":[["title/1-1",[0,48.013]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["keyword/1-1",[]],["title/1-2",[1,28.433,2,43.791,3,37.546]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["keyword/1-2",[]],["title/1",[4,68.821]],["name/1",[4,0.78]],["text/1",[2,8.026,3,4.452,5,5.877,6,3.611,7,5.079,8,5.363,9,3.399,10,5.079,11,2.204,12,3.734,13,4.003,14,8.464,15,4.959,16,6.472,17,4.765,18,4.452,19,3.83,20,5.118,21,3.485,22,3.427,23,6.472,24,3.485,25,4.452,26,6.472,27,4.323,28,3.83,29,4.1,30,6.472,31,6.472,32,6.472,33,6.472,34,6.472,35,5.877,36,3.547,37,5.193,38,5.485,39,6.472,40,4.765]],["component/1",[11,0.17,12,0.288]],["keyword/1",[]],["title/2-1",[41,75.786]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["keyword/2-1",[]],["title/2-2",[42,75.786]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["keyword/2-2",[]],["title/2-3",[12,33.434]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["keyword/2-3",[]],["title/2-4",[12,33.434]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["keyword/2-4",[]],["title/2-5",[43,42.288]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["keyword/2-5",[]],["title/2-6",[44,40.131]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["keyword/2-6",[]],["title/2-7",[45,53.784,46,33.602]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["keyword/2-7",[]],["title/2-8",[47,75.786]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["keyword/2-8",[]],["title/2-9",[48,40.202,49,38.372]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["keyword/2-9",[]],["title/2-10",[50,55.792]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["keyword/2-10",[]],["title/2",[11,14.211,12,24.078,51,27.987]],["name/2",[52,0.728]],["text/2",[0,1.45,3,0.869,5,1.147,8,3.103,9,2.641,10,2.406,11,2.363,12,2.745,19,3.23,21,3.157,22,1.212,25,0.869,36,0.692,43,0.705,44,1.662,46,1.662,48,3.714,50,0.93,51,3.356,53,1.488,54,1.013,55,0.763,56,1.263,57,2.289,58,1.263,59,1.013,60,1.147,61,0.869,62,0.821,63,2.16,64,1.263,65,1.263,66,2.04,67,0.747,68,0.705,69,3.103,70,2.079,71,1.263,72,5.324,73,2.23,74,0.821,75,2.079,76,0.843,77,1.013,78,1.147,79,2.079,80,1.263,81,1.07,82,0.692,83,3.638,84,1.263,85,1.263,86,0.897,87,2.406,88,1.263,89,0.732,90,1.263,91,0.967,92,1.147,93,1.263,94,1.263,95,1.091,96,2.311,97,1.263,98,0.967,99,0.967,100,1.836,101,2.523,102,0.869,103,2.289,104,1.147,105,1.263,106,1.898,107,1.07,108,1.263,109,0.692,110,2.763,111,4.511,112,1.662,113,4.033,114,4.316,115,1.277,116,1.327,117,1.585,118,1.212,119,2.042,120,1.662,121,1.662,122,1.662,123,2.644,124,1.942,125,2.04,126,2.385,127,2.443,128,0.869,129,2.113,130,0.821,131,1.94,132,1.685,133,1.147,134,1.263,135,1.147,136,1.263,137,2.566,138,1.013,139,3.295,140,1.263,141,1.263,142,0.821,143,2.23,144,1.94,145,0.897,146,1.013,147,0.692,148,2.591,149,0.843,150,2.332,151,1.488,152,1.07,153,0.718,154,2.702,155,0.897,156,0.718,157,1.07,158,0.93,159,1.82,160,1.72,161,1.529,162,1.254,163,0.897,164,0.93,165,0.869,166,0.93,167,1.156,168,1.416,169,2.289,170,1.517,171,1.263,172,1.139,173,0.8,174,0.692,175,3.305,176,2.097,177,2.834,178,1.013,179,1.013,180,0.821,181,0.781,182,0.781,183,0.897,184,3.174,185,2.311,186,0.843,187,4.996,188,3.787,189,1.147,190,2.009,191,2.493,192,0.821,193,1.263,194,0.718,195,0.718,196,1.685,197,2.332,198,0.658,199,1.277,200,0.967,201,2.113,202,0.93,203,1.836,204,1.263,205,0.967,206,1.263,207,0.967,208,1.94,209,1.301,210,3.14,211,1.416,212,5.03,213,1.301,214,2.289,215,1.263,216,2.079,217,2.939,218,0.718,219,0.781,220,0.967,221,3.073,222,1.147,223,0.843,224,0.93,225,4.057,226,1.836,227,3.877,228,0.821,229,0.967,230,1.94,231,2.04,232,0.747,233,1.013,234,2.16,235,1.754,236,0.93,237,0.732,238,0.967,239,1.488,240,1.263,241,1.263,242,1.384,243,1.942,244,0.869,245,1.942,246,1.898,247,1.263,248,1.263,249,1.263,250,1.013,251,1.07,252,1.07,253,1.685,254,1.263,255,0.821,256,0.8,257,1.263,258,1.07,259,1.384,260,1.72,261,1.263,262,2.289,263,1.013,264,0.781,265,2.385,266,0.93,267,1.263,268,0.821,269,2.079,270,0.869,271,0.821,272,0.967,273,0.967,274,1.416,275,0.8,276,0.718,277,1.263,278,2.192,279,1.07,280,0.8,281,1.013,282,2.079,283,0.869,284,1.013,285,0.747,286,1.263,287,0.869,288,1.013,289,1.263,290,0.732,291,1.263,292,0.732,293,1.263,294,0.68,295,1.013,296,0.843,297,2.738,298,0.68,299,1.013,300,1.754,301,1.147,302,0.763,303,1.147,304,1.013,305,0.602,306,0.747,307,0.843,308,1.192,309,0.747,310,0.967,311,0.897,312,0.763,313,1.263,314,1.263,315,1.147,316,1.07,317,0.61,318,0.967,319,0.8,320,1.013,321,0.692,322,1.013,323,0.732,324,1.174,325,0.781,326,1.263,327,0.967,328,1.013,329,2.289,330,1.147,331,1.263,332,1.013,333,1.263,334,0.967,335,0.897,336,1.147,337,1.013,338,1.07,339,0.869,340,1.147,341,1.07,342,0.705,343,0.763,344,0.718,345,1.013,346,0.93,347,0.638,348,0.821,349,2.289,350,1.61,351,2.04,352,1.07,353,0.692,354,2.851,355,1.263,356,1.263,357,0.93,358,1.013,359,1.013,360,0.781,361,1.263,362,0.897,363,2.289,364,0.93,365,1.488,366,0.763,367,1.263,368,0.843,369,1.263,370,1.263,371,0.967,372,1.013,373,1.263,374,0.732,375,1.263,376,1.263,377,2.289,378,1.263,379,1.147,380,1.263,381,0.967,382,0.967,383,1.263,384,1.07,385,0.821,386,0.93,387,0.602,388,1.147,389,1.147,390,0.869,391,1.263,392,1.263,393,1.263]],["component/2",[11,0.17,12,0.288]],["keyword/2",[]],["title/3-1",[394,40.813]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["keyword/3-1",[]],["title/3-2",[43,35.409,292,36.794]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["keyword/3-2",[]],["title/3-3",[11,19.733]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["keyword/3-3",[]],["title/3-4",[11,16.523,395,34.173]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["keyword/3-4",[]],["title/3-5",[11,16.523,95,30.248]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["keyword/3-5",[]],["title/3-6",[11,12.467,95,22.823,110,29.615,396,28.337]],["name/3-6",[]],["text/3-6",[]],["component/3-6",[]],["keyword/3-6",[]],["title/3-7",[95,22.823,397,40.581,398,47.88,399,47.88]],["name/3-7",[]],["text/3-7",[]],["component/3-7",[]],["keyword/3-7",[]],["title/3-8",[11,16.523,170,30.671]],["name/3-8",[]],["text/3-8",[]],["component/3-8",[]],["keyword/3-8",[]],["title/3-9",[159,36.794,400,57.626]],["name/3-9",[]],["text/3-9",[]],["component/3-9",[]],["keyword/3-9",[]],["title/3-10",[11,16.523,401,42.384]],["name/3-10",[]],["text/3-10",[]],["component/3-10",[]],["keyword/3-10",[]],["title/3-11",[95,22.823,304,38.416,305,22.823,306,28.337]],["name/3-11",[]],["text/3-11",[]],["component/3-11",[]],["keyword/3-11",[]],["title/3-12",[402,55.792]],["name/3-12",[]],["text/3-12",[]],["component/3-12",[]],["keyword/3-12",[]],["title/3-13",[403,64.233]],["name/3-13",[]],["text/3-13",[]],["component/3-13",[]],["keyword/3-13",[]],["title/3",[11,12.467,270,32.937,387,22.823,394,25.784]],["name/3",[404,0.859]],["text/3",[0,0.321,1,1.312,6,0.283,7,1.17,9,1.733,10,2.483,11,2.287,12,0.619,13,0.602,17,0.373,18,0.669,19,1.491,20,0.588,21,2.122,22,0.955,24,0.524,27,0.938,28,0.3,36,2.527,44,0.515,46,1.334,48,0.321,49,0.306,51,3.057,55,0.588,59,0.407,60,0.46,61,1.24,62,1.413,66,1.637,67,0.576,68,0.283,69,0.288,74,0.329,82,0.533,83,4.077,87,1.076,89,1.26,95,3.427,99,0.746,100,0.407,101,3.838,109,1.38,110,3.771,111,4.266,112,2.33,115,1.405,116,0.294,117,1.73,118,0.955,119,0.515,120,1.814,121,1.814,122,1.334,123,1.491,124,1.944,125,2.715,126,4.003,127,3.494,128,0.669,129,3.267,130,0.632,133,0.46,137,3.931,139,2.212,143,0.36,144,0.43,145,0.691,147,0.769,148,0.294,149,0.338,150,1.523,153,0.553,158,0.373,159,3.103,160,1.722,161,0.65,162,0.988,166,1.327,167,0.91,170,2.019,172,0.484,173,0.617,174,0.769,175,1.272,177,3.674,182,1.115,183,0.36,190,2.176,191,2.331,192,1.637,194,2.099,197,3.023,198,0.731,199,0.283,201,0.769,207,1.076,208,0.43,209,0.288,211,0.868,213,1.615,217,1.356,219,1.944,224,1.034,228,0.329,229,0.746,231,0.632,232,1.067,234,0.349,237,0.294,239,0.912,242,0.849,243,1.558,244,0.669,245,0.602,246,0.306,253,0.716,255,1.637,256,0.321,258,0.43,259,2.071,260,0.533,263,0.407,264,0.868,265,1.344,269,0.884,270,0.349,275,0.617,276,1.948,280,1.142,283,2.539,285,1.286,288,0.781,290,0.294,294,0.524,297,0.988,298,1.356,299,0.781,302,0.849,303,0.884,304,0.407,305,3.139,306,3.685,307,2.099,308,1.48,309,1.067,311,0.691,312,0.306,316,0.43,317,1.051,319,0.617,321,2.289,322,0.407,323,1.647,324,1.115,327,1.381,328,1.126,330,0.884,334,0.388,335,2.018,336,0.46,338,0.825,341,0.43,342,0.283,343,2.66,344,2.099,346,0.716,347,1.864,350,0.499,353,1.877,357,0.716,358,1.126,366,0.849,372,0.781,374,0.814,387,0.464,395,2.249,396,1.491,397,1.19,400,0.884,401,1.452,405,0.507,406,1.988,407,0.46,408,0.407,409,0.781,410,0.388,411,0.329,412,0.507,413,1.681,414,3.079,415,1.413,416,2.408,417,0.669,418,0.781,419,1.757,420,1.036,421,0.507,422,0.507,423,2.135,424,1.404,425,2.174,426,0.65,427,0.973,428,0.373,429,2.901,430,2.58,431,0.507,432,0.632,433,0.388,434,2.959,435,1.24,436,0.781,437,0.373,438,1.344,439,1.204,440,1.854,441,0.46,442,0.507,443,0.306,444,0.507,445,0.507,446,0.507,447,0.507,448,0.507,449,0.507,450,0.507,451,0.43,452,0.507,453,0.507,454,0.507,455,0.507,456,0.669,457,0.407,458,0.507,459,0.507,460,0.973,461,0.46,462,2.021,463,0.814,464,0.507,465,2.433,466,0.746,467,0.507,468,0.507,469,0.507,470,1.327,471,0.388,472,1.142,473,0.373,474,2.279,475,0.36,476,0.321,477,1.204,478,0.831,479,1.204,480,1.558,481,1.681,482,1.239,483,0.313,484,1.19,485,1.19,486,0.507,487,0.46,488,0.46,489,0.507,490,0.46,491,0.884,492,1.558,493,0.781,494,1.327,495,0.507,496,0.973,497,2.042,498,0.746,499,0.507,500,0.973,501,0.65,502,2.959,503,0.43,504,0.46,505,0.507,506,1.615,507,1.24,508,1.93,509,1.803,510,1.803,511,0.507,512,1.275,513,2.604,514,0.373,515,1.6,516,1.142,517,0.889,518,1.637,519,1.93,520,1.275,521,0.912,522,1.682,523,0.407,524,1.637,525,1.034,526,1.596,527,1.413,528,0.407,529,0.507,530,0.507,531,0.321,532,1.733,533,0.388,534,1.381,535,0.66,536,0.912,537,0.669,538,1.26,539,0.46,540,0.973,541,0.46,542,1.544,543,0.973,544,0.507,545,0.407,546,1.126,547,0.825,548,2.287,549,3.691,550,0.997,551,1.126,552,2.852,553,0.746,554,1.344,555,0.388,556,0.373,557,0.507,558,1.452,559,1.275,560,0.407,561,0.507,562,0.889,563,0.46,564,0.36,565,0.373,566,0.407,567,0.507,568,0.716,569,0.746,570,0.912,571,0.912,572,0.889,573,0.889,574,0.889,575,0.617,576,0.46,577,0.691,578,0.46,579,0.507,580,0.507,581,0.576,582,0.65,583,0.313,584,0.388,585,0.407,586,0.669,587,0.43,588,0.329,589,0.507,590,0.65,591,0.407,592,0.349,593,0.43,594,0.669,595,0.716,596,0.338,597,0.321,598,0.507,599,0.65,600,0.338,601,0.43,602,0.533,603,0.781,604,0.507,605,0.373,606,0.507,607,0.46,608,0.507,609,0.938,610,1.377,611,0.388,612,0.507,613,0.36,614,0.938,615,0.373,616,0.973,617,0.373,618,0.46,619,0.997,620,0.988,621,0.507,622,0.507,623,0.938,624,0.507,625,1.076,626,0.602,627,0.669,628,0.43,629,0.349,630,0.373,631,0.329,632,0.507,633,0.338,634,0.349,635,0.373,636,0.407,637,0.825,638,0.966,639,0.46,640,1.974,641,0.781,642,0.329,643,0.46,644,0.716,645,0.349,646,0.973,647,0.602,648,0.507,649,0.889,650,0.43,651,0.349,652,0.691,653,0.973,654,1.076,655,0.691,656,0.43,657,0.43,658,0.373,659,0.507,660,1.126,661,0.507,662,0.373,663,0.338,664,0.46,665,0.388,666,0.588,667,0.669,668,0.264,669,0.46,670,0.938,671,0.36,672,0.973,673,0.973,674,0.349,675,0.884,676,0.43,677,0.36,678,0.507,679,0.65,680,0.388,681,0.746,682,0.507,683,0.716,684,0.407,685,0.507,686,0.997,687,0.65,688,0.507,689,0.781,690,0.43,691,0.46,692,0.716,693,0.43,694,0.373,695,0.65,696,0.388,697,0.507,698,0.338,699,0.507,700,0.46,701,0.46,702,0.46,703,0.46,704,0.65,705,0.507,706,0.407,707,0.564,708,0.46,709,0.507,710,0.46,711,0.507,712,0.884,713,0.507,714,0.43,715,0.746,716,0.43,717,0.43,718,0.388,719,0.46,720,0.349,721,0.43,722,0.306,723,0.338,724,0.507,725,0.43,726,0.407,727,1.126,728,0.407,729,0.321,730,0.388,731,0.373,732,0.669,733,0.338,734,1.558,735,0.388,736,1.034,737,0.36,738,0.407,739,0.407,740,0.407,741,0.43,742,0.329,743,1.19,744,0.407,745,0.407,746,0.43,747,0.43,748,0.313,749,0.43,750,0.43,751,0.43,752,0.43,753,0.26,754,0.871,755,1.045,756,0.329,757,0.388,758,0.46,759,0.407,760,0.507,761,0.507,762,0.507,763,0.43,764,0.321,765,0.338,766,0.43,767,0.43,768,0.46,769,0.329,770,0.46,771,0.388,772,0.43,773,0.388,774,0.46,775,0.388,776,1.034,777,0.65,778,0.46,779,0.507,780,0.338,781,0.43,782,0.407,783,0.43,784,0.407,785,0.46,786,0.43,787,0.46,788,0.507,789,0.373,790,0.388,791,0.407,792,0.36,793,0.338,794,0.507,795,0.388,796,0.43,797,0.46,798,0.507,799,0.781,800,0.36,801,0.407,802,0.507]],["component/3",[11,0.17,12,0.288]],["keyword/3",[]],["title/4-1",[394,40.813]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["keyword/4-1",[]],["title/4-2",[43,35.409,292,36.794]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["keyword/4-2",[]],["title/4-3",[137,25.665,347,27.56,803,34.577]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["keyword/4-3",[]],["title/4-4",[101,24.177,137,22.515,804,36.687,805,36.687]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["keyword/4-4",[]],["title/4-5",[10,25.784,24,25.784,806,25.354,807,28.337]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["keyword/4-5",[]],["title/4-6",[74,35.471,806,28.901,808,43.791]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["keyword/4-6",[]],["title/4-7",[807,44.852]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["keyword/4-7",[]],["title/4-8",[22,28.901,137,25.665,347,27.56]],["name/4-8",[]],["text/4-8",[]],["component/4-8",[]],["keyword/4-8",[]],["title/4-9",[61,29.337,101,21.534,137,20.054,298,22.966,414,28.483]],["name/4-9",[]],["text/4-9",[]],["component/4-9",[]],["keyword/4-9",[]],["title/4-10",[809,48.624,810,48.624]],["name/4-10",[]],["text/4-10",[]],["component/4-10",[]],["keyword/4-10",[]],["title/4-11",[74,41.241,811,48.624]],["name/4-11",[]],["text/4-11",[]],["component/4-11",[]],["keyword/4-11",[]],["title/4-12",[46,28.901,812,35.471,813,41.82]],["name/4-12",[]],["text/4-12",[]],["component/4-12",[]],["keyword/4-12",[]],["title/4-13",[11,12.467,199,26.717,406,25.784,602,26.238]],["name/4-13",[]],["text/4-13",[]],["component/4-13",[]],["keyword/4-13",[]],["title/4-14",[36,34.774,631,41.241]],["name/4-14",[]],["text/4-14",[]],["component/4-14",[]],["keyword/4-14",[]],["title/4-15",[633,50.618]],["name/4-15",[]],["text/4-15",[]],["component/4-15",[]],["keyword/4-15",[]],["title/4-16",[456,43.654,629,43.654]],["name/4-16",[]],["text/4-16",[]],["component/4-16",[]],["keyword/4-16",[]],["title/4-17",[634,52.135]],["name/4-17",[]],["text/4-17",[]],["component/4-17",[]],["keyword/4-17",[]],["title/4-18",[635,55.792]],["name/4-18",[]],["text/4-18",[]],["component/4-18",[]],["keyword/4-18",[]],["title/4-19",[74,41.241,630,46.716]],["name/4-19",[]],["text/4-19",[]],["component/4-19",[]],["keyword/4-19",[]],["title/4-20",[11,16.523,814,50.915]],["name/4-20",[]],["text/4-20",[]],["component/4-20",[]],["keyword/4-20",[]],["title/4",[11,11.104,287,29.337,290,24.727,387,20.328,658,31.395]],["name/4",[815,0.31,816,0.45]],["text/4",[0,2.317,1,1.905,2,1.999,3,0.661,6,0.995,7,0.96,8,1.417,9,2.317,10,4.226,11,2.368,12,1.373,13,0.595,15,1.91,18,0.661,20,2.765,21,0.518,22,0.944,24,2.462,29,1.971,36,2.269,44,4.408,45,4.502,46,2.192,50,1.835,51,0.493,53,4.326,54,0.771,59,1.43,61,1.226,63,1.714,66,0.625,68,0.536,74,3.224,82,0.977,83,3.172,86,0.683,89,0.557,95,1.743,96,0.708,100,1.43,101,4.149,106,1.507,109,2.004,110,1.924,111,2.21,112,0.944,115,0.995,116,0.557,117,0.9,118,0.509,119,0.509,120,0.509,121,0.509,122,0.509,123,1.475,124,0.595,126,2.561,127,1.971,128,0.661,129,3.39,130,0.625,137,4.01,139,1.32,145,2.21,147,2.718,148,0.557,150,1.078,151,1.158,153,1.013,154,0.581,155,0.683,160,2.004,162,0.527,164,0.708,170,0.862,172,0.887,173,1.129,174,2.269,175,1.258,177,0.465,180,0.625,181,0.595,191,0.536,192,0.625,194,1.417,197,1.078,198,0.501,199,1.391,200,0.737,211,0.595,219,1.103,220,0.737,226,0.771,236,2.291,246,1.507,255,0.625,259,1.507,260,0.977,274,0.595,275,2.317,276,1.013,278,0.547,283,1.226,285,0.569,287,2.848,288,0.771,290,3.729,294,1.969,297,1.366,298,1.342,302,0.581,305,2.179,306,3.143,308,0.501,312,1.507,317,0.465,323,0.557,324,0.493,337,3.322,342,0.995,343,1.078,344,1.769,345,0.771,347,3.124,359,1.43,360,0.595,362,1.77,365,2.691,371,0.737,372,1.43,374,0.557,387,0.458,390,2.14,395,1.676,396,0.569,406,1.676,409,1.43,414,0.642,415,1.158,416,1.366,419,0.595,420,2.179,426,0.642,428,0.708,429,0.708,432,0.625,434,2.45,437,0.708,438,3.285,439,0.642,451,0.815,456,1.714,457,2.496,463,0.557,470,0.708,471,0.737,472,1.129,475,1.266,477,0.642,479,0.642,480,1.541,482,2.219,485,0.815,492,1.103,497,2.022,501,0.642,506,0.547,513,3.332,516,1.579,517,0.609,521,0.625,522,0.642,525,0.708,532,0.661,535,1.72,538,0.557,552,1.541,554,1.103,562,1.129,592,0.661,597,0.609,602,1.705,603,0.771,629,0.661,630,2.291,631,1.62,633,1.191,634,1.714,635,1.312,645,1.226,647,0.595,652,0.683,660,2.496,663,1.664,666,1.881,668,0.929,670,1.191,671,0.683,674,0.661,677,0.683,680,0.737,684,0.771,686,0.683,706,0.771,707,1.034,728,1.43,734,0.595,743,2.637,754,0.862,765,0.642,771,1.91,792,0.683,793,0.642,803,1.579,804,0.737,805,4.07,806,2.981,807,3.332,808,6.186,809,1.91,810,1.91,811,1.366,812,0.625,813,0.737,814,2.496,817,0.873,818,0.873,819,1.619,820,0.708,821,1.91,822,0.771,823,0.737,824,0.771,825,0.708,826,0.708,827,0.873,828,0.737,829,0.708,830,1.312,831,1.417,832,2.21,833,2.496,834,3.76,835,1.511,836,1.971,837,1.77,838,1.714,839,2.263,840,0.771,841,0.873,842,2.825,843,1.619,844,2.263,845,0.873,846,0.873,847,0.873,848,0.815,849,0.737,850,0.708,851,1.619,852,0.683,853,0.815,854,1.266,855,1.266,856,0.815,857,0.873,858,0.873,859,0.873,860,0.873,861,0.683,862,0.815,863,0.708,864,0.815,865,0.815,866,1.91,867,2.384,868,0.771,869,0.873,870,0.708,871,0.873,872,0.873,873,0.873,874,0.873,875,2.263,876,0.873,877,0.873,878,0.873,879,3.669,880,0.737,881,0.873,882,0.873,883,0.873,884,0.873,885,0.873,886,0.873,887,0.595,888,0.873,889,0.815,890,0.873,891,0.771,892,1.619,893,1.619,894,1.619,895,1.619,896,1.43,897,0.873,898,1.619,899,0.873,900,0.873,901,0.581,902,0.527,903,0.815,904,1.619,905,2.112,906,0.708,907,0.873,908,0.873,909,0.873,910,1.511,911,0.873,912,0.815,913,0.873,914,0.873,915,1.619,916,0.873,917,0.873,918,0.873,919,0.873,920,0.873,921,0.873,922,0.683,923,0.873,924,0.737,925,0.873,926,0.683,927,0.771,928,0.873,929,0.771,930,0.873,931,1.43,932,1.078,933,3,934,0.771,935,0.873,936,0.815,937,0.873,938,0.873,939,0.873,940,0.771,941,0.771,942,0.771,943,0.873,944,0.815,945,0.708,946,0.873,947,0.873,948,0.683,949,0.815,950,0.642,951,0.873,952,1.619,953,2.496,954,0.771,955,0.595,956,0.642,957,0.771,958,0.683,959,0.737,960,0.642,961,0.873,962,0.873,963,0.683,964,0.595,965,0.873,966,0.815,967,1.43,968,0.661,969,0.873,970,0.873,971,0.815,972,1.078,973,0.815,974,1.511,975,0.595,976,0.815,977,0.815,978,0.873,979,0.815,980,0.557,981,0.771,982,1.366,983,0.737,984,0.642,985,0.771,986,0.771,987,0.873,988,0.873,989,0.873,990,0.873]],["component/4",[11,0.17,12,0.288]],["keyword/4",[]],["title/5-1",[11,11.104,44,22.582,101,21.534,137,20.054,420,20.328]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["keyword/5-1",[]],["title/5-2",[9,22.866,933,38.372]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["keyword/5-2",[]],["title/5-3",[9,15.367,365,27.715,806,22.582,837,30.297,838,29.337]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["keyword/5-3",[]],["title/5",[]],["name/5",[815,0.31,840,0.361]],["text/5",[1,2.064,7,1.594,8,3.402,9,2.472,10,2.133,11,2.149,12,1.748,19,0.997,21,2.133,27,1.125,36,0.923,44,5.218,46,2.098,49,1.018,51,2.784,53,1.095,62,1.095,69,0.958,82,1.622,83,3.31,86,2.814,89,1.717,95,0.803,101,3.464,106,2.883,112,3.169,113,1.159,114,1.24,129,2.612,137,1.392,138,2.375,146,1.351,147,1.622,153,4.276,155,1.197,160,2.171,165,1.159,168,1.042,174,1.622,175,1.495,177,1.431,181,1.831,191,1.652,194,1.683,195,1.683,199,0.94,211,1.042,219,1.831,231,1.924,236,1.24,237,2.297,271,1.095,274,1.042,276,0.958,281,1.351,285,2.821,290,0.977,294,2.924,296,1.125,302,1.018,305,2.272,306,2.821,312,1.79,317,0.814,342,1.652,347,0.85,348,1.095,351,1.924,353,0.923,360,3.358,365,4.687,374,0.977,390,1.159,395,0.907,406,2.567,414,1.977,418,1.351,419,1.042,420,2.272,428,2.18,437,1.24,440,1.24,443,1.018,476,2.51,482,1.167,502,1.752,513,0.997,516,1.067,521,1.095,525,1.24,532,2.725,535,4.476,538,0.977,565,1.24,602,0.923,613,1.197,619,1.197,626,1.042,642,1.095,663,1.125,696,1.291,707,0.977,722,1.79,733,1.125,734,1.042,775,1.291,792,1.197,800,1.197,803,1.067,806,4.126,825,1.24,837,3.387,838,1.159,849,1.291,855,1.197,868,1.351,880,3.035,891,1.351,901,3.283,902,6.027,922,1.197,931,1.351,933,3.283,954,1.351,955,2.949,972,2.395,973,2.509,974,3.357,975,1.042,977,1.427,979,3.357,980,0.977,991,2.037,992,2.689,993,6.229,994,2.689,995,2.689,996,2.689,997,2.689,998,4.329,999,2.689,1000,2.689,1001,1.067,1002,1.427,1003,2.689,1004,1.876,1005,2.689,1006,1.351,1007,1.529,1008,1.095,1009,3.357,1010,1.529,1011,1.529,1012,2.689,1013,1.042,1014,1.427,1015,1.529,1016,1.427,1017,1.529,1018,2.037,1019,1.529,1020,1.529,1021,1.159,1022,1.529,1023,1.529,1024,1.159,1025,1.159,1026,1.529,1027,1.351,1028,1.529,1029,1.529,1030,1.529,1031,1.529,1032,1.529,1033,1.529,1034,1.529,1035,1.042,1036,1.529,1037,1.427,1038,1.427,1039,1.529,1040,1.427,1041,1.427,1042,1.427,1043,1.79,1044,1.427,1045,1.427,1046,1.427,1047,1.427,1048,1.427,1049,1.427,1050,3.357,1051,1.529,1052,1.529,1053,1.529,1054,3.035,1055,1.427,1056,1.427,1057,1.876,1058,1.427,1059,1.529,1060,1.427,1061,1.427,1062,1.427,1063,1.427,1064,5.072,1065,5.434,1066,2.689,1067,2.689,1068,2.689,1069,2.689,1070,1.529,1071,1.529,1072,1.24,1073,1.351,1074,1.291,1075,1.351,1076,1.427,1077,1.529,1078,1.977,1079,1.427]],["component/5",[11,0.17,12,0.288]],["keyword/5",[]],["title/6-1",[11,11.104,83,21.868,362,30.297,823,32.677,824,34.216]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["keyword/6-1",[]],["title/6-2",[9,17.253,11,12.467,223,31.979,535,22.515]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["keyword/6-2",[]],["title/6-3",[9,15.367,11,11.104,95,20.328,426,28.483,535,20.054]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["keyword/6-3",[]],["title/6",[]],["name/6",[815,0.31,910,0.381]],["text/6",[1,0.851,7,0.88,9,1.919,11,2.507,18,1.124,20,0.988,22,2.048,24,1.553,28,2.289,44,2.819,51,3.014,53,1.062,54,2.313,55,0.988,66,1.874,68,0.912,69,1.639,82,3.701,83,4.61,87,1.252,89,1.672,95,3.667,101,0.825,109,0.896,111,3.068,112,1.527,115,0.912,116,1.672,117,2.356,118,1.527,119,2.048,120,2.471,121,2.471,122,2.819,123,0.967,125,1.062,126,1.011,127,1.035,128,1.983,129,2.918,137,0.768,139,0.865,147,0.896,149,1.091,156,0.929,160,3.479,162,2.12,165,1.124,167,0.825,170,0.79,173,1.035,174,0.896,175,0.825,177,2.574,182,1.011,186,1.091,190,0.851,191,2.604,194,1.639,195,0.929,196,1.203,198,0.851,217,2.083,218,0.929,219,1.011,221,1.124,223,1.926,228,1.062,232,0.967,239,1.062,242,2.339,243,2.393,245,1.011,246,1.743,255,1.062,256,1.035,264,1.011,284,2.313,285,0.967,290,2.243,294,1.553,297,1.58,305,1.844,306,2.289,308,2.774,309,1.706,317,0.79,324,1.984,342,2.159,343,0.988,344,1.639,346,1.203,347,2.356,350,1.478,353,1.58,357,1.203,362,2.748,374,0.948,390,1.124,395,4.143,401,1.091,406,2.083,417,1.124,419,1.783,426,1.091,428,1.203,438,1.783,462,2.313,463,0.948,471,1.252,472,1.035,477,1.091,478,0.967,479,1.091,480,1.783,481,0.967,482,1.525,483,1.783,492,1.011,494,1.203,497,1.062,506,0.929,514,2.122,516,1.035,524,2.514,526,2.451,527,1.062,535,4.912,538,2.705,542,2.748,545,1.311,554,2.886,555,1.252,570,1.062,571,1.062,572,1.035,573,1.035,574,1.035,575,1.035,581,1.706,588,2.514,590,1.926,595,2.122,597,1.035,599,2.584,600,1.926,601,1.385,602,1.58,603,2.313,605,1.203,609,1.091,610,1.826,620,0.896,623,1.091,638,1.124,645,2.661,666,2.821,668,0.851,670,1.091,671,1.161,677,2.048,679,2.584,683,1.203,704,2.584,707,0.948,737,1.161,748,1.011,754,0.79,755,0.948,764,1.035,765,1.091,780,1.091,789,1.203,800,2.048,806,3.577,807,0.967,821,1.252,822,1.311,823,1.252,824,4.272,862,1.385,901,0.988,902,3.221,927,1.311,932,0.988,948,1.161,953,3.744,956,1.091,958,2.048,960,1.091,976,1.385,980,0.948,984,1.926,986,1.311,1054,2.209,1055,1.385,1056,1.385,1057,4.503,1058,1.385,1060,1.385,1061,1.385,1062,1.385,1063,2.444,1080,1.484,1081,1.091,1082,1.311,1083,1.311,1084,1.484,1085,1.252,1086,1.311,1087,1.161,1088,1.385,1089,1.484,1090,1.385,1091,1.385,1092,1.385,1093,1.311,1094,1.484,1095,1.311,1096,2.209,1097,1.124,1098,1.385,1099,1.484,1100,1.062,1101,1.385,1102,1.385,1103,1.484,1104,1.203,1105,1.484,1106,1.385,1107,4.126,1108,1.311,1109,1.311,1110,1.385,1111,1.385,1112,1.385,1113,1.484,1114,1.203,1115,1.203,1116,1.385,1117,1.385,1118,1.484,1119,1.252,1120,1.385,1121,1.385,1122,1.035,1123,1.385,1124,1.385,1125,1.983,1126,1.385,1127,1.484,1128,1.311,1129,1.311,1130,2.618,1131,2.618,1132,2.618,1133,1.484,1134,1.484,1135,1.484,1136,1.484,1137,1.385,1138,1.252,1139,2.048,1140,1.203]],["component/6",[11,0.17,12,0.288]],["keyword/6",[]],["title/7-1",[117,24.177,137,22.515,177,23.142,298,25.784]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["keyword/7-1",[]],["title/7-2",[420,26.016,1013,33.759,1141,26.016]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["keyword/7-2",[]],["title/7-3",[420,26.016,754,26.38,1141,26.016]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["keyword/7-3",[]],["title/7-4",[420,26.016,754,26.38,1141,26.016]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["keyword/7-4",[]],["title/7-5",[10,34.173,83,32.54]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["keyword/7-5",[]],["title/7-6",[111,30.671,344,36.081]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["keyword/7-6",[]],["title/7-7",[294,34.173,1142,41.241]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["keyword/7-7",[]],["title/7-8",[344,36.081,955,39.25]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["keyword/7-8",[]],["title/7-9",[1,33.059,83,32.54]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["keyword/7-9",[]],["title/7-10",[68,35.409,1142,41.241]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["keyword/7-10",[]],["title/7",[]],["name/7",[815,0.31,1143,0.45]],["text/7",[1,2.547,6,1.091,7,0.572,8,2.78,9,2.253,10,2.846,11,1.157,12,0.469,20,2.956,22,0.563,24,1.053,28,0.629,29,4.787,36,2.16,37,2.179,44,0.563,46,1.438,48,0.673,49,3.196,51,1.393,53,0.691,63,0.731,67,0.629,69,0.604,73,0.755,82,0.582,83,4.243,89,0.616,95,1.607,101,0.987,102,0.731,106,2.956,110,1.209,111,0.514,112,1.438,115,0.593,117,3.011,118,1.035,124,1.209,126,1.209,127,1.239,132,0.782,137,1.277,139,0.563,143,0.755,145,1.389,147,2.16,148,1.955,149,0.71,150,2.039,153,2.527,154,0.642,155,0.755,156,0.604,159,1.575,160,1.071,162,1.071,168,0.657,170,1.313,173,1.72,174,2.679,175,3.816,176,1.306,177,3.151,181,0.657,182,2.085,183,2.801,190,1.415,191,1.091,194,1.112,195,1.544,197,0.642,198,2.315,209,0.604,211,0.657,213,1.544,224,0.782,236,2.482,237,1.134,245,1.209,271,1.765,276,0.604,278,1.917,285,0.629,287,1.345,290,1.575,294,2.123,295,0.853,297,0.582,298,3.762,302,0.642,305,0.932,312,1.182,321,2.679,323,0.616,342,0.593,343,0.642,344,4.088,347,0.537,350,2.71,360,1.209,362,0.755,364,0.782,365,3.435,366,0.642,368,2.252,371,0.814,374,2.577,381,0.814,387,0.932,390,1.868,395,0.572,411,0.691,413,1.157,416,0.814,420,2.689,428,1.439,432,0.691,434,0.629,435,0.731,443,1.642,456,2.319,463,0.616,476,0.673,478,0.629,479,0.71,482,2.224,506,1.917,513,0.629,516,1.239,521,0.691,522,1.306,526,0.673,535,0.5,552,0.657,558,1.306,581,0.629,583,1.209,592,0.731,602,2.435,610,1.239,620,1.071,626,0.657,629,2.319,630,2.482,631,3.666,633,1.814,634,2.319,635,2.902,651,0.731,652,0.755,689,0.853,694,0.782,695,1.306,698,0.71,707,0.616,722,1.182,728,0.853,729,0.673,730,0.814,733,0.71,737,0.755,744,0.853,745,0.853,748,1.209,753,2.71,754,2.363,755,3.457,757,0.814,764,1.239,765,0.71,769,1.271,777,0.71,795,0.814,806,1.035,807,1.157,826,1.439,831,1.544,837,0.755,838,0.731,849,0.814,865,0.901,866,2.081,868,4.526,880,3.021,887,0.657,896,0.853,901,1.642,902,4.535,922,1.389,931,1.569,932,3.942,933,2.384,945,2.482,955,0.657,960,0.71,963,1.389,964,4.448,967,0.853,975,0.657,980,0.616,981,2.705,982,0.814,984,0.71,985,0.853,1001,1.72,1002,5.054,1004,0.673,1008,1.271,1013,1.209,1014,0.901,1016,0.901,1018,0.731,1021,0.731,1025,1.345,1027,0.853,1035,2.085,1037,0.901,1038,0.901,1040,0.901,1041,0.901,1042,0.901,1043,3.411,1044,0.901,1045,0.901,1046,0.901,1047,0.901,1048,0.901,1049,0.901,1072,0.782,1073,0.853,1074,2.081,1093,0.853,1141,3.428,1142,0.691,1144,0.965,1145,0.965,1146,0.965,1147,1.569,1148,1.439,1149,0.901,1150,0.901,1151,0.901,1152,2.749,1153,0.901,1154,0.965,1155,0.901,1156,0.901,1157,0.901,1158,1.569,1159,1.569,1160,2.384,1161,2.633,1162,1.765,1163,1.439,1164,0.853,1165,0.901,1166,0.814,1167,1.868,1168,0.965,1169,1.775,1170,0.782,1171,0.965,1172,0.755,1173,0.853,1174,0.901,1175,0.71,1176,0.853,1177,3.057,1178,1.868,1179,0.965,1180,0.814,1181,0.965,1182,0.782,1183,0.731,1184,0.755,1185,0.814,1186,0.782,1187,0.814,1188,0.782,1189,0.755,1190,1.306,1191,1.345,1192,0.965,1193,1.775,1194,0.965,1195,2.179,1196,1.657,1197,0.853,1198,0.965,1199,0.965,1200,2.466,1201,0.965,1202,0.965,1203,1.439,1204,2.902,1205,0.782,1206,1.498,1207,1.498,1208,0.853,1209,1.775,1210,0.782,1211,0.965,1212,0.965,1213,0.965,1214,1.775,1215,2.252,1216,1.999,1217,0.901,1218,2.857,1219,2.302,1220,0.853,1221,0.965,1222,0.755,1223,1.498,1224,0.901,1225,0.965,1226,0.814,1227,0.965,1228,0.965,1229,0.901,1230,1.657,1231,0.965,1232,0.901,1233,0.965,1234,0.965,1235,0.965,1236,0.965,1237,0.965,1238,0.965,1239,0.965,1240,0.965,1241,0.965,1242,0.965,1243,0.965,1244,0.965,1245,0.965,1246,0.965,1247,0.965,1248,1.775,1249,1.775,1250,2.466,1251,0.965,1252,0.965,1253,0.965,1254,0.965,1255,0.965,1256,0.965,1257,0.965,1258,1.775,1259,0.965,1260,0.965,1261,0.901,1262,0.965,1263,0.965,1264,0.965,1265,0.965,1266,0.901,1267,0.901,1268,0.853,1269,0.853,1270,0.853,1271,0.965,1272,0.965,1273,0.853,1274,0.965]],["component/7",[11,0.17,12,0.288]],["keyword/7",[]],["title/8-1",[111,30.671,153,36.081]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["keyword/8-1",[]],["title/8-2",[1,24.943,153,27.223,806,25.354,1004,30.333]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["keyword/8-2",[]],["title/8-3",[831,36.081,1008,41.241]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["keyword/8-3",[]],["title/8-4",[754,36.63]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["keyword/8-4",[]],["title/8",[]],["name/8",[815,0.31,1275,0.45]],["text/8",[1,3.238,6,2.98,7,1.352,8,2.369,9,1.924,10,2.876,11,2.296,20,2.519,21,1.352,24,1.352,36,1.376,38,2.128,44,2.828,46,2.828,69,1.428,95,1.197,111,4.133,116,1.456,120,1.33,121,1.33,123,1.486,129,1.376,139,2.206,147,2.926,148,1.456,151,1.632,153,6.021,156,1.428,159,1.456,160,1.376,164,1.849,168,1.553,170,2.014,174,2.283,175,2.696,177,2.014,180,1.632,191,3.468,211,1.553,237,4.566,238,1.924,259,1.518,264,1.553,268,2.708,274,1.553,280,1.591,285,1.486,290,2.416,296,2.783,297,1.376,308,2.171,317,2.014,335,1.784,342,1.401,344,1.428,353,1.376,364,1.849,365,4.48,371,1.924,374,2.416,387,1.197,390,1.727,419,1.553,420,1.986,432,1.632,463,2.416,465,1.784,476,1.591,481,3.678,482,1.642,506,1.428,514,1.849,526,1.591,535,1.181,562,1.591,564,1.784,586,1.727,623,2.783,645,1.727,667,1.727,692,1.849,707,2.416,733,1.677,755,3.096,756,1.632,771,3.193,776,3.067,780,2.783,803,1.591,806,4.364,825,1.849,831,2.369,833,3.343,835,2.128,836,2.64,838,2.866,852,1.784,880,3.193,901,1.518,902,5.327,922,1.784,932,4.762,950,2.783,964,1.553,975,1.553,984,1.677,991,1.727,1001,1.591,1004,3.938,1006,2.015,1018,1.727,1081,1.677,1137,2.128,1141,2.963,1152,1.553,1160,1.518,1161,1.677,1172,2.96,1177,5.114,1178,1.727,1180,1.924,1182,1.849,1183,1.727,1191,1.727,1205,1.849,1216,1.849,1220,3.343,1276,5.644,1277,2.28,1278,3.067,1279,2.28,1280,2.28,1281,2.28,1282,2.28,1283,2.28,1284,2.28,1285,4.092,1286,2.28,1287,2.28,1288,2.28,1289,2.28,1290,3.784,1291,3.784,1292,3.784,1293,6.26,1294,1.849,1295,2.015,1296,2.128,1297,2.783,1298,3.674,1299,2.015,1300,1.553,1301,2.128,1302,2.128,1303,2.128,1304,3.784,1305,2.128,1306,2.28,1307,2.28,1308,2.128,1309,2.128,1310,1.924]],["component/8",[11,0.17,12,0.288]],["keyword/8",[]],["title/9-1",[964,39.25,972,38.372]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["keyword/9-1",[]],["title/9",[]],["name/9",[815,0.31,1311,0.45]],["text/9",[0,1.505,6,2.864,7,1.279,9,2.163,11,1.036,15,1.82,19,1.406,21,2.142,24,1.279,28,2.354,46,1.258,49,1.436,73,1.688,76,5.773,82,1.302,89,1.377,95,1.132,101,1.2,111,2.481,112,2.107,115,2.22,116,2.976,117,3.031,118,3.539,129,1.302,142,5.617,147,1.302,150,1.436,151,1.544,154,1.436,156,1.351,159,1.377,162,1.302,163,1.688,174,1.302,175,1.2,177,4.481,180,5.617,181,1.469,182,1.469,184,1.688,186,3.428,188,2.013,190,4,197,2.406,198,1.238,201,2.18,202,1.749,209,3.413,212,1.749,217,1.279,227,1.688,231,3.336,260,1.302,279,2.013,307,1.587,318,1.82,320,1.906,323,2.307,353,1.302,366,1.436,387,1.132,395,1.279,415,1.544,434,1.406,437,1.749,439,1.587,443,2.406,478,2.354,480,2.461,482,1.568,506,1.351,507,1.634,517,1.505,522,1.587,527,1.544,531,1.505,532,1.634,538,2.307,568,2.929,581,2.354,597,1.505,617,2.929,620,2.18,642,2.585,649,1.505,720,3.531,729,3.252,730,1.82,734,1.469,748,1.469,753,1.218,754,4.046,850,1.749,902,6.402,964,4.749,972,2.406,980,3.481,1013,5.346,1100,1.544,1141,4.332,1148,2.929,1176,1.906,1177,1.634,1294,1.749,1300,1.469,1312,3.372,1313,1.906,1314,2.157,1315,1.906,1316,2.013,1317,1.82,1318,2.157,1319,2.157,1320,2.013,1321,2.013,1322,1.82,1323,1.749,1324,2.157,1325,2.657,1326,2.013,1327,2.157,1328,2.157,1329,3.613,1330,2.157,1331,2.157]],["component/9",[11,0.17,12,0.288]],["keyword/9",[]],["title/10-1",[403,64.233]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["keyword/10-1",[]],["title/10",[]],["name/10",[815,0.31,1332,0.45]],["text/10",[1,3.463,6,2.547,9,2.395,20,2.76,22,2.417,24,2.458,46,2.417,61,3.14,83,4.899,86,3.243,87,6.007,101,4.98,115,2.547,117,3.357,126,4.849,129,3.643,130,2.966,137,4.493,153,3.78,160,4.296,170,2.206,175,2.305,177,3.213,202,3.36,237,2.647,278,2.595,283,3.14,294,2.458,298,2.458,323,3.854,344,3.78,347,5.103,382,3.498,395,3.58,434,2.701,436,6.291,463,2.647,478,2.701,497,2.966,498,3.498,515,3.36,552,4.112,562,2.892,592,3.14,602,4.296,677,3.243,683,3.36,723,3.049,737,3.243,754,2.206,769,2.966,804,3.498,805,3.498,809,3.498,810,3.498,811,3.498,812,2.966,813,3.498,828,3.498,829,3.36,830,3.36,922,3.243,933,2.76,963,3.243,966,3.869,1004,2.892,1035,2.823,1064,3.869,1147,3.662,1148,3.36,1333,4.145,1334,4.145,1335,4.145,1336,4.145,1337,4.145,1338,4.145,1339,4.145,1340,3.869,1341,3.869,1342,3.498,1343,3.662]],["component/10",[11,0.17,12,0.288]],["keyword/10",[]],["title/11-1",[394,40.813]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["keyword/11-1",[]],["title/11-2",[43,35.409,292,36.794]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["keyword/11-2",[]],["title/11-3",[137,25.665,347,27.56,803,34.577]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["keyword/11-3",[]],["title/11-4",[101,24.177,137,22.515,804,36.687,805,36.687]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["keyword/11-4",[]],["title/11-5",[10,25.784,24,25.784,806,25.354,807,28.337]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["keyword/11-5",[]],["title/11-6",[74,35.471,806,28.901,808,43.791]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["keyword/11-6",[]],["title/11-7",[807,44.852]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["keyword/11-7",[]],["title/11-8",[22,28.901,137,25.665,347,27.56]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["keyword/11-8",[]],["title/11-9",[61,29.337,101,21.534,137,20.054,298,22.966,414,28.483]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["keyword/11-9",[]],["title/11-10",[809,48.624,810,48.624]],["name/11-10",[]],["text/11-10",[]],["component/11-10",[]],["keyword/11-10",[]],["title/11-11",[74,41.241,811,48.624]],["name/11-11",[]],["text/11-11",[]],["component/11-11",[]],["keyword/11-11",[]],["title/11-12",[46,28.901,812,35.471,813,41.82]],["name/11-12",[]],["text/11-12",[]],["component/11-12",[]],["keyword/11-12",[]],["title/11-13",[11,12.467,199,26.717,406,25.784,602,26.238]],["name/11-13",[]],["text/11-13",[]],["component/11-13",[]],["keyword/11-13",[]],["title/11-14",[36,34.774,631,41.241]],["name/11-14",[]],["text/11-14",[]],["component/11-14",[]],["keyword/11-14",[]],["title/11-15",[633,50.618]],["name/11-15",[]],["text/11-15",[]],["component/11-15",[]],["keyword/11-15",[]],["title/11-16",[456,43.654,629,43.654]],["name/11-16",[]],["text/11-16",[]],["component/11-16",[]],["keyword/11-16",[]],["title/11-17",[634,52.135]],["name/11-17",[]],["text/11-17",[]],["component/11-17",[]],["keyword/11-17",[]],["title/11-18",[635,55.792]],["name/11-18",[]],["text/11-18",[]],["component/11-18",[]],["keyword/11-18",[]],["title/11-19",[74,41.241,630,46.716]],["name/11-19",[]],["text/11-19",[]],["component/11-19",[]],["keyword/11-19",[]],["title/11-20",[11,16.523,814,50.915]],["name/11-20",[]],["text/11-20",[]],["component/11-20",[]],["keyword/11-20",[]],["title/11-21",[9,22.866,933,38.372]],["name/11-21",[]],["text/11-21",[]],["component/11-21",[]],["keyword/11-21",[]],["title/11-22",[9,15.367,365,27.715,806,22.582,837,30.297,838,29.337]],["name/11-22",[]],["text/11-22",[]],["component/11-22",[]],["keyword/11-22",[]],["title/11-23",[9,17.253,11,12.467,223,31.979,535,22.515]],["name/11-23",[]],["text/11-23",[]],["component/11-23",[]],["keyword/11-23",[]],["title/11-24",[9,15.367,11,11.104,95,20.328,426,28.483,535,20.054]],["name/11-24",[]],["text/11-24",[]],["component/11-24",[]],["keyword/11-24",[]],["title/11-25",[420,26.016,1013,33.759,1141,26.016]],["name/11-25",[]],["text/11-25",[]],["component/11-25",[]],["keyword/11-25",[]],["title/11-26",[420,26.016,754,26.38,1141,26.016]],["name/11-26",[]],["text/11-26",[]],["component/11-26",[]],["keyword/11-26",[]],["title/11-27",[420,26.016,754,26.38,1141,26.016]],["name/11-27",[]],["text/11-27",[]],["component/11-27",[]],["keyword/11-27",[]],["title/11-28",[10,34.173,83,32.54]],["name/11-28",[]],["text/11-28",[]],["component/11-28",[]],["keyword/11-28",[]],["title/11-29",[111,30.671,344,36.081]],["name/11-29",[]],["text/11-29",[]],["component/11-29",[]],["keyword/11-29",[]],["title/11-30",[294,34.173,1142,41.241]],["name/11-30",[]],["text/11-30",[]],["component/11-30",[]],["keyword/11-30",[]],["title/11-31",[344,36.081,955,39.25]],["name/11-31",[]],["text/11-31",[]],["component/11-31",[]],["keyword/11-31",[]],["title/11-32",[1,33.059,83,32.54]],["name/11-32",[]],["text/11-32",[]],["component/11-32",[]],["keyword/11-32",[]],["title/11-33",[68,35.409,1142,41.241]],["name/11-33",[]],["text/11-33",[]],["component/11-33",[]],["keyword/11-33",[]],["title/11-34",[1,24.943,153,27.223,806,25.354,1004,30.333]],["name/11-34",[]],["text/11-34",[]],["component/11-34",[]],["keyword/11-34",[]],["title/11-35",[831,36.081,1008,41.241]],["name/11-35",[]],["text/11-35",[]],["component/11-35",[]],["keyword/11-35",[]],["title/11-36",[754,36.63]],["name/11-36",[]],["text/11-36",[]],["component/11-36",[]],["keyword/11-36",[]],["title/11-37",[403,64.233]],["name/11-37",[]],["text/11-37",[]],["component/11-37",[]],["keyword/11-37",[]],["title/11",[11,11.104,287,29.337,290,24.727,387,20.328,658,31.395]],["name/11",[815,0.591]],["text/11",[0,0.946,1,2.152,2,0.638,3,0.191,6,1.387,7,1.03,8,2.047,9,2.274,10,2.95,11,2.16,12,0.844,13,0.171,15,0.795,18,0.373,19,0.321,20,2.177,21,0.92,22,0.904,24,1.614,27,0.185,28,0.884,29,2.537,36,1.552,37,0.638,38,0.235,44,3.793,45,1.79,46,1.831,48,0.176,49,1.392,50,0.586,51,1.618,53,2.247,54,0.638,55,0.168,59,0.435,61,0.547,62,0.18,63,0.714,66,0.517,67,0.164,68,0.302,69,0.722,73,0.385,74,1.244,76,1.537,82,1.642,83,3.792,86,0.903,87,0.795,89,0.99,95,2.027,96,0.204,100,0.435,101,3.118,102,0.191,106,1.812,109,0.818,110,0.924,111,2.327,112,1.671,113,0.191,114,0.204,115,0.953,116,0.99,117,2.148,118,1.219,119,0.55,120,0.791,121,0.791,122,0.791,123,0.752,124,0.492,125,0.18,126,1.646,127,1.082,128,0.547,129,2.459,130,0.352,132,0.204,137,2.802,138,0.435,139,0.904,142,1.496,143,0.197,145,1.061,146,0.222,147,2.123,148,0.866,149,0.362,150,1.033,151,0.675,153,3.588,154,0.481,155,0.565,156,0.59,159,0.737,160,2.194,162,0.936,163,0.197,164,0.399,165,0.373,167,0.14,168,0.492,170,1.02,172,0.27,173,0.946,174,2.049,175,2.431,176,0.362,177,2.768,180,1.73,181,0.786,182,0.924,183,0.903,184,0.197,186,0.693,188,0.235,190,1.295,191,1.58,192,0.18,194,1.2,195,0.849,196,0.204,197,0.768,198,1.1,199,0.579,200,0.212,201,0.297,202,0.399,209,0.722,211,0.642,212,0.204,213,0.452,217,0.559,218,0.158,219,0.786,220,0.212,221,0.191,223,0.362,224,0.204,226,0.222,227,0.197,228,0.18,231,0.826,232,0.164,236,1.554,237,1.642,238,0.212,239,0.18,242,0.481,243,0.492,245,0.492,246,0.768,255,0.352,256,0.176,259,0.628,260,0.436,264,0.335,268,0.352,271,0.675,274,0.492,275,0.805,276,0.59,278,0.849,279,0.235,280,0.176,281,0.222,283,0.547,284,0.435,285,1.132,287,1.316,288,0.222,290,2.395,294,1.939,295,0.222,296,0.531,297,0.936,298,2.014,302,0.481,305,1.577,306,1.958,307,0.185,308,0.997,309,0.321,312,1.033,317,0.614,318,0.212,320,0.222,321,0.936,323,0.866,324,0.532,335,0.197,337,1.198,342,1.178,343,0.628,344,2.486,345,0.222,346,0.204,347,2.322,348,0.18,350,1.18,351,0.352,353,0.696,357,0.204,359,0.435,360,1.184,362,1.359,364,0.399,365,3.129,366,0.328,368,0.693,371,0.609,372,0.435,374,1.441,381,0.212,382,0.212,387,0.606,390,1.583,395,2.086,396,0.164,401,0.185,406,1.338,409,0.435,411,0.18,413,0.321,414,0.531,415,0.517,416,0.609,417,0.191,418,0.222,419,0.786,420,2.027,426,0.362,428,1.1,429,0.204,432,0.517,434,1.25,435,0.191,436,0.638,437,0.586,438,1.537,439,0.362,440,0.204,443,0.903,451,0.235,456,1.175,457,0.833,462,0.435,463,0.866,465,0.197,470,0.204,471,0.415,472,0.504,475,0.385,476,0.805,477,0.362,478,0.752,479,0.531,480,1.056,481,0.752,482,1.897,483,0.335,485,0.235,492,0.492,494,0.204,497,0.971,498,0.212,501,0.185,502,0.321,506,1.088,507,0.191,513,1.575,514,0.586,515,0.204,516,1.082,517,0.343,521,0.517,522,0.693,524,0.517,525,0.399,526,0.805,527,0.352,531,0.176,532,0.874,535,3.498,538,1.109,542,0.565,545,0.222,552,0.924,554,0.924,555,0.212,558,0.362,562,0.658,564,0.197,565,0.204,568,0.399,570,0.18,571,0.18,572,0.176,573,0.176,574,0.176,575,0.176,581,0.752,583,0.335,586,0.191,588,0.517,590,0.362,592,0.547,595,0.399,597,0.504,599,0.531,600,0.362,601,0.235,602,1.813,603,0.638,605,0.204,609,0.185,610,0.658,613,0.197,617,0.399,619,0.197,620,0.696,623,0.531,626,0.335,629,0.874,630,1.409,631,1.73,633,0.849,634,1.175,635,1.257,638,0.191,642,0.517,645,1.027,647,0.171,649,0.176,651,0.191,652,0.385,660,0.833,663,0.693,666,1.157,667,0.191,668,0.414,670,0.531,671,0.385,674,0.191,677,0.737,679,0.531,680,0.212,683,0.399,684,0.222,686,0.197,689,0.222,692,0.204,694,0.204,695,0.362,696,0.212,698,0.185,704,0.531,706,0.222,707,0.99,720,0.547,722,0.628,723,0.185,728,0.638,729,0.658,730,0.415,733,0.531,734,0.492,737,0.565,743,0.88,744,0.222,745,0.222,748,0.642,753,1.083,754,1.873,755,1.738,756,0.18,757,0.212,764,0.504,765,0.531,769,0.517,771,0.973,775,0.212,776,0.399,777,0.185,780,0.531,789,0.204,792,0.385,793,0.185,795,0.212,800,0.565,803,0.805,804,0.415,805,1.764,806,3.075,807,1.676,808,3.109,809,0.795,810,0.795,811,0.609,812,0.352,813,0.415,814,0.833,817,0.252,818,0.252,819,0.492,820,0.204,821,0.795,822,0.435,823,0.609,824,1.37,825,0.586,826,0.586,827,0.252,828,0.415,829,0.399,830,0.586,831,1.088,832,0.737,833,1.198,834,1.356,835,0.674,836,0.946,837,1.359,838,1.175,839,0.722,840,0.222,841,0.252,842,0.943,843,0.492,844,0.722,845,0.252,846,0.252,847,0.252,848,0.235,849,0.609,850,0.399,851,0.492,852,0.385,853,0.235,854,0.385,855,0.565,856,0.235,857,0.252,858,0.252,859,0.252,860,0.252,861,0.197,862,0.459,863,0.204,864,0.235,865,0.459,866,1.144,867,0.795,868,1.994,869,0.252,870,0.204,871,0.252,872,0.252,873,0.252,874,0.252,875,0.722,876,0.252,877,0.252,878,0.252,879,1.37,880,1.904,881,0.252,882,0.252,883,0.252,884,0.252,885,0.252,886,0.252,887,0.335,888,0.252,889,0.235,890,0.252,891,0.435,892,0.492,893,0.492,894,0.492,895,0.492,896,0.638,897,0.252,898,0.492,899,0.252,900,0.252,901,1.503,902,5.482,903,0.235,904,0.492,905,0.674,906,0.204,907,0.252,908,0.252,909,0.252,910,0.459,911,0.252,912,0.235,913,0.252,914,0.252,915,0.492,916,0.252,917,0.252,918,0.252,919,0.252,920,0.252,921,0.252,922,1.061,923,0.252,924,0.212,925,0.252,926,0.197,927,0.435,928,0.252,929,0.222,930,0.252,931,1.019,932,2.498,933,2.261,934,0.222,935,0.252,936,0.235,937,0.252,938,0.252,939,0.252,940,0.222,941,0.222,942,0.222,943,0.252,944,0.235,945,0.935,946,0.252,947,0.252,948,0.385,949,0.235,950,0.531,951,0.252,952,0.492,953,1.535,954,0.435,955,0.924,956,0.362,957,0.222,958,0.565,959,0.212,960,0.531,961,0.252,962,0.252,963,0.737,964,2.776,965,0.252,966,0.459,967,0.638,968,0.191,969,0.252,970,0.252,971,0.235,972,1.157,973,0.674,974,1.077,975,0.642,976,0.459,977,0.459,978,0.252,979,0.88,980,1.109,981,1.019,982,0.609,983,0.212,984,0.849,985,0.435,986,0.435,987,0.252,988,0.252,989,0.252,990,0.252,991,0.547,992,0.492,993,1.738,994,0.492,995,0.492,996,0.492,997,0.492,998,0.943,999,0.492,1000,0.492,1001,0.805,1002,2.106,1003,0.492,1004,1.212,1005,0.492,1006,0.435,1007,0.252,1008,0.517,1009,0.674,1010,0.252,1011,0.252,1012,0.492,1013,1.752,1014,0.459,1015,0.252,1016,0.459,1017,0.252,1018,0.714,1019,0.252,1020,0.252,1021,0.373,1022,0.252,1023,0.252,1024,0.191,1025,0.547,1026,0.252,1027,0.435,1028,0.252,1029,0.252,1030,0.252,1031,0.252,1032,0.252,1033,0.252,1034,0.252,1035,0.924,1036,0.252,1037,0.459,1038,0.459,1039,0.252,1040,0.459,1041,0.459,1042,0.459,1043,1.503,1044,0.459,1045,0.459,1046,0.459,1047,0.459,1048,0.459,1049,0.459,1050,0.674,1051,0.252,1052,0.252,1053,0.252,1054,0.973,1055,0.459,1056,0.459,1057,1.574,1058,0.459,1059,0.252,1060,0.459,1061,0.459,1062,0.459,1063,0.674,1064,1.447,1065,1.356,1066,0.492,1067,0.492,1068,0.492,1069,0.492,1070,0.252,1071,0.252,1072,0.399,1073,0.435,1074,0.795,1075,0.222,1076,0.235,1077,0.252,1078,0.362,1079,0.235,1080,0.252,1081,0.362,1082,0.222,1083,0.222,1084,0.252,1085,0.212,1086,0.222,1087,0.197,1088,0.235,1089,0.252,1090,0.235,1091,0.235,1092,0.235,1093,0.435,1094,0.252,1095,0.222,1096,0.415,1097,0.191,1098,0.235,1099,0.252,1100,0.352,1101,0.235,1102,0.235,1103,0.252,1104,0.204,1105,0.252,1106,0.235,1107,1.11,1108,0.222,1109,0.222,1110,0.235,1111,0.235,1112,0.235,1113,0.252,1114,0.204,1115,0.204,1116,0.235,1117,0.235,1118,0.252,1119,0.212,1120,0.235,1121,0.235,1122,0.176,1123,0.235,1124,0.235,1125,0.373,1126,0.235,1127,0.252,1128,0.222,1129,0.222,1130,0.492,1131,0.492,1132,0.492,1133,0.252,1134,0.252,1135,0.252,1136,0.252,1137,0.459,1138,0.212,1139,0.385,1140,0.204,1141,2.438,1142,0.18,1144,0.252,1145,0.252,1146,0.252,1147,0.638,1148,0.935,1149,0.235,1150,0.235,1151,0.235,1152,1.056,1153,0.235,1154,0.252,1155,0.235,1156,0.235,1157,0.235,1158,0.435,1159,0.435,1160,0.903,1161,0.998,1162,0.517,1163,0.399,1164,0.222,1165,0.235,1166,0.212,1167,0.547,1168,0.252,1169,0.492,1170,0.204,1171,0.252,1172,0.565,1173,0.222,1174,0.235,1175,0.185,1176,0.435,1177,1.948,1178,0.714,1179,0.252,1180,0.415,1181,0.252,1182,0.399,1183,0.373,1184,0.197,1185,0.212,1186,0.204,1187,0.212,1188,0.204,1189,0.197,1190,0.362,1191,0.547,1192,0.252,1193,0.492,1194,0.252,1195,0.638,1196,0.459,1197,0.222,1198,0.252,1199,0.252,1200,0.722,1201,0.252,1202,0.252,1203,0.399,1204,0.935,1205,0.399,1206,0.415,1207,0.415,1208,0.222,1209,0.492,1210,0.204,1211,0.252,1212,0.252,1213,0.252,1214,0.492,1215,0.693,1216,0.764,1217,0.235,1218,0.88,1219,0.674,1220,0.638,1221,0.252,1222,0.197,1223,0.415,1224,0.235,1225,0.252,1226,0.212,1227,0.252,1228,0.252,1229,0.235,1230,0.459,1231,0.252,1232,0.235,1233,0.252,1234,0.252,1235,0.252,1236,0.252,1237,0.252,1238,0.252,1239,0.252,1240,0.252,1241,0.252,1242,0.252,1243,0.252,1244,0.252,1245,0.252,1246,0.252,1247,0.252,1248,0.492,1249,0.492,1250,0.722,1251,0.252,1252,0.252,1253,0.252,1254,0.252,1255,0.252,1256,0.252,1257,0.252,1258,0.492,1259,0.252,1260,0.252,1261,0.235,1262,0.252,1263,0.252,1264,0.252,1265,0.252,1266,0.235,1267,0.235,1268,0.222,1269,0.222,1270,0.222,1271,0.252,1272,0.252,1273,0.222,1274,0.252,1276,0.943,1277,0.252,1278,0.399,1279,0.252,1280,0.252,1281,0.252,1282,0.252,1283,0.252,1284,0.252,1285,0.609,1286,0.252,1287,0.252,1288,0.252,1289,0.252,1290,0.492,1291,0.492,1292,0.492,1293,1.154,1294,0.399,1295,0.222,1296,0.235,1297,0.362,1298,0.547,1299,0.222,1300,0.335,1301,0.235,1302,0.235,1303,0.235,1304,0.492,1305,0.235,1306,0.252,1307,0.252,1308,0.235,1309,0.235,1310,0.212,1312,0.459,1313,0.222,1314,0.252,1315,0.222,1316,0.235,1317,0.212,1318,0.252,1319,0.252,1320,0.235,1321,0.235,1322,0.212,1323,0.204,1324,0.252,1325,0.362,1326,0.235,1327,0.252,1328,0.252,1329,0.492,1330,0.252,1331,0.252,1333,0.252,1334,0.252,1335,0.252,1336,0.252,1337,0.252,1338,0.252,1339,0.252,1340,0.235,1341,0.235,1342,0.212,1343,0.222]],["component/11",[11,0.17,12,0.288]],["keyword/11",[]],["title/12-1",[394,40.813]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["keyword/12-1",[]],["title/12-2",[43,35.409,292,36.794]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["keyword/12-2",[]],["title/12-3",[297,21.066,305,18.325,306,22.751,538,22.29,599,25.676,600,25.676]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["keyword/12-3",[]],["title/12-4",[95,16.681,172,17.408,305,16.681,306,20.71,538,20.291,599,23.373,600,23.373]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["keyword/12-4",[]],["title/12-5",[305,30.248,753,32.54]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["keyword/12-5",[]],["title/12-6",[109,34.774,172,31.567]],["name/12-6",[]],["text/12-6",[]],["component/12-6",[]],["keyword/12-6",[]],["title/12-7",[305,16.681,413,20.71,535,16.456,536,22.743,537,37.433,1344,29.66]],["name/12-7",[]],["text/12-7",[]],["component/12-7",[]],["keyword/12-7",[]],["title/12-8",[109,17.598,172,15.975,413,19.005,535,15.101,536,20.87,537,34.993,1344,27.218]],["name/12-8",[]],["text/12-8",[]],["component/12-8",[]],["keyword/12-8",[]],["title/12-9",[305,30.248,1345,53.784]],["name/12-9",[]],["text/12-9",[]],["component/12-9",[]],["keyword/12-9",[]],["title/12-10",[109,26.238,172,23.818,305,22.823,1345,40.581]],["name/12-10",[]],["text/12-10",[]],["component/12-10",[]],["keyword/12-10",[]],["title/12-11",[21,29.392,305,26.016,321,29.909]],["name/12-11",[]],["text/12-11",[]],["component/12-11",[]],["keyword/12-11",[]],["title/12-12",[21,22.966,109,23.369,172,21.214,305,20.328,321,23.369]],["name/12-12",[]],["text/12-12",[]],["component/12-12",[]],["keyword/12-12",[]],["title/12-13",[305,26.016,321,29.909,534,41.82]],["name/12-13",[]],["text/12-13",[]],["component/12-13",[]],["keyword/12-13",[]],["title/12-14",[109,23.369,172,21.214,305,20.328,321,23.369,534,32.677]],["name/12-14",[]],["text/12-14",[]],["component/12-14",[]],["keyword/12-14",[]],["title/12-15",[117,24.177,177,23.142,298,25.784,305,22.823]],["name/12-15",[]],["text/12-15",[]],["component/12-15",[]],["keyword/12-15",[]],["title/12-16",[109,21.066,117,19.412,172,19.124,177,18.581,298,20.702,305,18.325]],["name/12-16",[]],["text/12-16",[]],["component/12-16",[]],["keyword/12-16",[]],["title/12-17",[139,28.901,396,32.301,535,25.665]],["name/12-17",[]],["text/12-17",[]],["component/12-17",[]],["keyword/12-17",[]],["title/12-18",[1013,39.25,1141,30.248]],["name/12-18",[]],["text/12-18",[]],["component/12-18",[]],["keyword/12-18",[]],["title/12-19",[180,41.241,1141,30.248]],["name/12-19",[]],["text/12-19",[]],["component/12-19",[]],["keyword/12-19",[]],["title/12-20",[139,22.582,305,20.328,306,25.239,756,27.715,1346,32.677]],["name/12-20",[]],["text/12-20",[]],["component/12-20",[]],["keyword/12-20",[]],["title/12-21",[28,28.337,201,26.238,754,23.142,755,27.762]],["name/12-21",[]],["text/12-21",[]],["component/12-21",[]],["keyword/12-21",[]],["title/12-22",[51,27.987,117,27.56,353,29.909]],["name/12-22",[]],["text/12-22",[]],["component/12-22",[]],["keyword/12-22",[]],["title/12-23",[51,19.713,117,19.412,139,20.356,170,18.581,175,19.412,190,20.027]],["name/12-23",[]],["text/12-23",[]],["component/12-23",[]],["keyword/12-23",[]],["title/12-24",[175,32.043,420,30.248]],["name/12-24",[]],["text/12-24",[]],["component/12-24",[]],["keyword/12-24",[]],["title/12-25",[266,40.18,620,29.909,836,34.577]],["name/12-25",[]],["text/12-25",[]],["component/12-25",[]],["keyword/12-25",[]],["title/12-26",[154,38.372,175,32.043]],["name/12-26",[]],["text/12-26",[]],["component/12-26",[]],["keyword/12-26",[]],["title/12-27",[620,29.909,836,34.577,1347,43.791]],["name/12-27",[]],["text/12-27",[]],["component/12-27",[]],["keyword/12-27",[]],["title/12-28",[175,32.043,1021,43.654]],["name/12-28",[]],["text/12-28",[]],["component/12-28",[]],["keyword/12-28",[]],["title/12-29",[1297,50.618]],["name/12-29",[]],["text/12-29",[]],["component/12-29",[]],["keyword/12-29",[]],["title/12",[305,16.681,306,20.71,387,16.681,538,20.291,599,23.373,600,23.373,1348,26.814]],["name/12",[1349,0.859]],["text/12",[0,0.259,6,0.228,8,0.845,9,2.53,10,1.131,11,0.62,12,1.28,17,0.301,18,0.281,19,0.242,20,0.695,21,2.042,22,0.954,24,0.22,25,0.544,27,0.992,28,2.36,29,0.259,37,0.922,43,0.441,44,0.419,46,2.211,48,0.941,49,2.836,50,0.301,51,3.293,55,0.695,62,1.549,67,0.468,68,0.641,69,0.232,82,0.224,83,3.192,89,0.666,95,2.518,96,0.301,101,2.369,106,1.602,109,0.814,110,1.474,111,2.105,112,0.787,115,1.753,117,3.381,118,0.954,120,0.216,121,0.216,123,0.68,124,0.711,125,0.514,126,1.639,127,1.51,128,0.544,129,2.481,130,1.171,132,0.846,135,0.371,137,2.608,139,2.797,142,1.549,147,0.63,148,0.861,149,0.528,150,1.09,153,0.653,154,2.412,156,0.653,157,0.346,158,1.094,159,1.045,160,1.965,161,0.768,162,0.433,163,0.29,165,0.281,167,0.91,170,0.871,172,0.572,173,0.501,174,0.224,175,4.405,176,0.273,177,2.68,179,0.328,180,0.747,181,0.489,182,1.299,183,1.055,185,1.547,186,0.528,190,3.617,191,0.829,192,0.514,194,1.194,195,0.653,196,0.301,197,0.478,198,1.094,201,0.988,203,0.328,207,0.606,208,0.346,209,0.232,213,2.667,217,0.426,219,0.489,223,0.273,231,0.966,232,0.242,234,1.24,237,0.237,239,0.747,242,0.478,243,0.253,259,0.695,260,0.988,263,1.192,264,0.253,265,0.919,266,2.48,270,0.281,272,0.606,273,1.138,274,0.489,275,0.941,276,1.025,278,1.025,280,0.259,283,0.281,285,1.717,290,0.237,294,1.692,296,0.768,297,1.151,298,2.986,299,1.192,300,0.606,301,1.044,302,1.09,305,3.954,306,3.685,307,1.204,308,0.213,310,0.313,311,0.562,312,1.27,315,0.371,317,0.198,318,0.313,319,0.728,320,0.922,321,4.497,322,1.686,323,2.199,337,0.328,339,0.544,340,0.371,342,0.228,343,1.441,344,0.845,345,0.328,346,1.094,347,0.58,348,0.747,350,2.045,351,1.365,353,2.481,354,0.718,360,0.489,365,1.171,366,1.27,368,0.273,374,1.683,385,0.266,386,1.327,387,1.263,390,0.281,395,1.283,396,1.067,406,0.22,409,0.328,410,0.606,411,0.747,413,1.717,414,1.403,417,0.544,419,1.639,420,2.383,432,0.966,434,0.468,435,0.281,438,1.299,439,0.528,441,0.371,443,0.898,465,0.29,466,0.313,470,0.301,472,0.259,476,0.501,477,0.273,478,0.879,479,0.528,480,1.299,482,1.238,483,0.489,484,0.346,488,0.371,492,1.795,493,0.328,494,0.301,497,0.747,501,1.403,502,0.879,504,0.371,506,1.506,507,0.281,508,0.313,513,1.568,519,0.313,524,0.966,525,0.582,526,0.728,527,0.747,531,1.142,532,1.022,533,1.138,534,3.2,535,1.365,536,2.464,537,2.873,538,1.954,541,0.371,542,0.29,547,0.346,548,2.164,550,0.29,552,0.253,553,0.606,554,0.253,555,0.313,558,0.768,568,0.582,569,0.606,581,0.879,582,0.273,583,2.345,584,0.313,591,0.328,594,0.791,595,0.582,596,0.768,599,1.77,600,1.77,602,0.433,607,1.637,610,0.728,613,0.29,615,0.301,617,0.582,618,0.718,619,1.055,620,2.819,625,0.881,626,0.711,627,0.791,637,0.346,641,0.328,642,0.514,643,0.718,647,1.474,654,0.313,655,0.562,656,0.346,662,0.301,663,0.273,666,0.247,668,0.412,669,0.371,670,0.528,676,0.346,677,0.562,679,0.273,684,0.328,686,0.816,690,0.346,694,0.846,695,0.528,698,0.273,704,0.273,707,0.861,710,0.371,714,0.346,715,1.138,716,0.346,717,0.346,718,0.881,720,1.445,721,0.346,722,1.09,727,0.922,729,1.838,730,2.224,731,0.846,732,0.791,737,0.562,739,2.521,740,1.912,741,0.346,742,1.171,744,0.635,745,0.635,746,0.67,747,0.67,748,0.253,750,0.974,751,0.974,752,0.974,753,3.244,754,1.833,755,4.026,756,2.042,763,0.346,764,0.728,765,0.273,769,1.171,771,0.313,775,0.313,777,0.273,785,0.371,793,0.273,800,0.562,803,0.259,820,0.582,822,0.635,825,0.582,826,0.846,832,0.816,836,0.728,837,0.29,848,0.346,852,0.29,854,0.816,861,0.562,866,0.313,867,0.313,870,1.327,902,4.569,932,2.737,933,3.11,941,0.328,948,0.29,950,0.273,953,0.922,959,0.313,960,0.273,963,0.29,964,0.711,968,0.544,972,0.695,975,0.489,981,1.192,983,0.313,991,0.544,1001,1.142,1004,0.728,1008,0.747,1013,2.084,1018,0.281,1021,2.873,1024,0.281,1025,1.24,1027,1.686,1035,1.474,1043,0.247,1050,0.346,1072,0.301,1073,0.328,1074,0.606,1076,0.346,1078,0.273,1082,0.635,1087,0.816,1093,0.328,1097,0.281,1100,0.266,1122,1.142,1125,0.544,1140,0.301,1141,1.901,1142,0.266,1147,0.922,1148,0.582,1152,2.583,1153,0.346,1155,0.346,1158,0.635,1159,0.635,1160,2.293,1161,1.403,1162,0.747,1163,0.582,1164,0.328,1166,0.313,1167,1.445,1170,0.846,1172,0.816,1173,0.635,1175,0.528,1176,1.446,1177,1.445,1178,0.544,1180,0.313,1182,0.582,1183,0.544,1184,0.29,1188,0.582,1189,0.29,1190,0.273,1191,0.791,1195,1.192,1196,0.346,1203,0.301,1204,0.301,1206,0.881,1207,0.881,1208,0.328,1215,1.403,1217,0.346,1266,0.974,1267,1.259,1270,0.635,1285,0.606,1300,0.919,1317,2.03,1325,0.528,1341,0.346,1343,0.328,1344,1.528,1345,2.46,1346,2.407,1347,2.328,1348,0.881,1350,0.409,1351,0.328,1352,0.346,1353,0.409,1354,0.371,1355,0.409,1356,0.791,1357,0.409,1358,0.791,1359,0.922,1360,0.718,1361,1.149,1362,1.149,1363,0.371,1364,0.346,1365,0.718,1366,0.409,1367,0.371,1368,0.371,1369,0.409,1370,0.371,1371,1.826,1372,0.409,1373,0.371,1374,1.094,1375,0.409,1376,0.346,1377,0.313,1378,0.409,1379,0.409,1380,0.718,1381,0.409,1382,0.409,1383,0.974,1384,0.371,1385,0.791,1386,0.409,1387,0.371,1388,0.409,1389,0.409,1390,0.791,1391,0.718,1392,0.328,1393,0.409,1394,0.409,1395,0.409,1396,0.371,1397,0.409,1398,0.409,1399,0.409,1400,0.846,1401,0.409,1402,0.371,1403,0.409,1404,0.582,1405,0.409,1406,0.606,1407,0.409,1408,0.791,1409,0.409,1410,0.409,1411,0.346,1412,1.044,1413,0.409,1414,0.409,1415,0.409,1416,0.409,1417,0.791,1418,0.791,1419,0.409,1420,0.409,1421,0.409,1422,0.791,1423,1.486,1424,0.328,1425,0.409,1426,0.346,1427,0.409,1428,0.718,1429,0.409,1430,0.409,1431,0.409,1432,0.371,1433,0.409,1434,0.346,1435,0.371,1436,0.371,1437,0.67,1438,0.409,1439,1.044,1440,0.791,1441,0.791,1442,0.409,1443,0.791,1444,0.409,1445,0.409,1446,0.409,1447,0.791,1448,0.409,1449,0.409,1450,0.409,1451,0.409,1452,0.409,1453,0.409,1454,0.371,1455,0.409,1456,0.409,1457,0.409,1458,0.409,1459,0.371,1460,0.791,1461,0.791,1462,0.791,1463,0.409,1464,0.371,1465,0.328,1466,0.346,1467,0.371,1468,0.409,1469,0.606,1470,0.409,1471,0.409,1472,0.313,1473,0.371,1474,0.328,1475,0.371,1476,0.346,1477,0.409,1478,0.409,1479,0.67,1480,0.67,1481,0.409,1482,1.637,1483,0.409,1484,0.328,1485,0.791,1486,0.409,1487,0.974,1488,0.409,1489,0.409,1490,0.409,1491,0.409,1492,0.409,1493,0.409,1494,0.328,1495,0.409,1496,0.409,1497,0.409,1498,0.409,1499,0.409,1500,0.409,1501,0.346,1502,0.409,1503,0.409,1504,0.371,1505,0.346,1506,0.371,1507,0.346,1508,0.371,1509,0.409,1510,0.371,1511,0.409,1512,0.409,1513,0.409,1514,0.409,1515,0.409,1516,0.409,1517,0.409,1518,0.409,1519,0.371,1520,0.409,1521,0.409,1522,0.409,1523,0.409,1524,0.409,1525,0.409,1526,1.795,1527,1.044,1528,1.192,1529,0.409,1530,0.409,1531,2.902,1532,0.606,1533,0.791,1534,0.67,1535,0.409,1536,1.802,1537,0.409,1538,1.044,1539,0.346,1540,0.409,1541,0.635,1542,0.313,1543,0.67,1544,0.346,1545,0.409,1546,0.791,1547,0.409,1548,0.791,1549,1.486,1550,0.409,1551,0.791,1552,0.791,1553,1.349,1554,0.67,1555,0.791,1556,0.409,1557,0.409,1558,0.409,1559,0.409,1560,0.409,1561,0.409,1562,0.371,1563,0.409,1564,0.409,1565,0.328,1566,0.371,1567,0.346,1568,0.409,1569,0.409,1570,0.328,1571,0.409]],["component/12",[11,0.17,12,0.288]],["keyword/12",[]],["title/13-1",[394,40.813]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["keyword/13-1",[]],["title/13-2",[43,35.409,292,36.794]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["keyword/13-2",[]],["title/13-3",[95,30.248,588,41.241]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["keyword/13-3",[]],["title/13-4",[11,14.211,394,29.392,588,35.471]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["keyword/13-4",[]],["title/13-5",[11,12.467,95,22.823,562,30.333,588,31.117]],["name/13-5",[]],["text/13-5",[]],["component/13-5",[]],["keyword/13-5",[]],["title/13-6",[20,33.003,294,29.392,588,35.471]],["name/13-6",[]],["text/13-6",[]],["component/13-6",[]],["keyword/13-6",[]],["title/13-7",[9,15.367,11,11.104,36,23.369,44,22.582,51,21.868]],["name/13-7",[]],["text/13-7",[]],["component/13-7",[]],["keyword/13-7",[]],["title/13-8",[20,33.003,40,40.18,294,29.392]],["name/13-8",[]],["text/13-8",[]],["component/13-8",[]],["keyword/13-8",[]],["title/13-9",[9,15.367,51,21.868,707,24.727,1572,38.726,1573,36.144]],["name/13-9",[]],["text/13-9",[]],["component/13-9",[]],["keyword/13-9",[]],["title/13-10",[753,38.861]],["name/13-10",[]],["text/13-10",[]],["component/13-10",[]],["keyword/13-10",[]],["title/13-11",[1297,50.618]],["name/13-11",[]],["text/13-11",[]],["component/13-11",[]],["keyword/13-11",[]],["title/13",[11,12.467,387,22.823,588,31.117,924,36.687]],["name/13",[1574,0.859]],["text/13",[1,0.434,6,0.87,7,0.449,8,0.474,9,3.087,10,0.84,11,1.891,13,0.515,18,0.573,19,0.493,20,5.437,21,0.449,22,1.465,24,2.781,28,1.302,29,2.362,36,2.268,40,1.148,44,0.826,46,2.192,48,0.528,49,0.943,51,4.783,53,1.43,55,1.33,63,1.073,68,0.465,69,2.566,72,1.417,82,2.473,83,1.128,95,3.53,96,1.619,101,0.421,104,0.757,106,1.673,109,0.457,110,0.965,111,0.403,112,1.165,115,1.544,117,3.667,118,1.974,128,0.573,129,3.389,130,2.127,137,2.429,142,0.541,147,1.516,148,1.275,153,1.861,156,0.474,158,0.613,160,1.516,161,1.469,162,0.457,163,0.592,168,0.515,170,0.403,174,0.855,175,2.45,177,3.275,182,4.191,183,1.108,190,0.813,191,1.827,192,0.541,194,2.12,195,1.251,197,0.504,198,1.441,199,0.465,200,0.638,203,0.668,207,0.638,209,1.251,211,0.965,213,4.287,217,0.84,223,0.556,228,1.014,231,1.43,232,0.493,242,1.33,245,0.965,258,0.706,259,0.504,266,0.613,268,0.541,270,1.073,274,0.965,276,0.474,278,0.887,294,4.129,297,1.516,298,2.613,299,1.252,305,1.777,307,1.469,309,0.923,321,0.855,323,3.586,328,0.668,342,0.465,343,0.943,344,0.474,347,0.421,350,2.93,351,1.014,352,0.706,353,2.473,366,1.33,368,2.49,374,2.162,379,1.997,387,0.744,394,0.449,395,1.763,396,1.638,411,1.014,413,0.493,417,1.073,419,0.965,423,0.706,432,0.541,434,0.493,456,0.573,457,0.668,461,0.757,463,1.275,466,0.638,473,0.613,478,0.493,479,1.469,482,0.615,483,0.965,490,0.757,492,1.361,493,0.668,502,1.638,506,0.887,507,1.073,508,0.638,513,0.923,515,1.148,519,0.638,522,0.556,532,1.073,533,1.685,535,0.734,539,0.757,546,0.668,554,0.965,555,1.195,556,1.619,564,0.592,568,0.613,581,0.923,583,2.791,586,0.573,588,5.959,591,0.668,592,0.573,596,0.556,602,0.457,610,1.753,614,0.556,619,1.966,620,1.794,629,0.573,631,1.014,633,0.556,634,0.573,638,0.573,647,1.361,650,0.706,651,0.573,666,0.504,670,0.556,671,0.592,674,0.573,686,1.108,689,1.765,692,0.613,695,0.556,698,0.556,707,0.904,722,3.296,727,0.668,734,0.515,742,0.541,753,4.212,754,2.001,755,2.4,764,0.988,784,0.668,792,0.592,795,0.638,806,0.441,812,1.014,829,1.148,832,0.592,854,0.592,855,0.592,856,0.706,864,0.706,887,0.515,902,4.268,924,0.638,932,3.123,933,1.33,934,1.252,948,0.592,964,0.515,972,0.504,980,0.483,982,0.638,1001,0.528,1008,0.541,1013,0.515,1021,0.573,1024,2.565,1025,3.931,1043,1.33,1057,0.528,1095,0.668,1100,1.014,1107,0.541,1122,1.753,1123,0.706,1124,0.706,1139,0.592,1141,1.973,1149,0.706,1150,0.706,1152,1.361,1160,0.943,1162,1.014,1163,0.613,1167,1.513,1175,0.556,1177,1.903,1178,1.903,1182,0.613,1185,0.638,1186,0.613,1187,0.638,1188,0.613,1189,0.592,1191,0.573,1203,0.613,1204,1.619,1205,0.613,1206,0.638,1207,0.638,1210,0.613,1215,2.49,1222,0.592,1223,1.685,1226,1.195,1278,1.148,1297,0.556,1298,1.073,1325,1.042,1347,0.668,1359,1.252,1376,0.706,1383,0.706,1384,0.757,1454,0.757,1464,0.757,1480,2.345,1484,0.668,1487,3.16,1494,1.252,1501,0.706,1526,2.791,1541,0.668,1542,2.12,1543,4.113,1572,4.098,1573,4.62,1575,0.757,1576,0.757,1577,1.322,1578,1.864,1579,1.252,1580,0.757,1581,0.833,1582,1.56,1583,0.833,1584,1.417,1585,0.706,1586,0.668,1587,1.56,1588,0.706,1589,0.833,1590,0.833,1591,0.833,1592,0.833,1593,0.833,1594,0.833,1595,0.833,1596,0.833,1597,0.833,1598,1.56,1599,0.833,1600,0.757,1601,1.56,1602,1.417,1603,0.592,1604,0.638,1605,0.706,1606,0.757,1607,0.706,1608,0.668,1609,0.757,1610,1.417,1611,0.757,1612,0.757,1613,0.833,1614,0.833,1615,4.14,1616,2.2,1617,4.098,1618,1.56,1619,5.808,1620,0.833,1621,0.833,1622,1.417,1623,1.417,1624,1.252,1625,0.757,1626,0.833,1627,0.833,1628,0.668,1629,0.706,1630,0.613,1631,0.833,1632,0.833,1633,0.638,1634,0.833,1635,0.833,1636,0.833,1637,0.833,1638,2.767,1639,0.757,1640,0.833,1641,2.973,1642,2.767,1643,2.767,1644,2.2,1645,0.833,1646,1.148,1647,2.2,1648,2.2,1649,0.833,1650,0.757,1651,0.833,1652,0.833,1653,0.833,1654,0.833,1655,0.833,1656,1.56,1657,1.997,1658,0.757,1659,0.638,1660,0.706,1661,0.757,1662,0.757,1663,1.56,1664,0.833,1665,0.833,1666,0.833,1667,2.513,1668,0.833,1669,0.833,1670,0.757,1671,1.56,1672,0.833,1673,0.833,1674,0.833,1675,0.833]],["component/13",[11,0.17,12,0.288]],["keyword/13",[]],["title/14-1",[43,35.409,292,36.794]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["keyword/14-1",[]],["title/14-2",[11,14.211,297,29.909,482,21.513]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["keyword/14-2",[]],["title/14-3",[82,23.369,111,20.612,137,20.054,162,23.369,347,21.534]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["keyword/14-3",[]],["title/14-4",[7,25.784,67,28.337,482,18.873,483,29.615]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["keyword/14-4",[]],["title/14-5",[7,29.392,27,36.454,482,21.513]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["keyword/14-5",[]],["title/14-6",[7,29.392,350,27.987,482,21.513]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["keyword/14-6",[]],["title/14-7",[11,12.467,172,23.818,482,18.873,562,30.333]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["keyword/14-7",[]],["title/14-8",[170,26.38,482,21.513,1043,33.003]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["keyword/14-8",[]],["title/14-9",[386,40.18,482,21.513,1043,33.003]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["keyword/14-9",[]],["title/14-10",[385,31.117,722,28.952,887,29.615,1676,38.416]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["keyword/14-10",[]],["title/14-11",[350,27.987,749,46.259,1676,43.791]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["keyword/14-11",[]],["title/14-12",[190,24.943,482,18.873,1166,36.687,1170,35.248]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["keyword/14-12",[]],["title/14-13",[260,29.909,420,26.016,1677,46.259]],["name/14-13",[]],["text/14-13",[]],["component/14-13",[]],["keyword/14-13",[]],["title/14-14",[102,43.654,1677,53.784]],["name/14-14",[]],["text/14-14",[]],["component/14-14",[]],["keyword/14-14",[]],["title/14-15",[190,28.433,198,28.433,482,21.513]],["name/14-15",[]],["text/14-15",[]],["component/14-15",[]],["keyword/14-15",[]],["title/14-16",[11,11.104,36,23.369,116,24.727,276,24.247,631,27.715]],["name/14-16",[]],["text/14-16",[]],["component/14-16",[]],["keyword/14-16",[]],["title/14-17",[139,25.354,162,26.238,347,24.177,482,18.873]],["name/14-17",[]],["text/14-17",[]],["component/14-17",[]],["keyword/14-17",[]],["title/14-18",[201,23.369,280,27.017,325,26.377,482,16.809,627,29.337]],["name/14-18",[]],["text/14-18",[]],["component/14-18",[]],["keyword/14-18",[]],["title/14-19",[11,10.01,116,22.29,167,19.412,217,20.702,482,15.153,668,20.027]],["name/14-19",[]],["text/14-19",[]],["component/14-19",[]],["keyword/14-19",[]],["title/14-20",[1297,50.618]],["name/14-20",[]],["text/14-20",[]],["component/14-20",[]],["keyword/14-20",[]],["title/14",[11,12.467,387,22.823,482,18.873,1678,38.416]],["name/14",[1679,0.859]],["text/14",[1,0.827,3,0.244,6,0.384,7,3.217,8,3.103,9,2.549,10,0.541,11,1.875,12,0.156,13,0.426,15,0.272,17,0.507,19,0.408,20,0.417,21,1.514,22,1.708,24,1.394,25,0.244,27,0.237,28,1.099,29,0.826,36,0.194,44,0.188,46,1.6,48,0.225,49,0.789,51,2.552,53,0.653,55,1.278,63,0.244,67,0.408,68,0.886,69,1.472,73,0.252,76,0.237,79,0.322,81,0.3,82,0.87,83,3.754,86,0.252,89,0.921,91,0.272,95,1.718,98,0.272,101,0.179,102,0.244,106,1.7,109,1.419,110,0.219,111,1.652,112,0.983,113,1.092,114,1.169,115,0.886,116,4.025,117,0.348,118,0.532,123,0.595,125,0.448,126,0.807,127,0.225,129,2.797,131,0.3,137,2.512,138,0.284,139,2.702,142,1.373,145,0.252,147,1.158,148,0.921,149,0.237,150,0.789,152,0.3,153,2.247,154,2.067,156,1.056,158,0.74,159,0.399,160,2.072,162,1.656,163,0.714,165,0.691,166,1.556,167,0.659,168,0.426,170,2.887,172,1.503,173,1.006,174,1.292,175,3.155,176,0.46,177,2.406,180,0.448,181,0.219,185,0.507,186,0.237,190,2.843,191,2.297,194,2.15,195,0.201,196,0.261,197,0.214,198,2.454,199,0.728,200,0.272,201,2.256,209,1.056,211,0.219,213,2.756,217,2.301,218,0.201,219,0.982,225,0.322,227,3.536,230,0.3,232,2.705,233,1.696,234,0.691,235,0.272,239,0.653,242,0.417,243,0.622,245,0.622,252,0.3,253,0.507,255,0.23,256,0.637,259,0.608,260,2.728,264,0.622,266,0.74,268,0.653,271,0.848,274,0.807,275,2.166,276,1.472,278,1.718,280,3.66,281,0.284,285,0.595,287,0.244,290,0.583,294,0.191,295,0.284,296,0.237,297,0.194,298,0.191,302,0.608,309,0.408,310,0.528,311,0.252,312,0.417,317,0.767,319,0.637,321,0.377,323,1.87,324,0.182,325,0.219,334,0.272,339,0.244,342,0.561,343,0.608,344,1.202,347,4.008,348,0.653,350,0.515,351,1.373,353,1.419,360,1.149,364,0.507,366,1.278,368,0.46,374,1.501,381,0.272,382,2.619,384,0.3,385,3.472,386,2.069,387,0.169,395,1.628,396,0.595,406,2.301,407,0.913,411,0.23,413,0.21,415,0.653,420,1.123,432,0.448,434,0.595,435,0.691,438,1.149,443,0.96,463,0.756,466,0.272,470,0.261,473,0.261,474,0.284,475,0.252,477,0.237,478,0.408,480,1.307,482,4.042,483,1.307,492,1.601,493,0.553,494,0.261,501,0.46,502,0.595,506,1.202,507,0.691,508,0.272,513,1.663,514,0.261,521,0.23,522,0.871,524,0.23,526,0.637,531,1.177,532,0.244,533,2.471,535,1.322,536,3.317,537,0.244,538,0.205,542,1.501,550,0.252,552,2.643,554,0.982,556,0.261,560,0.284,562,0.826,565,0.261,569,0.528,575,0.225,577,0.714,581,1.251,582,0.237,583,0.807,584,0.272,585,0.553,586,0.474,588,0.23,592,0.691,594,0.691,596,0.237,597,0.637,599,0.671,602,1.158,610,1.006,620,0.715,623,0.46,625,1.619,626,0.219,627,2.601,631,0.23,638,0.897,640,0.626,642,0.448,644,0.261,645,0.897,649,1.339,650,0.3,655,0.252,662,0.507,663,0.237,665,0.528,666,0.417,668,0.359,674,0.474,679,0.871,680,0.272,681,1.423,686,0.252,687,0.46,695,0.237,704,0.871,706,0.284,722,1.425,723,0.46,725,0.3,729,1.781,731,0.74,732,0.474,733,0.46,734,1.601,736,0.261,742,0.23,748,0.426,749,0.3,753,0.669,754,0.171,755,2.292,756,0.23,757,0.272,758,0.322,759,0.284,763,0.3,764,0.225,769,0.448,777,0.671,780,0.237,781,0.3,782,0.284,783,0.3,789,0.261,791,0.284,792,0.252,795,0.272,797,0.322,800,0.252,803,0.225,807,0.21,826,0.507,828,0.272,830,0.261,831,0.201,849,1.423,852,0.252,854,0.252,855,0.927,863,0.261,867,0.999,887,2.229,896,0.284,901,0.214,902,4.651,906,0.74,926,0.252,932,3.669,940,0.284,950,0.237,955,0.426,956,3.324,958,0.489,963,0.489,964,0.622,968,0.244,975,0.219,980,0.756,984,0.671,1001,0.436,1004,0.225,1006,0.284,1008,0.448,1013,0.426,1018,0.244,1025,0.244,1035,1.601,1043,4.687,1057,0.225,1078,0.671,1079,0.3,1081,0.871,1082,0.284,1085,0.272,1087,0.714,1096,0.272,1097,0.474,1098,0.3,1100,0.653,1102,0.3,1104,0.96,1106,0.3,1107,0.23,1108,0.284,1114,0.261,1115,0.261,1119,0.272,1122,1.006,1139,0.252,1140,0.261,1141,2.601,1152,3.375,1156,0.3,1157,0.3,1158,0.284,1159,0.284,1160,2.39,1161,2.749,1162,2.568,1164,0.284,1165,0.3,1166,0.528,1167,1.092,1170,1.169,1172,0.927,1175,1.411,1177,0.897,1178,0.897,1180,0.272,1182,0.261,1183,0.244,1184,0.252,1186,0.261,1187,0.272,1188,0.507,1189,0.252,1190,0.237,1191,0.244,1195,0.284,1197,0.553,1203,0.74,1204,0.261,1205,0.261,1206,0.272,1210,0.261,1220,0.284,1222,0.252,1224,1.105,1229,0.3,1230,0.852,1232,0.3,1261,0.3,1268,0.284,1270,0.284,1273,0.553,1278,0.96,1295,0.553,1296,0.584,1298,0.474,1300,0.426,1303,0.3,1310,0.77,1313,0.284,1315,0.284,1316,0.3,1317,1.217,1321,0.3,1322,0.272,1323,0.261,1325,0.237,1343,0.284,1346,0.528,1351,0.284,1352,0.3,1365,0.322,1368,1.919,1374,0.507,1377,0.272,1392,0.284,1400,1.169,1404,0.507,1412,0.322,1434,0.3,1437,0.584,1465,0.806,1472,0.272,1473,0.322,1474,0.553,1475,0.322,1476,0.584,1479,0.584,1482,0.626,1526,0.807,1528,0.806,1534,0.3,1539,0.3,1541,0.284,1542,0.77,1544,0.3,1554,0.3,1566,0.322,1576,0.322,1577,0.3,1578,0.3,1584,0.322,1585,0.3,1586,0.284,1603,0.252,1604,0.528,1608,0.806,1609,0.322,1610,0.626,1611,0.322,1612,0.322,1617,0.322,1624,0.284,1628,0.284,1630,1.169,1633,0.999,1641,0.626,1646,0.261,1650,0.626,1659,0.272,1661,0.322,1676,0.553,1677,5.143,1680,0.626,1681,1.005,1682,0.3,1683,0.626,1684,0.553,1685,0.322,1686,0.322,1687,0.354,1688,0.284,1689,0.689,1690,0.354,1691,0.626,1692,1.005,1693,0.354,1694,0.284,1695,0.3,1696,2.784,1697,0.284,1698,0.626,1699,0.354,1700,0.354,1701,0.689,1702,0.689,1703,0.806,1704,0.3,1705,0.354,1706,0.354,1707,0.354,1708,0.272,1709,0.354,1710,0.354,1711,0.354,1712,0.354,1713,0.322,1714,0.852,1715,0.272,1716,0.322,1717,0.354,1718,1.806,1719,0.354,1720,1.005,1721,1.304,1722,1.304,1723,1.346,1724,2.589,1725,0.584,1726,0.354,1727,0.354,1728,0.272,1729,0.354,1730,0.354,1731,0.354,1732,0.354,1733,0.354,1734,0.354,1735,1.304,1736,0.913,1737,1.105,1738,0.3,1739,0.322,1740,0.322,1741,0.354,1742,0.354,1743,0.322,1744,0.322,1745,0.354,1746,0.354,1747,0.354,1748,0.354,1749,0.528,1750,0.354,1751,1.005,1752,0.354,1753,0.322,1754,0.354,1755,0.626,1756,0.626,1757,0.689,1758,1.005,1759,0.553,1760,1.304,1761,0.584,1762,1.005,1763,0.689,1764,0.689,1765,1.005,1766,0.528,1767,0.689,1768,1.304,1769,0.354,1770,0.354,1771,0.354,1772,0.354,1773,0.354,1774,0.354,1775,0.284,1776,0.354,1777,0.354,1778,0.354,1779,0.354,1780,1.891,1781,0.354,1782,0.3,1783,0.354,1784,0.322,1785,0.354,1786,0.354,1787,0.284,1788,0.689,1789,0.354,1790,0.354,1791,0.852,1792,0.689,1793,0.354,1794,0.999,1795,0.322,1796,0.354,1797,0.354,1798,0.354,1799,1.346,1800,0.354,1801,0.354,1802,0.354,1803,0.354,1804,0.354,1805,0.354,1806,0.272,1807,0.354,1808,0.3,1809,0.322,1810,0.354,1811,0.322,1812,0.689,1813,0.626,1814,0.354,1815,0.354,1816,0.354,1817,0.626,1818,0.3,1819,0.354,1820,0.354,1821,0.322,1822,0.322,1823,0.354,1824,0.322,1825,0.354,1826,0.3,1827,0.3,1828,0.284,1829,0.354,1830,0.553,1831,0.354,1832,0.354,1833,0.354,1834,0.354,1835,0.354,1836,0.354,1837,0.354,1838,0.354,1839,0.354,1840,0.354,1841,0.553,1842,0.354,1843,0.354,1844,0.354,1845,0.354,1846,0.354,1847,0.354,1848,0.354,1849,0.354,1850,0.322,1851,1.998,1852,0.689,1853,0.322,1854,0.689,1855,1.005,1856,0.322,1857,1.184,1858,0.3,1859,1.304,1860,0.354,1861,0.3,1862,1.304,1863,0.689,1864,0.689,1865,0.354,1866,0.689,1867,0.354,1868,0.689,1869,0.354,1870,1.304,1871,0.626,1872,0.354,1873,0.322,1874,0.322,1875,0.3,1876,0.528,1877,0.322,1878,0.322,1879,0.322,1880,1.005,1881,0.354,1882,0.806,1883,0.354,1884,0.284,1885,0.322,1886,0.354,1887,0.626,1888,0.3,1889,0.322,1890,0.3,1891,0.354,1892,0.806,1893,0.261,1894,0.3]],["component/14",[11,0.17,12,0.288]],["keyword/14",[]],["title/15-1",[394,40.813]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["keyword/15-1",[]],["title/15-2",[43,35.409,292,36.794]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["keyword/15-2",[]],["title/15-3",[0,34.577,11,14.211,308,28.433]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["keyword/15-3",[]],["title/15-4",[172,31.567,968,43.654]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["keyword/15-4",[]],["title/15-5",[308,33.059,317,30.671]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["keyword/15-5",[]],["title/15-6",[308,28.433,317,26.38,350,27.987]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["keyword/15-6",[]],["title/15-7",[317,30.671,1697,50.915]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["keyword/15-7",[]],["title/15-8",[317,30.671,584,48.624]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["keyword/15-8",[]],["title/15-9",[317,30.671,958,45.083]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["keyword/15-9",[]],["title/15-10",[308,28.433,317,26.38,582,36.454]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["keyword/15-10",[]],["title/15-11",[213,31.032,278,31.032,321,29.909]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["keyword/15-11",[]],["title/15-12",[308,28.433,317,26.38,502,32.301]],["name/15-12",[]],["text/15-12",[]],["component/15-12",[]],["keyword/15-12",[]],["title/15-13",[170,23.142,308,24.943,317,23.142,582,31.979]],["name/15-13",[]],["text/15-13",[]],["component/15-13",[]],["keyword/15-13",[]],["title/15-14",[209,36.081,1895,57.626]],["name/15-14",[]],["text/15-14",[]],["component/15-14",[]],["keyword/15-14",[]],["title/15-15",[1141,30.248,1896,57.626]],["name/15-15",[]],["text/15-15",[]],["component/15-15",[]],["keyword/15-15",[]],["title/15-16",[1141,30.248,1897,57.626]],["name/15-16",[]],["text/15-16",[]],["component/15-16",[]],["keyword/15-16",[]],["title/15-17",[170,23.142,308,24.943,317,23.142,831,27.223]],["name/15-17",[]],["text/15-17",[]],["component/15-17",[]],["keyword/15-17",[]],["title/15-18",[170,26.38,308,28.433,317,26.38]],["name/15-18",[]],["text/15-18",[]],["component/15-18",[]],["keyword/15-18",[]],["title/15-19",[22,33.602,537,43.654]],["name/15-19",[]],["text/15-19",[]],["component/15-19",[]],["keyword/15-19",[]],["title/15-20",[198,28.433,308,28.433,317,26.38]],["name/15-20",[]],["text/15-20",[]],["component/15-20",[]],["keyword/15-20",[]],["title/15-21",[482,21.513,652,38.775,1898,49.563]],["name/15-21",[]],["text/15-21",[]],["component/15-21",[]],["keyword/15-21",[]],["title/15-22",[167,21.534,308,22.216,317,20.612,319,27.017,668,22.216]],["name/15-22",[]],["text/15-22",[]],["component/15-22",[]],["keyword/15-22",[]],["title/15-23",[1297,50.618]],["name/15-23",[]],["text/15-23",[]],["component/15-23",[]],["keyword/15-23",[]],["title/15",[11,12.467,308,24.943,387,22.823,388,43.479]],["name/15",[1899,0.859]],["text/15",[0,0.914,1,0.752,6,2.245,7,0.539,8,0.297,9,2.131,10,0.997,11,1.872,21,1.566,22,1.18,24,1.2,25,0.689,27,0.349,28,1.721,29,0.634,35,0.909,36,0.286,40,0.384,44,0.53,46,1.54,48,0.331,49,1.348,51,1.143,55,4.105,67,0.309,68,1.794,69,1.654,76,0.349,82,0.286,83,2.792,89,0.58,91,1.105,92,0.909,95,1.918,101,0.506,102,0.359,106,2.433,107,1.223,111,3.055,112,0.98,113,0.359,115,1.244,123,0.309,126,2.166,127,0.914,128,0.359,129,2.575,130,0.339,137,0.245,139,1.367,142,1.677,146,0.419,147,0.791,148,1.073,150,2.117,151,0.339,153,0.297,156,1.467,157,0.442,159,0.303,160,2.066,161,0.349,162,0.791,165,0.689,167,1.126,170,3.333,172,0.921,173,0.331,174,0.286,177,2.271,181,0.323,182,0.323,190,1.824,191,1.623,194,1.654,195,1.267,197,0.316,198,0.752,199,2.734,201,0.791,205,0.767,209,1.467,211,1.379,213,3.443,217,0.777,219,0.619,232,0.309,235,0.4,237,0.58,238,0.767,239,1.203,242,1.348,243,1.988,245,1.379,246,1.348,250,1.157,251,1.223,252,1.223,255,0.339,256,0.914,259,0.872,264,0.619,265,0.323,268,0.339,271,0.938,274,0.892,276,0.297,278,0.82,280,0.331,285,0.309,290,0.58,292,0.303,294,0.281,296,0.349,302,0.316,307,0.669,308,5.517,312,0.605,317,4.979,319,1.843,321,0.791,323,1.686,327,1.418,335,0.711,342,0.291,343,0.605,347,1.904,348,0.339,350,2.611,351,1.677,353,2.336,358,0.803,366,1.348,385,0.938,387,1.063,394,0.281,395,1.2,396,0.309,402,0.384,406,1.39,411,1.203,413,0.854,415,0.938,417,0.359,419,0.892,420,0.477,426,0.669,434,0.854,438,1.379,439,0.349,443,0.605,456,0.359,463,0.58,472,0.634,473,0.384,475,0.371,476,0.331,479,0.349,480,2.332,481,0.592,482,1.267,483,0.323,497,0.651,501,0.349,502,1.527,503,0.442,506,1.052,513,0.309,516,0.331,517,0.331,521,0.339,522,0.349,526,1.172,527,0.339,531,0.331,535,1.647,536,0.339,537,1.273,538,0.303,542,0.711,552,1.379,553,0.767,554,0.619,556,0.384,558,2.147,562,0.331,565,0.384,577,1.025,581,3.013,582,2.147,583,0.323,584,4.939,586,0.992,587,0.848,594,1.533,596,0.669,597,0.634,602,1.919,610,0.634,620,1.414,623,2.147,626,1.596,627,0.359,629,0.359,631,0.339,633,0.349,634,0.359,636,1.788,638,0.359,641,0.419,642,0.339,644,0.384,645,0.689,647,0.323,652,3.188,655,0.371,658,0.384,666,0.872,667,0.689,668,1.161,674,0.359,679,1.236,681,1.105,692,0.737,707,0.303,715,0.4,719,1.31,722,0.316,723,0.349,729,0.634,733,0.349,734,2.332,735,1.418,736,0.737,742,0.339,748,0.619,752,0.442,753,1.934,755,1.073,756,0.339,765,0.349,766,0.442,769,2.451,773,0.767,776,1.9,782,0.419,783,0.442,784,0.803,786,0.442,787,0.474,793,0.669,796,0.848,806,0.276,807,0.309,812,0.339,826,0.384,829,0.384,830,0.737,831,0.569,832,0.711,836,0.634,855,0.711,863,0.737,887,0.323,901,0.316,902,5.376,926,0.371,932,3.575,934,0.419,945,0.384,948,0.371,955,0.619,956,0.349,958,3.984,960,1.724,963,0.711,964,1.596,967,0.803,968,0.359,972,0.605,984,0.669,991,0.359,1001,0.331,1024,0.992,1035,0.619,1043,0.316,1057,0.331,1072,0.384,1081,0.964,1083,0.803,1086,0.419,1104,0.737,1107,0.339,1109,2.579,1110,0.442,1111,0.442,1122,1.635,1125,0.359,1140,0.384,1141,2.24,1152,3.565,1160,3.485,1161,1.724,1162,1.203,1167,0.689,1172,0.371,1183,0.359,1184,1.025,1190,0.964,1197,0.419,1215,0.669,1219,0.442,1223,0.767,1268,0.803,1278,0.384,1298,1.273,1301,0.442,1309,1.223,1310,0.4,1315,2.809,1322,0.4,1346,0.767,1348,0.4,1351,0.419,1359,0.419,1374,0.384,1377,0.4,1380,0.474,1396,0.474,1406,0.4,1435,0.474,1436,0.474,1439,0.909,1459,0.474,1465,0.803,1466,0.848,1469,0.4,1472,0.4,1494,0.419,1501,0.442,1504,0.474,1532,0.4,1544,0.848,1604,0.4,1607,0.848,1633,1.977,1646,0.384,1678,0.419,1688,0.419,1696,0.384,1697,4.858,1718,0.4,1723,0.442,1728,0.4,1737,0.442,1743,0.474,1755,0.474,1759,2.334,1780,1.157,1806,0.767,1808,0.442,1827,0.442,1828,0.419,1861,0.848,1875,0.442,1876,0.4,1890,0.442,1892,0.419,1895,2.919,1896,4.623,1897,3.87,1898,4.074,1900,1.443,1901,1.851,1902,0.522,1903,1.681,1904,0.522,1905,1.001,1906,3.771,1907,2.229,1908,2.229,1909,1.443,1910,0.474,1911,1.105,1912,0.522,1913,0.522,1914,0.522,1915,1.001,1916,0.474,1917,0.522,1918,0.522,1919,0.474,1920,0.4,1921,1.001,1922,0.522,1923,0.522,1924,0.909,1925,0.522,1926,0.522,1927,0.522,1928,0.522,1929,0.522,1930,0.522,1931,0.848,1932,3.41,1933,0.909,1934,1.001,1935,0.474,1936,2.229,1937,0.474,1938,0.474,1939,0.909,1940,0.522,1941,1.443,1942,0.522,1943,0.522,1944,0.442,1945,0.909,1946,0.522,1947,1.001,1948,1.001,1949,0.522,1950,0.522,1951,1.001,1952,0.522,1953,0.474,1954,0.474,1955,0.474,1956,0.522,1957,0.522,1958,1.001,1959,0.442,1960,0.522,1961,0.522,1962,0.522,1963,0.522,1964,0.522,1965,0.522,1966,1.443,1967,1.443,1968,1.443,1969,0.522,1970,0.522,1971,1.001,1972,1.001,1973,0.522,1974,0.522,1975,0.419,1976,0.522,1977,0.474,1978,0.522,1979,0.522,1980,0.522,1981,0.522,1982,1.443,1983,0.522,1984,0.442,1985,1.443,1986,0.522,1987,1.001,1988,1.443,1989,0.522,1990,0.419,1991,1.443,1992,1.443,1993,1.31,1994,0.522,1995,1.001,1996,0.522,1997,0.522,1998,1.443,1999,0.522,2000,0.522,2001,0.522,2002,0.522,2003,0.522,2004,0.522,2005,0.522,2006,0.522,2007,0.522,2008,0.522,2009,0.522,2010,0.522,2011,0.909,2012,0.522,2013,0.522,2014,0.522,2015,0.522,2016,0.522,2017,0.522,2018,1.001,2019,0.522,2020,0.522,2021,0.522,2022,1.443,2023,1.001,2024,0.384,2025,0.474,2026,1.851,2027,1.001,2028,1.443,2029,1.001,2030,0.522,2031,0.522,2032,0.474,2033,0.522,2034,0.522,2035,0.522,2036,1.001,2037,1.001,2038,1.001,2039,1.001,2040,0.522,2041,0.522,2042,0.474,2043,0.522,2044,1.223,2045,0.803,2046,0.522,2047,0.474,2048,0.522,2049,0.522,2050,0.522,2051,0.522,2052,0.522,2053,0.474]],["component/15",[11,0.17,12,0.288]],["keyword/15",[]],["title/16-1",[394,40.813]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["keyword/16-1",[]],["title/16-2",[43,35.409,292,36.794]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["keyword/16-2",[]],["title/16-3",[11,14.211,122,28.901,394,29.392]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["keyword/16-3",[]],["title/16-4",[111,26.38,122,28.901,395,29.392]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["keyword/16-4",[]],["title/16-5",[122,33.602,350,32.54]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["keyword/16-5",[]],["title/16-6",[11,14.211,122,28.901,535,25.665]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["keyword/16-6",[]],["title/16-7",[122,33.602,753,32.54]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["keyword/16-7",[]],["title/16-8",[122,33.602,566,50.915]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["keyword/16-8",[]],["title/16-9",[122,33.602,2054,53.784]],["name/16-9",[]],["text/16-9",[]],["component/16-9",[]],["keyword/16-9",[]],["title/16-10",[122,28.901,350,27.987,2054,46.259]],["name/16-10",[]],["text/16-10",[]],["component/16-10",[]],["keyword/16-10",[]],["title/16-11",[11,12.467,111,23.142,122,25.354,2055,34.016]],["name/16-11",[]],["text/16-11",[]],["component/16-11",[]],["keyword/16-11",[]],["title/16-12",[9,15.367,213,24.247,244,29.337,246,38.238]],["name/16-12",[]],["text/16-12",[]],["component/16-12",[]],["keyword/16-12",[]],["title/16-13",[9,15.367,244,29.337,651,29.337,1125,29.337,2056,38.726]],["name/16-13",[]],["text/16-13",[]],["component/16-13",[]],["keyword/16-13",[]],["title/16-14",[122,28.901,260,29.909,420,26.016]],["name/16-14",[]],["text/16-14",[]],["component/16-14",[]],["keyword/16-14",[]],["title/16-15",[1297,50.618]],["name/16-15",[]],["text/16-15",[]],["component/16-15",[]],["keyword/16-15",[]],["title/16",[11,12.467,122,25.354,387,22.823,2057,43.479]],["name/16",[2058,0.859]],["text/16",[0,0.435,1,1.459,6,1.563,7,0.369,8,0.739,9,2.634,11,2.015,19,1.095,21,1.509,22,0.363,24,1.935,25,0.894,29,1.172,40,0.505,43,0.725,44,0.688,46,0.98,48,0.823,51,1.842,53,0.446,55,0.415,62,0.446,63,0.894,66,1.203,67,0.406,68,0.383,69,2.423,73,1.315,82,0.376,83,4.017,95,3.427,101,0.656,102,1.616,106,0.415,109,0.712,110,0.424,111,3.474,112,2.257,115,2.697,118,0.363,122,5.661,123,1.39,124,0.804,125,0.446,129,3.464,130,0.844,132,0.505,137,2.506,139,0.98,142,0.446,143,1.669,147,1.287,148,1.362,150,1.42,151,0.446,152,0.581,154,0.786,156,1.335,159,0.398,160,0.712,162,2.159,163,0.923,164,0.956,165,1.616,167,0.346,168,0.424,170,1.737,174,1.535,175,2.152,176,1.569,177,1.737,178,0.55,179,0.55,180,0.446,181,0.424,182,1.988,185,0.956,190,2.22,191,1.311,192,0.844,194,2.241,195,0.739,198,1.224,199,1.563,203,0.55,205,0.526,213,2.749,217,0.369,219,1.145,221,0.894,224,2.366,228,0.446,234,0.472,237,0.753,239,0.446,242,0.415,243,4.903,244,3.821,245,0.424,246,4.994,255,2.335,260,2.649,264,0.424,265,0.424,268,0.446,270,0.472,271,1.203,272,0.526,275,0.435,276,1.593,278,1.335,280,0.823,284,0.55,294,0.369,296,0.458,297,1.535,300,2.147,308,2.375,312,0.786,316,1.101,317,1.354,318,0.526,319,0.823,323,2.285,327,1.418,332,0.55,334,0.995,338,1.568,339,0.472,341,0.581,342,0.383,343,0.786,347,0.656,348,0.446,350,2.61,352,0.581,353,1.535,360,0.804,362,0.487,366,1.119,368,0.868,374,1.362,384,1.101,385,3.464,387,2.304,394,0.369,395,0.997,396,0.769,406,1.935,410,0.526,415,1.526,416,0.526,420,2.031,429,3.137,432,0.446,433,0.526,434,0.406,438,2.437,439,0.458,440,0.505,443,0.415,463,1.073,472,0.435,476,0.435,478,0.406,480,4.521,483,1.733,492,0.804,498,0.526,501,0.458,502,1.902,506,1.052,507,0.472,512,0.623,513,0.769,514,0.505,521,0.844,523,0.55,524,0.446,526,0.435,531,0.435,535,1.512,538,0.398,546,0.55,547,0.581,552,0.424,553,0.526,558,1.569,564,0.487,566,0.55,568,0.505,569,0.526,581,1.39,582,4.105,583,0.424,585,1.042,592,0.472,596,0.868,597,1.775,602,1.287,605,0.956,610,0.823,611,0.526,615,0.505,620,1.761,623,0.458,626,0.424,627,0.894,638,0.894,642,1.821,644,0.956,645,0.472,647,0.424,651,3.667,662,0.505,663,1.236,666,1.119,667,0.472,670,0.868,671,0.923,674,0.472,679,1.236,680,0.526,681,0.995,690,0.581,693,0.581,695,0.458,698,0.868,714,0.581,715,0.526,718,0.995,720,0.894,722,0.415,723,0.868,726,0.55,729,0.435,731,0.505,732,2.711,736,0.505,753,2.61,754,0.332,755,2.643,764,0.435,765,1.236,767,3.045,768,1.18,769,0.844,780,0.868,789,1.362,792,1.315,793,0.868,801,1.885,806,0.363,807,0.406,812,0.446,820,0.956,823,0.526,828,0.526,829,0.505,830,1.729,832,0.923,861,0.487,867,0.526,870,0.505,901,0.415,902,4.906,926,0.487,932,1.694,950,0.458,955,0.424,956,0.868,959,0.526,960,1.236,971,0.581,972,0.415,975,1.453,980,0.398,982,0.526,985,0.55,991,0.894,1004,0.435,1009,1.101,1018,0.894,1035,0.424,1057,0.435,1083,1.042,1085,0.526,1088,0.581,1092,1.991,1097,0.894,1100,0.446,1107,0.446,1109,0.55,1112,0.581,1125,1.616,1138,0.526,1141,1.12,1152,0.804,1160,1.944,1167,0.472,1175,1.236,1177,1.273,1178,1.273,1189,0.487,1190,0.458,1203,0.505,1205,0.505,1210,0.505,1215,1.236,1216,0.956,1222,0.923,1223,1.8,1226,0.526,1269,1.042,1300,0.424,1323,0.505,1325,1.236,1352,0.581,1363,0.623,1364,0.581,1371,3.704,1373,1.18,1374,0.505,1392,1.042,1406,3.901,1411,0.581,1467,0.623,1469,0.526,1484,1.485,1528,0.55,1541,0.55,1570,0.55,1575,0.623,1578,0.581,1580,0.623,1600,1.18,1604,0.995,1607,0.581,1633,0.995,1646,0.956,1660,0.581,1667,1.18,1684,0.55,1686,0.623,1703,0.55,1744,0.623,1766,0.526,1787,0.55,1806,0.995,1841,1.042,1861,1.568,1873,0.623,1876,0.526,1910,0.623,1911,0.526,1931,0.581,1932,1.101,1933,0.623,1935,0.623,1937,0.623,1938,0.623,1944,0.581,1959,0.581,1984,0.581,1990,0.55,2011,0.623,2042,0.623,2044,0.581,2054,1.568,2055,1.669,2056,3.578,2057,0.623,2059,1.299,2060,1.68,2061,0.623,2062,1.991,2063,0.686,2064,0.581,2065,1.101,2066,0.686,2067,0.55,2068,0.686,2069,1.042,2070,0.686,2071,3.941,2072,4.834,2073,2.801,2074,3.214,2075,0.623,2076,1.299,2077,1.299,2078,1.299,2079,0.686,2080,0.581,2081,0.623,2082,0.686,2083,0.623,2084,0.686,2085,0.686,2086,0.686,2087,0.623,2088,0.686,2089,0.686,2090,0.686,2091,0.686,2092,0.686,2093,0.686,2094,0.686,2095,1.299,2096,1.18,2097,0.686,2098,1.299,2099,0.686,2100,0.686,2101,0.686,2102,0.686,2103,0.686,2104,0.686,2105,0.686,2106,0.686,2107,0.686,2108,0.686,2109,0.686,2110,0.686,2111,0.686,2112,1.299,2113,0.686,2114,1.299,2115,1.85,2116,0.686,2117,0.623,2118,0.686,2119,0.581,2120,1.299,2121,1.299,2122,0.686,2123,0.686,2124,0.686,2125,0.686,2126,0.686,2127,1.299,2128,0.686,2129,0.623,2130,0.686,2131,0.686,2132,0.686,2133,1.85,2134,0.686,2135,0.686,2136,0.686,2137,0.686,2138,0.686,2139,0.686,2140,0.686]],["component/16",[11,0.17,12,0.288]],["keyword/16",[]],["title/17-1",[43,35.409,292,36.794]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["keyword/17-1",[]],["title/17-2",[120,33.602,121,33.602]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["keyword/17-2",[]],["title/17-3",[120,22.582,121,22.582,172,21.214,259,25.787,325,26.377]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["keyword/17-3",[]],["title/17-4",[237,36.794,614,42.384]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["keyword/17-4",[]],["title/17-5",[574,48.013]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["keyword/17-5",[]],["title/17-6",[573,48.013]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["keyword/17-6",[]],["title/17-7",[572,48.013]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["keyword/17-7",[]],["title/17-8",[575,48.013]],["name/17-8",[]],["text/17-8",[]],["component/17-8",[]],["keyword/17-8",[]],["title/17-9",[570,41.241,571,41.241]],["name/17-9",[]],["text/17-9",[]],["component/17-9",[]],["keyword/17-9",[]],["title/17-10",[51,27.987,120,28.901,121,28.901]],["name/17-10",[]],["text/17-10",[]],["component/17-10",[]],["keyword/17-10",[]],["title/17-11",[51,21.868,120,22.582,121,22.582,476,27.017,535,20.054]],["name/17-11",[]],["text/17-11",[]],["component/17-11",[]],["keyword/17-11",[]],["title/17-12",[11,12.467,120,25.354,121,25.354,753,24.552]],["name/17-12",[]],["text/17-12",[]],["component/17-12",[]],["keyword/17-12",[]],["title/17-13",[374,36.794,753,32.54]],["name/17-13",[]],["text/17-13",[]],["component/17-13",[]],["keyword/17-13",[]],["title/17-14",[170,23.142,482,18.873,573,30.333,2024,35.248]],["name/17-14",[]],["text/17-14",[]],["component/17-14",[]],["keyword/17-14",[]],["title/17-15",[310,36.687,573,30.333,1141,22.823,1794,36.687]],["name/17-15",[]],["text/17-15",[]],["component/17-15",[]],["keyword/17-15",[]],["title/17-16",[353,29.909,1141,26.016,1799,46.259]],["name/17-16",[]],["text/17-16",[]],["component/17-16",[]],["keyword/17-16",[]],["title/17-17",[76,25.676,201,21.066,260,21.066,420,18.325,481,22.751,1141,18.325]],["name/17-17",[]],["text/17-17",[]],["component/17-17",[]],["keyword/17-17",[]],["title/17-18",[297,29.909,573,34.577,1526,33.759]],["name/17-18",[]],["text/17-18",[]],["component/17-18",[]],["keyword/17-18",[]],["title/17-19",[11,12.467,116,27.762,232,28.337,482,18.873]],["name/17-19",[]],["text/17-19",[]],["component/17-19",[]],["keyword/17-19",[]],["title/17-20",[167,24.177,573,30.333,668,24.943,2024,35.248]],["name/17-20",[]],["text/17-20",[]],["component/17-20",[]],["keyword/17-20",[]],["title/17-21",[139,25.354,481,28.337,517,30.333,2141,38.416]],["name/17-21",[]],["text/17-21",[]],["component/17-21",[]],["keyword/17-21",[]],["title/17-22",[481,32.301,773,41.82,2141,43.791]],["name/17-22",[]],["text/17-22",[]],["component/17-22",[]],["keyword/17-22",[]],["title/17-23",[256,30.333,325,29.615,481,28.337,2141,38.416]],["name/17-23",[]],["text/17-23",[]],["component/17-23",[]],["keyword/17-23",[]],["title/17-24",[482,21.513,570,35.471,571,35.471]],["name/17-24",[]],["text/17-24",[]],["component/17-24",[]],["keyword/17-24",[]],["title/17-25",[570,35.471,571,35.471,1526,33.759]],["name/17-25",[]],["text/17-25",[]],["component/17-25",[]],["keyword/17-25",[]],["title/17-26",[232,28.337,482,18.873,570,31.117,571,31.117]],["name/17-26",[]],["text/17-26",[]],["component/17-26",[]],["keyword/17-26",[]],["title/17-27",[167,24.177,570,31.117,571,31.117,668,24.943]],["name/17-27",[]],["text/17-27",[]],["component/17-27",[]],["keyword/17-27",[]],["title/17-28",[9,19.667,614,36.454,753,27.987]],["name/17-28",[]],["text/17-28",[]],["component/17-28",[]],["keyword/17-28",[]],["title/17-29",[9,22.866,614,42.384]],["name/17-29",[]],["text/17-29",[]],["component/17-29",[]],["keyword/17-29",[]],["title/17-30",[170,36.63]],["name/17-30",[]],["text/17-30",[]],["component/17-30",[]],["keyword/17-30",[]],["title/17-31",[232,32.301,482,21.513,574,34.577]],["name/17-31",[]],["text/17-31",[]],["component/17-31",[]],["keyword/17-31",[]],["title/17-32",[9,17.253,167,24.177,614,31.979,668,24.943]],["name/17-32",[]],["text/17-32",[]],["component/17-32",[]],["keyword/17-32",[]],["title/17-33",[120,22.582,121,22.582,237,24.727,325,26.377,614,28.483]],["name/17-33",[]],["text/17-33",[]],["component/17-33",[]],["keyword/17-33",[]],["title/17-34",[406,34.173,574,40.202]],["name/17-34",[]],["text/17-34",[]],["component/17-34",[]],["keyword/17-34",[]],["title/17-35",[9,22.866,574,40.202]],["name/17-35",[]],["text/17-35",[]],["component/17-35",[]],["keyword/17-35",[]],["title/17-36",[167,27.56,574,34.577,668,28.433]],["name/17-36",[]],["text/17-36",[]],["component/17-36",[]],["keyword/17-36",[]],["title/17-37",[170,30.671,575,40.202]],["name/17-37",[]],["text/17-37",[]],["component/17-37",[]],["keyword/17-37",[]],["title/17-38",[9,22.866,575,40.202]],["name/17-38",[]],["text/17-38",[]],["component/17-38",[]],["keyword/17-38",[]],["title/17-39",[9,19.667,575,34.577,2142,49.563]],["name/17-39",[]],["text/17-39",[]],["component/17-39",[]],["keyword/17-39",[]],["title/17-40",[120,22.582,121,22.582,325,26.377,575,27.017,1603,30.297]],["name/17-40",[]],["text/17-40",[]],["component/17-40",[]],["keyword/17-40",[]],["title/17-41",[9,13.852,11,10.01,116,22.29,232,22.751,482,15.153,574,24.355]],["name/17-41",[]],["text/17-41",[]],["component/17-41",[]],["keyword/17-41",[]],["title/17-42",[167,27.56,575,34.577,668,28.433]],["name/17-42",[]],["text/17-42",[]],["component/17-42",[]],["keyword/17-42",[]],["title/17-43",[120,25.354,121,25.354,325,29.615,1603,34.016]],["name/17-43",[]],["text/17-43",[]],["component/17-43",[]],["keyword/17-43",[]],["title/17-44",[120,25.354,121,25.354,687,31.979,754,23.142]],["name/17-44",[]],["text/17-44",[]],["component/17-44",[]],["keyword/17-44",[]],["title/17-45",[687,36.454,754,26.38,2143,54.579]],["name/17-45",[]],["text/17-45",[]],["component/17-45",[]],["keyword/17-45",[]],["title/17-46",[9,17.253,572,30.333,687,31.979,754,23.142]],["name/17-46",[]],["text/17-46",[]],["component/17-46",[]],["keyword/17-46",[]],["title/17-47",[350,32.54,572,40.202]],["name/17-47",[]],["text/17-47",[]],["component/17-47",[]],["keyword/17-47",[]],["title/17-48",[572,34.577,654,41.82,2144,49.563]],["name/17-48",[]],["text/17-48",[]],["component/17-48",[]],["keyword/17-48",[]],["title/17-49",[572,30.333,611,36.687,654,36.687,2145,43.479]],["name/17-49",[]],["text/17-49",[]],["component/17-49",[]],["keyword/17-49",[]],["title/17-50",[232,32.301,482,21.513,572,34.577]],["name/17-50",[]],["text/17-50",[]],["component/17-50",[]],["keyword/17-50",[]],["title/17-51",[167,24.177,668,24.943,687,31.979,754,23.142]],["name/17-51",[]],["text/17-51",[]],["component/17-51",[]],["keyword/17-51",[]],["title/17-52",[1297,50.618]],["name/17-52",[]],["text/17-52",[]],["component/17-52",[]],["keyword/17-52",[]],["title/17",[11,11.104,120,22.582,121,22.582,387,20.328,891,34.216]],["name/17",[2146,0.859]],["text/17",[1,1.2,3,0.211,6,0.172,7,0.166,8,0.341,9,2.342,10,0.473,11,1.597,13,0.19,17,0.842,19,1.484,21,2.872,22,0.465,25,0.211,36,1.584,44,0.318,46,1.107,51,1.286,53,0.2,55,0.186,62,0.2,66,0.571,67,0.355,68,0.335,69,0.341,73,0.624,76,1.397,82,0.481,83,1.988,89,1.676,91,0.876,95,0.286,99,3.392,101,0.155,109,0.329,111,1.874,112,0.605,113,1.725,114,0.442,115,1.903,116,1.336,120,3.513,121,3.442,122,1.107,123,0.52,124,1.014,125,1.629,129,2.124,137,0.538,139,0.868,142,0.571,143,0.426,144,0.508,147,0.627,148,1.084,149,0.401,151,1.497,153,0.794,154,0.186,156,1.425,158,0.442,159,1.084,160,0.627,161,0.764,162,0.329,166,0.442,167,0.155,168,0.543,170,1.306,172,0.695,173,1.185,174,0.627,175,2.235,176,0.933,177,3.175,178,0.247,181,0.19,182,0.543,183,0.426,184,0.624,185,0.226,186,0.933,190,0.728,191,3.377,192,0.2,194,2.589,195,0.341,198,0.596,199,1.167,201,1.584,205,0.236,209,0.175,213,2.658,219,0.371,221,0.961,223,0.205,227,3.145,228,0.39,229,0.673,231,0.39,232,1.599,233,0.247,234,0.604,237,2.711,242,0.991,243,1.157,244,0.604,245,1.014,246,2.062,253,0.226,255,0.2,256,2.548,259,1.393,260,0.329,263,0.247,264,1.671,268,0.571,270,0.604,271,0.2,272,0.236,273,0.236,274,0.707,275,0.724,276,0.65,278,2.119,280,0.885,283,0.604,285,1.92,290,0.178,297,0.168,300,0.236,302,0.186,308,0.16,309,0.182,310,0.876,311,0.624,312,0.363,319,0.724,323,3.093,325,2.209,335,1.164,339,0.211,342,0.172,343,0.531,347,0.443,348,0.2,350,0.308,351,0.39,353,1.682,359,1.5,360,0.19,366,0.991,374,0.509,385,2.108,387,0.419,395,0.323,396,0.355,401,0.205,406,1.24,408,0.247,410,0.236,411,0.743,413,0.182,415,0.2,417,0.413,420,0.147,426,0.401,433,1.07,435,0.413,438,0.19,439,0.205,443,0.186,463,0.348,472,1.185,473,0.226,474,0.247,475,0.426,476,0.38,478,0.827,480,0.864,481,4.212,482,1.795,483,0.19,487,0.279,491,0.279,492,0.371,497,0.2,498,0.673,502,0.182,503,0.261,506,0.794,513,0.182,516,0.195,517,1.325,521,0.571,523,0.481,524,0.743,526,1.038,527,0.908,531,1.831,535,0.879,536,1.756,546,0.247,550,1.486,551,2.011,552,3.42,554,1.157,556,0.226,558,1.397,562,0.195,563,0.279,564,0.426,565,0.442,570,3.332,571,3.19,572,3.248,573,4.577,574,4.028,575,3.73,577,0.812,587,0.744,595,0.226,596,0.401,597,0.195,600,0.933,602,0.329,605,0.226,609,0.401,610,0.38,611,3.846,613,2.423,614,3.816,615,1.206,620,2.81,623,1.249,625,0.673,636,0.481,639,0.545,647,0.19,649,0.38,651,1.988,654,1.256,655,1.636,657,2.891,658,1.206,665,0.236,666,0.531,667,0.413,668,0.16,677,0.218,679,0.401,681,1.256,683,0.842,687,2.686,695,0.205,698,0.587,704,0.933,707,0.509,712,0.279,715,0.236,718,0.236,720,0.211,722,2.062,726,0.247,729,1.712,731,1.377,732,1.439,733,0.933,734,1.425,735,0.236,736,0.226,737,0.218,742,0.2,753,2.786,754,2.925,755,3.644,757,0.236,759,0.481,764,0.38,766,0.969,769,0.908,773,1.07,774,0.279,776,3.613,777,0.933,778,1.038,780,0.401,781,0.261,782,1.5,786,0.969,793,0.205,800,0.426,801,0.481,803,0.195,820,0.226,838,0.413,850,0.442,852,0.812,854,0.218,863,0.442,887,0.864,901,0.186,902,5.807,929,1.121,932,3.845,933,0.531,942,0.247,945,0.442,950,0.205,956,0.933,957,0.247,960,0.401,964,1.294,975,0.371,980,0.663,984,0.401,1025,0.961,1035,0.19,1043,0.531,1057,0.195,1072,0.226,1075,0.481,1081,0.587,1086,0.705,1087,0.812,1096,0.673,1097,0.961,1107,0.2,1114,0.226,1115,0.442,1116,0.261,1117,0.261,1122,0.556,1125,0.211,1138,0.236,1139,0.426,1140,0.226,1141,1.917,1152,2.892,1160,3.4,1161,2.589,1162,0.743,1163,0.646,1175,0.587,1178,0.413,1183,0.211,1184,0.812,1188,0.442,1190,0.764,1191,0.413,1222,0.218,1278,0.842,1285,1.07,1294,0.842,1295,1.678,1298,0.787,1300,1.157,1305,0.261,1317,0.876,1325,0.205,1342,1.07,1348,0.673,1354,0.279,1371,0.236,1374,0.442,1376,0.261,1402,0.279,1404,0.646,1406,0.236,1424,0.247,1432,0.279,1434,0.261,1437,0.508,1472,0.236,1474,0.481,1476,0.508,1494,0.247,1526,1.551,1542,0.876,1562,0.797,1567,0.508,1570,0.247,1603,1.781,1604,0.236,1608,0.481,1623,0.279,1630,1.028,1676,0.247,1678,1.678,1684,0.247,1688,1.121,1694,0.917,1696,0.226,1708,0.46,1714,0.744,1715,0.876,1718,0.236,1725,0.969,1728,1.07,1736,0.797,1739,0.279,1740,0.279,1749,0.46,1756,1.038,1761,0.261,1766,0.236,1775,0.247,1780,0.481,1782,0.508,1794,1.602,1799,1.773,1806,1.433,1813,0.797,1817,1.038,1818,0.508,1821,0.279,1822,0.797,1824,0.545,1826,1.773,1827,0.508,1828,0.705,1830,0.247,1857,1.268,1858,0.261,1874,1.038,1875,1.389,1876,0.673,1884,0.705,1892,1.5,1893,0.226,1903,0.797,1911,0.236,1916,0.797,1920,0.236,1945,1.488,1975,0.917,1977,0.545,1984,1.585,1990,0.917,1993,0.545,2024,1.377,2025,0.545,2045,1.315,2065,0.508,2067,0.705,2081,0.545,2083,0.279,2087,1.038,2119,1.389,2141,1.121,2142,0.279,2144,0.545,2145,3.384,2147,0.307,2148,0.307,2149,0.279,2150,0.307,2151,0.6,2152,0.878,2153,0.279,2154,0.744,2155,0.307,2156,1.698,2157,0.6,2158,0.307,2159,0.545,2160,0.545,2161,0.878,2162,0.307,2163,4.844,2164,1.87,2165,0.279,2166,1.268,2167,0.307,2168,1.038,2169,1.639,2170,0.6,2171,0.307,2172,0.307,2173,0.279,2174,0.307,2175,0.307,2176,1.397,2177,0.6,2178,2.304,2179,1.397,2180,0.307,2181,0.307,2182,0.797,2183,1.488,2184,1.143,2185,1.143,2186,1.488,2187,0.307,2188,1.639,2189,0.6,2190,1.639,2191,0.878,2192,0.878,2193,0.6,2194,1.143,2195,0.6,2196,2.946,2197,1.639,2198,0.878,2199,3.572,2200,1.87,2201,1.87,2202,0.878,2203,0.6,2204,0.307,2205,0.307,2206,0.307,2207,0.878,2208,0.6,2209,0.307,2210,0.6,2211,0.878,2212,0.307,2213,0.545,2214,0.6,2215,0.307,2216,0.307,2217,0.279,2218,0.279,2219,0.307,2220,0.878,2221,0.307,2222,0.307,2223,0.307,2224,0.545,2225,1.038,2226,0.307,2227,0.6,2228,0.6,2229,0.261,2230,0.307,2231,0.279,2232,0.261,2233,0.307,2234,0.307,2235,0.307,2236,0.307,2237,0.878,2238,0.307,2239,0.878,2240,0.6,2241,0.878,2242,0.545,2243,0.6,2244,0.6,2245,0.878,2246,1.143,2247,0.279,2248,0.307,2249,0.307,2250,0.307,2251,0.307,2252,0.307,2253,0.307,2254,0.878,2255,1.143,2256,1.143,2257,1.143,2258,0.307,2259,0.6,2260,1.143,2261,2.091,2262,0.878,2263,0.307,2264,1.143,2265,1.143,2266,1.143,2267,0.307,2268,0.307,2269,0.6,2270,0.261,2271,1.143,2272,0.279,2273,0.307,2274,0.261,2275,0.261,2276,0.307,2277,0.307,2278,0.6,2279,0.6,2280,0.307,2281,0.878,2282,0.6,2283,0.307,2284,0.307,2285,0.307,2286,0.307,2287,0.307,2288,0.307,2289,0.307,2290,0.307,2291,0.307,2292,0.6,2293,0.307,2294,0.6,2295,0.307,2296,0.307,2297,0.307,2298,0.6,2299,0.279,2300,0.307,2301,0.6,2302,0.878,2303,0.6,2304,0.6,2305,0.307,2306,0.307,2307,0.307,2308,0.307,2309,0.307,2310,0.307,2311,0.307,2312,0.307,2313,0.307,2314,0.307,2315,0.307,2316,0.307,2317,1.143,2318,0.307,2319,0.6,2320,0.878,2321,0.307,2322,0.307,2323,0.307,2324,0.307,2325,0.307,2326,0.279,2327,0.307,2328,0.307,2329,0.6,2330,0.307,2331,0.6,2332,0.307,2333,0.307,2334,0.279,2335,0.307,2336,0.545,2337,0.307,2338,0.307,2339,0.6,2340,0.307,2341,0.307,2342,0.797,2343,0.307,2344,0.307,2345,0.307,2346,0.307,2347,0.6,2348,0.6,2349,0.6,2350,0.878,2351,0.307,2352,0.307,2353,0.307,2354,0.6,2355,0.307,2356,0.307,2357,0.307,2358,0.307,2359,0.307,2360,0.307,2361,0.307,2362,0.307,2363,0.307,2364,0.307]],["component/17",[11,0.17,12,0.288]],["keyword/17",[]],["title/18-1",[43,35.409,292,36.794]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["keyword/18-1",[]],["title/18-2",[11,14.211,394,29.392,590,36.454]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["keyword/18-2",[]],["title/18-3",[324,32.54,968,43.654]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["keyword/18-3",[]],["title/18-4",[2365,55.792]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["keyword/18-4",[]],["title/18-5",[324,38.861]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["keyword/18-5",[]],["title/18-6",[413,37.556,609,42.384]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["keyword/18-6",[]],["title/18-7",[2366,60.806]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["keyword/18-7",[]],["title/18-8",[590,42.384,2055,45.083]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["keyword/18-8",[]],["title/18-9",[11,10.01,195,21.858,270,26.445,535,18.078,590,25.676,831,21.858]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["keyword/18-9",[]],["title/18-10",[420,22.823,658,35.248,831,27.223,2367,43.479]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["keyword/18-10",[]],["title/18-11",[420,22.823,831,27.223,1348,36.687,2365,35.248]],["name/18-11",[]],["text/18-11",[]],["component/18-11",[]],["keyword/18-11",[]],["title/18-12",[195,24.247,831,24.247,924,32.677,1749,32.677,2365,31.395]],["name/18-12",[]],["text/18-12",[]],["component/18-12",[]],["keyword/18-12",[]],["title/18-13",[339,32.937,831,27.223,1678,38.416,2365,35.248]],["name/18-13",[]],["text/18-13",[]],["component/18-13",[]],["keyword/18-13",[]],["title/18-14",[24,29.392,324,27.987,2064,46.259]],["name/18-14",[]],["text/18-14",[]],["component/18-14",[]],["keyword/18-14",[]],["title/18-15",[1128,50.915,2368,57.626]],["name/18-15",[]],["text/18-15",[]],["component/18-15",[]],["keyword/18-15",[]],["title/18-16",[2369,64.233]],["name/18-16",[]],["text/18-16",[]],["component/18-16",[]],["keyword/18-16",[]],["title/18-17",[2370,68.821]],["name/18-17",[]],["text/18-17",[]],["component/18-17",[]],["keyword/18-17",[]],["title/18-18",[2371,53.784,2372,57.626]],["name/18-18",[]],["text/18-18",[]],["component/18-18",[]],["keyword/18-18",[]],["title/18-19",[324,32.54,593,53.784]],["name/18-19",[]],["text/18-19",[]],["component/18-19",[]],["keyword/18-19",[]],["title/18-20",[324,32.54,836,40.202]],["name/18-20",[]],["text/18-20",[]],["component/18-20",[]],["keyword/18-20",[]],["title/18-21",[1,33.059,2369,53.784]],["name/18-21",[]],["text/18-21",[]],["component/18-21",[]],["keyword/18-21",[]],["title/18-22",[350,32.54,590,42.384]],["name/18-22",[]],["text/18-22",[]],["component/18-22",[]],["keyword/18-22",[]],["title/18-23",[1122,40.202,2055,45.083]],["name/18-23",[]],["text/18-23",[]],["component/18-23",[]],["keyword/18-23",[]],["title/18-24",[1400,46.716,2055,45.083]],["name/18-24",[]],["text/18-24",[]],["component/18-24",[]],["keyword/18-24",[]],["title/18-25",[9,19.667,753,27.987,2373,49.563]],["name/18-25",[]],["text/18-25",[]],["component/18-25",[]],["keyword/18-25",[]],["title/18-26",[9,17.253,260,26.238,2365,35.248,2374,43.479]],["name/18-26",[]],["text/18-26",[]],["component/18-26",[]],["keyword/18-26",[]],["title/18-27",[324,27.987,1400,40.18,1794,41.82]],["name/18-27",[]],["text/18-27",[]],["component/18-27",[]],["keyword/18-27",[]],["title/18-28",[2055,45.083,2375,57.626]],["name/18-28",[]],["text/18-28",[]],["component/18-28",[]],["keyword/18-28",[]],["title/18-29",[324,32.54,2069,50.915]],["name/18-29",[]],["text/18-29",[]],["component/18-29",[]],["keyword/18-29",[]],["title/18-30",[324,32.54,812,41.241]],["name/18-30",[]],["text/18-30",[]],["component/18-30",[]],["keyword/18-30",[]],["title/18-31",[975,39.25,2067,50.915]],["name/18-31",[]],["text/18-31",[]],["component/18-31",[]],["keyword/18-31",[]],["title/18-32",[481,37.556,1129,50.915]],["name/18-32",[]],["text/18-32",[]],["component/18-32",[]],["keyword/18-32",[]],["title/18-33",[177,26.38,297,29.909,535,25.665]],["name/18-33",[]],["text/18-33",[]],["component/18-33",[]],["keyword/18-33",[]],["title/18-34",[122,25.354,324,24.552,594,32.937,2366,38.416]],["name/18-34",[]],["text/18-34",[]],["component/18-34",[]],["keyword/18-34",[]],["title/18-35",[167,24.177,324,24.552,668,24.943,2069,38.416]],["name/18-35",[]],["text/18-35",[]],["component/18-35",[]],["keyword/18-35",[]],["title/18-36",[217,29.392,324,27.987,1142,35.471]],["name/18-36",[]],["text/18-36",[]],["component/18-36",[]],["keyword/18-36",[]],["title/18-37",[190,24.943,517,30.333,1696,35.248,2080,40.581]],["name/18-37",[]],["text/18-37",[]],["component/18-37",[]],["keyword/18-37",[]],["title/18-38",[190,28.433,324,27.987,906,40.18]],["name/18-38",[]],["text/18-38",[]],["component/18-38",[]],["keyword/18-38",[]],["title/18-39",[99,41.82,324,27.987,2376,49.563]],["name/18-39",[]],["text/18-39",[]],["component/18-39",[]],["keyword/18-39",[]],["title/18-40",[198,28.433,649,34.577,1882,43.791]],["name/18-40",[]],["text/18-40",[]],["component/18-40",[]],["keyword/18-40",[]],["title/18-41",[155,34.016,325,29.615,704,31.979,2377,40.581]],["name/18-41",[]],["text/18-41",[]],["component/18-41",[]],["keyword/18-41",[]],["title/18-42",[77,50.915,2378,57.626]],["name/18-42",[]],["text/18-42",[]],["component/18-42",[]],["keyword/18-42",[]],["title/18-43",[324,27.987,687,36.454,772,46.259]],["name/18-43",[]],["text/18-43",[]],["component/18-43",[]],["keyword/18-43",[]],["title/18-44",[243,29.615,250,38.416,324,24.552,2379,40.581]],["name/18-44",[]],["text/18-44",[]],["component/18-44",[]],["keyword/18-44",[]],["title/18-45",[402,55.792]],["name/18-45",[]],["text/18-45",[]],["component/18-45",[]],["keyword/18-45",[]],["title/18",[11,12.467,387,22.823,590,31.979,2380,47.88]],["name/18",[52,0.728]],["text/18",[1,0.766,6,0.673,7,1.3,8,0.185,9,1.986,11,1.408,13,0.392,17,0.682,18,0.224,19,1.673,21,2.172,22,1.39,24,1.727,27,0.423,28,1.02,36,0.508,40,1.446,43,0.182,44,0.172,46,1.279,48,0.206,49,0.197,50,0.24,51,1.549,52,0.276,55,0.383,62,0.783,66,3.581,67,0.193,68,0.673,69,1.823,70,0.296,76,1.151,77,0.261,82,1.439,83,3.352,89,1.963,95,1.252,96,0.24,98,0.249,99,1.127,101,0.743,106,1.588,110,0.573,111,2.282,112,1.6,113,1.185,114,0.467,115,2.333,117,0.743,118,0.172,122,1.279,123,1.163,124,0.91,125,0.412,126,0.91,127,0.932,129,2.846,130,0.212,137,2.812,139,1.497,143,0.231,147,1.203,148,1.4,150,0.729,151,1.569,154,0.383,155,2.278,156,0.527,159,0.999,160,2.039,161,1.888,162,0.806,164,0.24,166,0.24,167,0.992,170,1.46,172,1.595,173,1.245,174,0.178,175,0.32,177,3.012,178,0.261,181,0.746,186,0.217,189,0.296,190,3.648,191,3.184,194,2.116,195,0.685,197,0.197,198,1.473,199,0.673,201,0.806,202,1.933,205,0.249,209,0.36,212,1.446,213,0.836,217,1.915,218,0.185,219,0.392,220,0.71,221,0.436,222,0.296,223,0.217,224,2.224,226,0.261,227,2.644,228,0.783,229,0.249,230,0.276,231,1.706,233,0.744,234,0.638,235,0.486,236,0.24,237,1.273,238,0.249,239,0.602,242,0.561,243,1.983,244,0.638,245,0.573,246,1.46,250,0.744,251,0.786,253,0.24,255,1.426,256,0.206,259,0.889,260,1.549,264,1.357,265,0.201,271,0.412,272,0.486,273,1.505,274,0.746,275,1.092,276,2.458,278,0.836,280,0.764,283,0.224,285,0.549,287,0.224,290,1.139,292,0.189,294,0.341,296,0.217,297,1.203,298,0.341,300,0.71,302,0.561,304,0.509,305,0.302,309,0.375,311,0.45,312,1.042,317,0.157,319,1.092,323,2.339,324,5.235,325,0.573,327,3.979,328,0.261,334,0.249,335,0.231,339,1.806,342,0.182,343,0.561,344,0.98,347,0.87,348,0.212,350,0.475,351,1.426,353,0.806,357,0.682,360,0.91,365,0.412,366,1.939,385,0.412,387,0.442,394,0.175,395,1.058,396,0.713,397,0.276,401,0.423,406,1.058,408,0.261,410,0.249,411,1.277,413,1.898,414,0.217,415,0.412,417,0.224,418,0.261,419,0.392,420,1.528,429,0.887,430,0.842,433,0.486,434,0.713,436,0.509,438,0.91,443,1.188,462,0.261,463,0.537,465,0.856,466,0.249,470,0.467,471,0.71,472,1.245,474,1.18,475,0.231,476,0.402,477,0.805,478,1.02,479,0.423,480,3.143,481,1.554,482,0.58,483,0.573,492,0.392,494,0.24,497,0.212,501,0.217,502,0.713,506,2.458,507,0.436,513,0.87,516,0.587,517,0.764,519,0.249,520,0.296,521,0.212,523,0.967,524,0.412,526,0.206,527,0.783,528,0.261,531,0.932,535,1.75,536,0.956,538,0.368,545,0.261,550,0.45,551,0.261,552,3.804,553,0.249,554,0.91,558,0.805,560,0.261,562,0.402,573,0.402,577,1.224,581,0.549,582,0.619,583,0.201,585,0.261,586,0.224,590,4.162,591,0.509,593,2.56,594,2.206,596,0.217,597,0.764,602,0.178,609,1.888,610,0.932,611,0.486,613,0.659,615,0.24,619,0.45,620,2.784,623,1.466,625,0.486,627,0.436,628,0.786,636,0.261,637,0.276,638,0.224,641,0.509,644,1.083,647,0.746,649,1.663,651,0.829,655,1.396,656,1.022,660,0.509,662,0.887,663,0.619,664,0.296,665,0.486,666,1.827,667,0.224,668,0.766,670,0.423,671,0.45,675,0.296,676,0.276,679,0.423,683,0.682,686,0.231,687,0.217,691,0.576,693,0.276,695,0.217,698,0.619,700,0.296,701,0.296,703,0.296,704,0.423,707,0.537,716,0.276,718,0.249,720,1.351,721,0.786,723,0.619,725,0.276,726,0.261,729,0.587,732,1.185,734,0.573,735,0.249,736,0.682,739,1.761,741,0.276,742,0.783,753,0.325,754,0.583,755,1.273,756,1.277,759,0.509,764,0.206,765,0.619,767,0.276,770,0.842,772,0.537,773,0.486,775,0.249,776,0.682,777,0.217,780,1.312,789,0.467,790,0.249,791,0.261,793,0.619,796,0.276,799,1.761,801,0.967,803,0.587,812,1.569,821,0.249,831,0.836,836,0.206,850,0.467,855,0.45,861,0.45,866,0.249,870,0.24,879,0.261,887,0.201,901,0.197,902,4.957,906,1.083,927,0.261,932,2.25,933,1.939,936,0.276,940,2.107,942,0.509,945,0.467,948,0.231,949,0.537,950,0.805,955,0.201,956,0.423,957,0.261,958,0.231,960,0.217,968,0.829,972,0.729,975,2.495,980,1.4,983,0.486,984,0.217,991,1.012,1004,0.206,1008,0.212,1024,1.806,1035,0.392,1043,0.197,1054,0.249,1057,0.206,1081,0.805,1087,0.659,1095,0.261,1096,1.127,1097,0.436,1100,0.212,1104,0.24,1107,0.212,1114,0.24,1115,1.616,1122,1.53,1128,2.986,1129,0.509,1138,0.249,1139,0.231,1141,0.701,1142,0.956,1152,0.573,1160,1.46,1161,0.423,1162,0.412,1163,0.682,1184,0.659,1185,0.249,1186,0.24,1190,0.619,1210,0.24,1215,0.619,1216,0.682,1218,0.537,1226,0.249,1285,0.924,1294,0.24,1298,0.436,1299,0.261,1300,1.494,1302,0.276,1310,0.249,1322,0.486,1323,0.467,1325,0.217,1340,0.276,1342,0.486,1351,0.509,1364,0.276,1370,0.576,1374,0.24,1377,0.924,1383,0.786,1387,0.296,1391,0.296,1400,1.616,1404,0.682,1406,1.32,1411,0.276,1428,0.296,1466,0.537,1469,0.486,1472,1.127,1474,0.744,1484,0.261,1505,0.276,1519,1.335,1526,0.201,1528,0.261,1532,0.486,1534,0.276,1542,0.924,1543,0.276,1570,1.576,1573,0.537,1577,0.276,1579,0.509,1585,0.537,1586,0.509,1588,0.276,1603,0.231,1605,0.786,1608,0.261,1624,0.261,1625,0.842,1628,0.261,1629,0.276,1630,0.467,1639,0.296,1646,0.24,1662,0.296,1670,0.296,1680,0.296,1682,0.276,1683,0.296,1684,0.261,1685,0.296,1691,0.296,1694,0.261,1695,0.276,1696,1.933,1698,1.095,1703,0.261,1704,0.276,1708,0.486,1715,0.249,1718,0.924,1728,0.71,1749,2.725,1759,0.261,1787,0.261,1791,0.786,1794,0.924,1795,0.296,1806,2.012,1809,0.296,1818,0.276,1826,0.537,1830,0.261,1853,0.296,1858,0.537,1876,0.486,1877,0.296,1878,0.576,1882,0.261,1884,0.967,1885,0.296,1887,0.296,1888,0.276,1892,0.744,1893,0.467,1911,0.249,1919,0.576,1920,0.249,1924,0.296,1932,0.276,1939,0.842,1944,0.537,1955,0.296,1975,0.744,1990,0.261,2024,0.887,2045,0.509,2053,0.296,2055,3.263,2060,1.565,2061,0.296,2062,0.276,2064,2.225,2065,0.276,2067,1.761,2069,2.853,2075,0.296,2080,2.56,2096,0.296,2119,0.276,2149,0.296,2154,0.276,2156,0.296,2159,0.576,2160,0.576,2163,0.296,2165,0.576,2166,0.296,2186,0.296,2213,0.576,2217,1.095,2218,0.296,2224,0.296,2225,0.296,2229,0.276,2231,0.576,2232,0.276,2242,0.296,2247,0.296,2270,0.276,2272,0.296,2274,0.537,2326,0.296,2336,0.296,2365,6.338,2366,2.268,2367,2.384,2368,1.095,2369,2.718,2370,1.565,2371,0.537,2372,1.335,2373,1.095,2374,0.576,2375,2.384,2376,0.842,2377,0.276,2378,0.576,2379,0.537,2381,0.325,2382,0.325,2383,0.576,2384,0.634,2385,1.471,2386,0.325,2387,0.325,2388,0.325,2389,0.325,2390,0.325,2391,0.927,2392,0.927,2393,0.325,2394,0.325,2395,0.325,2396,0.276,2397,0.634,2398,0.325,2399,0.927,2400,0.325,2401,0.927,2402,0.325,2403,0.325,2404,0.634,2405,0.325,2406,0.325,2407,0.325,2408,0.325,2409,0.325,2410,0.325,2411,0.927,2412,0.927,2413,0.927,2414,1.964,2415,0.927,2416,0.634,2417,0.634,2418,1.723,2419,0.927,2420,0.325,2421,0.927,2422,1.471,2423,0.325,2424,0.325,2425,0.634,2426,0.325,2427,0.325,2428,0.325,2429,1.784,2430,1.471,2431,0.325,2432,0.325,2433,0.927,2434,0.325,2435,0.325,2436,0.325,2437,0.325,2438,0.325,2439,0.634,2440,0.325,2441,0.325,2442,0.325,2443,2.567,2444,0.634,2445,0.296,2446,0.325,2447,0.634,2448,0.325,2449,0.634,2450,0.634,2451,0.325,2452,0.325,2453,0.325,2454,1.206,2455,0.325,2456,0.634,2457,0.325,2458,0.634,2459,0.325,2460,0.634,2461,0.325,2462,0.927,2463,0.325,2464,0.325,2465,0.325,2466,0.325,2467,0.296,2468,0.325,2469,0.325,2470,0.325,2471,0.325,2472,0.325,2473,0.325,2474,0.325,2475,0.325,2476,0.325,2477,0.325,2478,0.325,2479,0.325,2480,0.325,2481,0.325,2482,0.325,2483,0.296,2484,0.325,2485,0.325,2486,0.325,2487,0.634,2488,0.509,2489,0.509,2490,0.576,2491,0.325,2492,0.325,2493,0.927,2494,0.325,2495,0.325,2496,0.325,2497,0.325,2498,0.634,2499,0.634,2500,0.634,2501,0.325,2502,0.634,2503,0.325,2504,0.325,2505,0.325,2506,0.927,2507,0.325,2508,0.325,2509,0.634,2510,0.325,2511,0.325,2512,0.325,2513,0.325,2514,0.325,2515,0.325,2516,0.325,2517,0.325,2518,0.634,2519,0.325,2520,0.325,2521,0.325,2522,0.576,2523,0.634,2524,0.325,2525,0.325,2526,0.325,2527,0.927,2528,0.325,2529,0.325,2530,0.325,2531,0.634,2532,0.325,2533,0.325,2534,0.276,2535,0.325,2536,0.325,2537,0.634,2538,0.325,2539,0.325,2540,0.634,2541,0.325,2542,0.325,2543,0.296,2544,0.325,2545,0.325,2546,0.325,2547,0.325,2548,0.927,2549,0.325,2550,0.325,2551,0.325,2552,0.325,2553,0.325,2554,0.325,2555,0.325,2556,0.325,2557,0.325,2558,0.325,2559,0.325,2560,0.325,2561,0.325,2562,0.325,2563,0.325,2564,0.325,2565,0.325,2566,0.325,2567,0.325,2568,0.325]],["component/18",[11,0.17,12,0.288]],["keyword/18",[]],["title/19-1",[43,35.409,292,36.794]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["keyword/19-1",[]],["title/19-2",[119,28.901,309,32.301,394,29.392]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["keyword/19-2",[]],["title/19-3",[119,25.354,218,27.223,298,25.784,321,26.238]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["keyword/19-3",[]],["title/19-4",[119,33.602,972,38.372]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["keyword/19-4",[]],["title/19-5",[11,12.467,119,25.354,350,24.552,2569,32.937]],["name/19-5",[]],["text/19-5",[]],["component/19-5",[]],["keyword/19-5",[]],["title/19-6",[502,37.556,2569,43.654]],["name/19-6",[]],["text/19-6",[]],["component/19-6",[]],["keyword/19-6",[]],["title/19-7",[260,34.774,2569,43.654]],["name/19-7",[]],["text/19-7",[]],["component/19-7",[]],["keyword/19-7",[]],["title/19-8",[9,15.367,168,26.377,218,24.247,298,22.966,321,23.369]],["name/19-8",[]],["text/19-8",[]],["component/19-8",[]],["keyword/19-8",[]],["title/19-9",[309,44.852]],["name/19-9",[]],["text/19-9",[]],["component/19-9",[]],["keyword/19-9",[]],["title/19-10",[13,26.377,112,22.582,198,22.216,265,26.377,649,27.017]],["name/19-10",[]],["text/19-10",[]],["component/19-10",[]],["keyword/19-10",[]],["title/19-11",[112,28.901,1119,41.82,2569,37.546]],["name/19-11",[]],["text/19-11",[]],["component/19-11",[]],["keyword/19-11",[]],["title/19-12",[69,36.081,738,50.915]],["name/19-12",[]],["text/19-12",[]],["component/19-12",[]],["keyword/19-12",[]],["title/19-13",[647,26.377,902,23.369,2570,38.726,2571,38.726,2572,38.726]],["name/19-13",[]],["text/19-13",[]],["component/19-13",[]],["keyword/19-13",[]],["title/19-14",[9,17.253,111,23.142,119,25.354,401,31.979]],["name/19-14",[]],["text/19-14",[]],["component/19-14",[]],["keyword/19-14",[]],["title/19-15",[124,33.759,902,29.909,2573,49.563]],["name/19-15",[]],["text/19-15",[]],["component/19-15",[]],["keyword/19-15",[]],["title/19-16",[515,55.792]],["name/19-16",[]],["text/19-16",[]],["component/19-16",[]],["keyword/19-16",[]],["title/19-17",[13,33.759,2488,43.791,2489,43.791]],["name/19-17",[]],["text/19-17",[]],["component/19-17",[]],["keyword/19-17",[]],["title/19-18",[217,34.173,2574,57.626]],["name/19-18",[]],["text/19-18",[]],["component/19-18",[]],["keyword/19-18",[]],["title/19-19",[11,12.467,119,25.354,199,26.717,406,25.784]],["name/19-19",[]],["text/19-19",[]],["component/19-19",[]],["keyword/19-19",[]],["title/19-20",[11,12.467,119,25.354,482,18.873,1078,31.979]],["name/19-20",[]],["text/19-20",[]],["component/19-20",[]],["keyword/19-20",[]],["title/19-21",[172,27.151,803,34.577,1160,33.003]],["name/19-21",[]],["text/19-21",[]],["component/19-21",[]],["keyword/19-21",[]],["title/19-22",[11,12.467,119,25.354,620,26.238,799,38.416]],["name/19-22",[]],["text/19-22",[]],["component/19-22",[]],["keyword/19-22",[]],["title/19-23",[111,26.38,119,28.901,609,36.454]],["name/19-23",[]],["text/19-23",[]],["component/19-23",[]],["keyword/19-23",[]],["title/19-24",[118,33.602,177,30.671]],["name/19-24",[]],["text/19-24",[]],["component/19-24",[]],["keyword/19-24",[]],["title/19-25",[177,40.385]],["name/19-25",[]],["text/19-25",[]],["component/19-25",[]],["keyword/19-25",[]],["title/19-26",[218,36.081,2575,57.626]],["name/19-26",[]],["text/19-26",[]],["component/19-26",[]],["keyword/19-26",[]],["title/19-27",[218,36.081,1078,42.384]],["name/19-27",[]],["text/19-27",[]],["component/19-27",[]],["keyword/19-27",[]],["title/19-28",[119,22.582,198,22.216,626,26.377,2569,29.337,2576,38.726]],["name/19-28",[]],["text/19-28",[]],["component/19-28",[]],["keyword/19-28",[]],["title/19-29",[112,22.582,198,22.216,265,26.377,649,27.017,790,32.677]],["name/19-29",[]],["text/19-29",[]],["component/19-29",[]],["keyword/19-29",[]],["title/19-30",[265,26.377,440,31.395,748,26.377,887,26.377,2569,29.337]],["name/19-30",[]],["text/19-30",[]],["component/19-30",[]],["keyword/19-30",[]],["title/19-31",[217,34.173,581,37.556]],["name/19-31",[]],["text/19-31",[]],["component/19-31",[]],["keyword/19-31",[]],["title/19-32",[260,29.909,265,33.759,748,33.759]],["name/19-32",[]],["text/19-32",[]],["component/19-32",[]],["keyword/19-32",[]],["title/19-33",[67,37.556,790,48.624]],["name/19-33",[]],["text/19-33",[]],["component/19-33",[]],["keyword/19-33",[]],["title/19-34",[217,22.966,218,24.247,246,25.787,406,22.966,2577,36.144]],["name/19-34",[]],["text/19-34",[]],["component/19-34",[]],["keyword/19-34",[]],["title/19-35",[218,31.032,482,21.513,2577,46.259]],["name/19-35",[]],["text/19-35",[]],["component/19-35",[]],["keyword/19-35",[]],["title/19-36",[201,34.774,1300,39.25]],["name/19-36",[]],["text/19-36",[]],["component/19-36",[]],["keyword/19-36",[]],["title/19-37",[119,18.53,218,19.897,980,20.291,1894,46.12,2578,34.994,2579,29.66]],["name/19-37",[]],["text/19-37",[]],["component/19-37",[]],["keyword/19-37",[]],["title/19-38",[218,21.858,481,22.751,1078,25.676,2569,26.445,2580,34.91,2581,34.91]],["name/19-38",[]],["text/19-38",[]],["component/19-38",[]],["keyword/19-38",[]],["title/19-39",[218,36.081,1893,46.716]],["name/19-39",[]],["text/19-39",[]],["component/19-39",[]],["keyword/19-39",[]],["title/19-40",[98,29.456,265,23.778,980,22.29,1893,28.301,2582,38.443,2583,34.91]],["name/19-40",[]],["text/19-40",[]],["component/19-40",[]],["keyword/19-40",[]],["title/19-41",[119,25.354,167,24.177,309,28.337,668,24.943]],["name/19-41",[]],["text/19-41",[]],["component/19-41",[]],["keyword/19-41",[]],["title/19-42",[111,23.142,167,24.177,217,25.784,668,24.943]],["name/19-42",[]],["text/19-42",[]],["component/19-42",[]],["keyword/19-42",[]],["title/19-43",[402,55.792]],["name/19-43",[]],["text/19-43",[]],["component/19-43",[]],["keyword/19-43",[]],["title/19",[119,25.354,309,28.337,387,22.823,600,31.979]],["name/19",[2584,0.859]],["text/19",[3,0.364,6,1.975,7,0.285,8,0.577,9,2.671,10,0.285,11,1.93,13,3.058,19,4.576,21,0.547,22,2.017,24,0.285,28,1.109,29,1.187,36,1.027,44,0.28,49,0.32,55,0.32,62,0.344,63,0.364,66,1.218,67,0.601,68,0.566,69,1.673,75,0.481,78,0.481,81,0.86,82,1.237,83,1.509,89,1.308,95,1.816,98,2.001,101,0.738,106,1.579,110,0.327,111,3.137,112,2.398,115,1.975,118,1.383,119,5.358,120,0.28,121,0.28,123,0.313,124,0.904,129,1.939,137,0.687,139,0.993,147,1.237,148,0.307,149,0.976,150,0.884,154,0.32,156,0.831,159,1.087,160,2.358,161,0.976,162,0.556,167,0.946,168,1.159,170,1.091,172,2.359,174,0.801,175,0.267,176,0.354,177,3.773,179,1.504,182,0.327,184,1.038,186,0.354,190,1.176,191,2.126,192,0.95,194,1.848,195,0.577,197,0.32,198,3.382,199,0.566,201,0.556,202,0.39,209,0.301,211,0.628,212,2.805,213,1.283,216,0.481,217,3.792,218,4.729,220,0.406,221,0.698,227,0.376,228,0.66,229,0.406,235,0.778,242,0.32,243,0.904,244,0.364,245,0.327,246,1.579,253,0.39,256,0.643,260,1.431,264,0.628,265,5.179,268,0.66,275,0.335,276,1.848,278,2.92,297,0.29,298,1.009,302,0.614,305,1.816,306,1.545,307,0.354,309,4.045,311,1.332,317,0.906,319,0.643,321,1.237,332,0.814,342,0.295,346,0.39,347,0.267,348,0.344,350,0.75,353,1.237,360,0.628,364,0.39,368,0.354,374,0.307,385,0.95,386,0.39,389,2.952,394,0.285,395,1.215,396,0.313,401,0.354,402,0.39,406,1.406,408,0.814,413,0.601,414,0.354,415,0.344,419,1.615,423,0.449,426,0.354,429,0.39,434,0.313,435,0.364,437,0.39,438,0.327,439,0.354,440,4.387,443,1.779,463,0.307,465,0.376,472,0.335,477,0.678,478,1.335,482,1.602,484,1.239,492,0.904,497,0.344,502,2.926,506,0.577,513,0.313,515,1.38,516,0.643,517,0.926,518,0.481,522,0.354,524,1.218,527,0.344,528,0.425,531,0.335,535,0.881,536,0.66,550,0.376,552,1.615,554,0.904,560,0.425,564,0.721,576,0.481,577,0.376,578,0.481,581,1.109,583,0.327,594,1.006,599,0.976,602,0.801,605,0.39,609,1.744,613,0.376,617,0.39,620,1.781,626,0.628,627,0.698,628,0.449,633,0.354,642,0.66,644,0.39,647,0.628,649,2.727,652,0.376,663,0.354,665,0.778,666,0.32,667,0.364,668,0.762,670,0.354,694,0.39,696,0.406,702,0.481,704,0.678,707,0.307,708,1.327,717,0.449,722,0.884,723,0.678,729,0.335,731,0.39,732,0.364,734,0.327,735,0.406,738,1.173,740,0.814,742,0.344,748,2.514,753,1.815,754,0.906,755,0.589,756,0.344,769,0.344,777,0.678,780,2.364,784,0.425,790,1.729,791,0.425,793,0.354,799,0.425,806,0.28,807,0.313,825,0.39,831,0.577,836,1.864,840,0.814,850,0.39,861,0.721,863,0.39,879,0.425,887,1.396,889,1.239,901,0.32,902,4.919,903,0.449,906,0.747,912,0.449,926,0.376,933,1.965,944,0.449,954,0.814,955,1.159,972,0.32,975,0.904,980,3.278,986,1.504,991,0.698,1001,0.335,1013,0.628,1018,0.698,1021,1.289,1024,0.698,1035,0.327,1043,1.579,1054,0.406,1057,0.335,1075,0.425,1078,4.831,1081,0.678,1097,0.364,1100,0.344,1101,0.449,1107,0.344,1115,0.39,1119,3.634,1120,0.449,1121,0.449,1122,0.926,1141,0.252,1142,0.344,1152,1.396,1160,2.458,1161,0.354,1162,1.912,1175,0.976,1273,0.425,1299,0.814,1300,0.628,1325,0.678,1342,0.406,1360,0.481,1371,0.778,1377,0.406,1404,0.747,1424,0.425,1426,2.213,1505,0.86,1507,1.239,1527,0.481,1532,0.778,1539,3,1553,0.922,1567,0.86,1579,1.173,1586,1.173,1603,1.038,1619,0.481,1628,0.425,1630,1.922,1657,0.481,1659,2.919,1660,0.449,1695,0.86,1697,0.425,1703,0.425,1708,0.406,1715,0.406,1718,0.406,1738,0.449,1749,0.406,1766,0.406,1775,0.425,1784,0.481,1787,0.425,1791,1.912,1830,0.425,1841,0.814,1851,0.449,1856,3.908,1879,0.481,1882,0.425,1884,0.425,1888,0.86,1889,0.481,1893,0.747,1894,1.239,1911,0.406,1920,0.406,2024,0.39,2032,0.481,2047,1.327,2062,0.449,2129,0.481,2153,0.481,2168,0.481,2173,0.481,2232,0.449,2274,0.449,2275,0.449,2299,1.327,2334,0.481,2342,1.702,2371,0.449,2377,0.449,2379,0.449,2396,1.239,2443,0.481,2467,0.481,2488,0.814,2489,0.814,2490,0.481,2534,0.449,2543,0.481,2569,6.326,2570,0.481,2571,1.702,2572,1.327,2573,2.371,2574,0.481,2575,3.214,2576,2.672,2577,1.239,2579,3.229,2580,3.214,2581,4.113,2583,3.46,2585,1.015,2586,1.874,2587,1.874,2588,0.529,2589,1.015,2590,0.529,2591,0.529,2592,0.529,2593,0.529,2594,1.015,2595,1.015,2596,0.529,2597,0.529,2598,0.529,2599,2.942,2600,1.015,2601,3.25,2602,1.462,2603,1.462,2604,1.462,2605,1.462,2606,2.942,2607,2.611,2608,1.462,2609,0.529,2610,0.529,2611,0.529,2612,0.529,2613,0.529,2614,0.529,2615,0.529,2616,0.529,2617,0.529,2618,0.529,2619,0.529,2620,0.529,2621,0.529,2622,0.529,2623,0.529,2624,0.529,2625,0.529,2626,0.529,2627,1.874,2628,0.529,2629,0.529,2630,0.529,2631,1.015,2632,1.015,2633,0.529,2634,0.529,2635,0.529,2636,1.874,2637,1.462,2638,0.529,2639,3.214,2640,0.529,2641,1.015,2642,1.015,2643,0.529,2644,0.529,2645,0.529,2646,0.529,2647,0.529,2648,0.529,2649,0.481,2650,0.529,2651,2.256,2652,0.529,2653,0.529,2654,0.529,2655,0.529,2656,0.529,2657,0.529,2658,0.529,2659,0.529,2660,1.015,2661,0.529,2662,1.015,2663,0.529,2664,0.529,2665,0.529,2666,0.529,2667,1.015,2668,1.015,2669,0.529,2670,2.256,2671,0.529,2672,0.529,2673,0.529,2674,1.015,2675,1.015,2676,0.529,2677,2.256,2678,1.874,2679,0.529,2680,0.529,2681,0.529,2682,1.462,2683,0.529,2684,1.015,2685,0.529,2686,0.529,2687,0.529,2688,0.529,2689,1.015,2690,0.529,2691,0.529,2692,0.481,2693,0.529,2694,0.922,2695,0.529,2696,0.529,2697,1.015,2698,1.015,2699,1.015,2700,0.529,2701,0.529,2702,1.015,2703,1.015,2704,0.529,2705,0.529,2706,1.015,2707,1.015,2708,1.462,2709,0.529,2710,0.529,2711,0.529,2712,1.015,2713,0.529,2714,0.529,2715,0.529,2716,0.529,2717,0.529,2718,1.015,2719,0.529,2720,0.529,2721,0.481,2722,0.529,2723,0.529,2724,0.529,2725,0.529,2726,0.529,2727,0.529]],["component/19",[11,0.17,12,0.288]],["keyword/19",[]],["title/20-1",[43,35.409,292,36.794]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["keyword/20-1",[]],["title/20-2",[11,12.467,117,24.177,118,25.354,394,25.784]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["keyword/20-2",[]],["title/20-3",[11,11.104,109,23.369,117,21.534,118,22.582,172,21.214]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["keyword/20-3",[]],["title/20-4",[11,10.01,117,19.412,118,20.356,199,21.451,406,20.702,535,18.078]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["keyword/20-4",[]],["title/20-5",[482,25.013,806,33.602]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["keyword/20-5",[]],["title/20-6",[482,25.013,807,37.556]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["keyword/20-6",[]],["title/20-7",[11,11.104,117,21.534,118,22.582,209,24.247,420,20.328]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["keyword/20-7",[]],["title/20-8",[753,32.54,2728,57.626]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["keyword/20-8",[]],["title/20-9",[11,12.467,116,27.762,482,18.873,626,29.615]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["keyword/20-9",[]],["title/20-10",[482,25.013,1526,39.25]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["keyword/20-10",[]],["title/20-11",[9,17.253,1215,31.979,1526,29.615,1565,38.416]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["keyword/20-11",[]],["title/20-12",[9,22.866,1565,50.915]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["keyword/20-12",[]],["title/20-13",[9,17.253,742,31.117,1526,29.615,2729,40.581]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["keyword/20-13",[]],["title/20-14",[9,22.866,2729,53.784]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["keyword/20-14",[]],["title/20-15",[9,17.253,1526,29.615,1659,36.687,2730,40.581]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["keyword/20-15",[]],["title/20-16",[9,22.866,2730,53.784]],["name/20-16",[]],["text/20-16",[]],["component/20-16",[]],["keyword/20-16",[]],["title/20-17",[0,34.577,68,30.455,753,27.987]],["name/20-17",[]],["text/20-17",[]],["component/20-17",[]],["keyword/20-17",[]],["title/20-18",[201,29.909,213,31.032,620,29.909]],["name/20-18",[]],["text/20-18",[]],["component/20-18",[]],["keyword/20-18",[]],["title/20-19",[190,24.943,201,26.238,321,26.238,583,29.615]],["name/20-19",[]],["text/20-19",[]],["component/20-19",[]],["keyword/20-19",[]],["title/20-20",[201,34.774,1300,39.25]],["name/20-20",[]],["text/20-20",[]],["component/20-20",[]],["keyword/20-20",[]],["title/20-21",[9,19.667,209,31.032,2731,49.563]],["name/20-21",[]],["text/20-21",[]],["component/20-21",[]],["keyword/20-21",[]],["title/20-22",[9,19.667,1141,26.016,2732,49.563]],["name/20-22",[]],["text/20-22",[]],["component/20-22",[]],["keyword/20-22",[]],["title/20-23",[156,21.858,175,19.412,177,28.273,184,27.311,278,21.858]],["name/20-23",[]],["text/20-23",[]],["component/20-23",[]],["keyword/20-23",[]],["title/20-24",[1001,48.013]],["name/20-24",[]],["text/20-24",[]],["component/20-24",[]],["keyword/20-24",[]],["title/20-25",[402,55.792]],["name/20-25",[]],["text/20-25",[]],["component/20-25",[]],["keyword/20-25",[]],["title/20-26",[172,31.567,2733,63.458]],["name/20-26",[]],["text/20-26",[]],["component/20-26",[]],["keyword/20-26",[]],["title/20",[11,11.104,117,21.534,118,22.582,387,20.328,853,36.144]],["name/20",[2734,0.859]],["text/20",[1,0.533,6,0.571,8,1.073,9,2.616,10,1.416,11,2.172,12,0.236,13,0.911,19,0.316,21,1.224,22,1.568,25,0.367,28,3.928,29,0.933,44,1.392,46,2.632,49,2.317,51,1.348,55,1.142,61,0.367,62,0.665,66,0.347,67,1.117,68,0.571,76,3.793,77,0.428,82,1.035,83,0.274,86,0.727,89,1.318,91,0.784,95,1.559,101,2.185,102,1.013,106,0.323,107,0.452,109,0.561,111,1.581,112,1.886,113,0.367,115,0.571,116,1.897,117,4.562,118,4.932,119,0.283,120,1,121,1,123,0.872,124,0.33,125,0.957,126,0.633,127,0.648,129,1.623,131,0.452,132,0.393,137,1.674,139,1.886,142,0.347,145,0.379,147,1.441,148,0.31,150,0.323,151,0.347,154,0.619,156,1.495,159,0.31,160,0.561,161,0.357,162,0.807,166,0.393,167,0.27,168,0.33,170,1.581,172,0.939,174,0.561,175,3.022,176,0.357,177,3.316,180,0.347,184,0.379,185,0.393,190,1.184,191,2.541,192,1.227,194,2.324,195,0.837,196,0.393,197,1.978,199,0.298,201,3.571,207,0.409,209,3.961,211,0.633,212,0.753,213,3.838,217,1.224,218,1.292,221,0.367,228,0.347,231,1.227,234,0.367,237,0.854,239,0.347,242,1.791,246,0.891,256,0.648,259,0.619,260,1.623,266,1.084,268,0.347,271,0.347,273,0.784,274,0.633,275,0.648,276,1.495,278,2.025,282,0.485,285,0.605,294,0.793,298,1.762,302,0.323,305,1.948,306,0.605,307,0.357,309,1.117,312,0.891,317,0.913,319,0.338,321,2.372,322,0.428,323,0.854,325,0.33,332,0.428,339,0.367,342,0.571,347,1.328,350,1.965,351,0.347,353,2.372,357,0.393,358,0.428,360,0.633,366,0.891,368,2.73,381,0.409,382,1.447,385,1.924,386,0.393,387,0.488,394,0.287,395,1.224,396,0.872,401,0.357,406,1.017,411,0.347,413,0.605,419,1.405,420,0.9,432,0.347,433,0.409,434,0.872,435,1.299,438,0.33,443,0.323,463,0.854,465,0.379,472,1.666,473,0.393,477,0.357,478,1.117,480,0.33,481,0.316,482,2.415,483,0.33,492,0.911,501,0.683,502,1.117,506,1.292,508,0.409,513,1.936,516,0.338,517,0.338,519,0.409,524,0.665,525,1.673,527,0.665,528,0.821,531,0.933,533,0.409,534,2.269,535,1.674,536,2.314,537,2.812,538,0.31,542,0.379,550,0.379,551,1.182,554,1.168,556,0.753,558,1.756,559,1.338,566,0.428,569,0.409,570,0.665,571,0.665,572,0.648,573,0.933,574,0.648,577,0.379,581,1.556,582,0.357,583,0.633,586,0.704,594,0.367,595,1.935,596,0.357,597,0.933,602,2.1,609,0.984,614,0.683,615,0.393,617,0.393,619,0.727,620,3.28,626,0.633,642,0.665,647,0.33,649,0.933,655,0.379,657,0.452,662,0.393,666,0.619,674,1.013,692,0.393,694,0.393,696,1.129,698,0.357,707,0.31,720,0.367,722,1.374,723,0.357,727,0.428,732,1.013,733,0.357,734,0.911,738,0.428,739,0.428,740,0.821,742,1.227,746,1.6,747,1.926,748,2.202,750,0.452,751,0.452,753,2.992,754,1.271,755,3.553,756,1.227,764,1.44,777,0.357,806,0.542,807,0.605,820,0.393,821,0.409,832,0.379,833,0.428,836,0.338,852,0.379,854,0.379,861,0.379,870,0.393,887,0.911,901,0.323,902,4.539,905,0.452,922,1.046,926,0.379,929,0.428,932,4.597,933,2.153,941,0.428,950,0.357,955,0.911,956,2.378,959,0.409,964,1.405,972,0.891,980,1.897,983,0.784,1001,1.196,1008,0.347,1013,0.33,1021,0.704,1024,0.704,1025,0.367,1035,0.633,1043,0.891,1057,0.338,1074,0.409,1078,0.357,1081,0.357,1085,0.409,1087,0.379,1090,0.452,1091,0.452,1100,0.665,1104,0.393,1107,0.347,1108,0.428,1114,0.393,1122,3.02,1125,0.704,1126,0.452,1139,0.379,1141,0.702,1148,0.753,1151,0.452,1152,3.074,1160,2.317,1162,1.227,1167,0.367,1170,1.084,1172,0.379,1173,0.428,1174,0.452,1175,0.683,1183,0.367,1185,2.014,1186,1.935,1187,0.409,1189,1.614,1190,0.357,1191,0.367,1204,0.753,1207,0.409,1208,0.428,1215,3.042,1216,0.393,1222,1.046,1269,0.428,1294,0.753,1298,1.299,1300,2.37,1308,0.452,1312,1.248,1313,0.821,1320,0.867,1323,0.393,1326,0.452,1346,1.129,1347,0.821,1359,0.428,1367,0.485,1371,0.409,1392,0.428,1400,2.408,1404,0.753,1424,2.109,1426,0.452,1465,1.182,1469,0.409,1479,2.228,1480,1.248,1487,0.452,1506,0.485,1507,0.452,1508,0.485,1510,0.485,1526,3.702,1532,0.784,1538,0.485,1554,0.867,1565,0.428,1579,0.428,1588,0.452,1602,0.929,1605,0.867,1606,0.485,1622,0.485,1624,0.428,1629,0.452,1630,1.084,1633,0.409,1646,0.753,1658,0.485,1659,2.937,1682,0.452,1688,0.428,1694,0.428,1696,0.393,1704,0.867,1708,0.409,1713,0.485,1714,0.867,1715,1.129,1716,0.485,1723,0.452,1725,0.452,1728,1.447,1737,0.867,1738,0.452,1753,0.485,1759,1.515,1761,0.452,1766,0.409,1775,0.428,1780,0.821,1782,1.248,1808,0.452,1811,0.485,1828,0.428,1841,0.821,1850,0.485,1851,0.867,1871,0.485,1890,0.452,1920,0.409,1931,0.452,1953,0.485,1954,0.485,1959,0.867,1975,0.428,2044,0.867,2045,0.428,2117,0.485,2154,0.452,2182,1.715,2183,0.485,2196,0.929,2229,0.452,2270,0.452,2275,0.867,2366,0.428,2383,0.485,2396,0.452,2429,0.485,2445,0.485,2483,0.485,2488,0.428,2489,0.428,2522,1.338,2534,0.452,2579,0.452,2639,0.929,2649,0.485,2692,0.485,2694,2.063,2721,1.338,2728,2.387,2729,0.452,2730,0.452,2731,1.715,2732,1.715,2735,0.534,2736,0.534,2737,0.534,2738,1.023,2739,0.534,2740,1.473,2741,0.534,2742,1.473,2743,1.023,2744,0.534,2745,0.534,2746,0.534,2747,0.534,2748,0.534,2749,0.534,2750,1.888,2751,1.473,2752,2.629,2753,0.534,2754,1.023,2755,3.832,2756,1.888,2757,0.534,2758,0.534,2759,1.023,2760,0.534,2761,0.534,2762,1.888,2763,0.534,2764,0.534,2765,0.534,2766,1.023,2767,1.023,2768,0.534,2769,0.534,2770,0.534,2771,0.534,2772,0.534,2773,1.023,2774,1.023,2775,0.534,2776,0.534,2777,0.534,2778,0.534,2779,0.534,2780,0.534,2781,0.534,2782,0.534,2783,0.534,2784,0.534,2785,0.534,2786,0.534,2787,0.534,2788,0.534,2789,0.534,2790,0.534,2791,0.534,2792,0.534,2793,0.534,2794,0.534,2795,0.534,2796,0.534,2797,0.534,2798,0.534,2799,1.023,2800,1.023,2801,1.473,2802,0.534,2803,1.888,2804,0.534,2805,0.534,2806,0.534,2807,0.534,2808,0.534,2809,1.023,2810,0.534,2811,0.534,2812,0.534,2813,0.534,2814,0.534,2815,0.534,2816,1.023,2817,0.534,2818,0.534,2819,0.534,2820,0.534,2821,0.534,2822,0.534,2823,1.888,2824,0.534,2825,0.534,2826,0.534,2827,0.534,2828,0.534,2829,0.534,2830,0.534,2831,0.534,2832,0.534,2833,0.534,2834,0.534,2835,0.534,2836,0.534,2837,1.023,2838,0.534,2839,0.534,2840,0.534,2841,0.534,2842,0.534,2843,0.534,2844,0.534,2845,0.534,2846,0.534,2847,0.534,2848,0.534,2849,0.534,2850,0.534,2851,0.534,2852,0.534,2853,0.534,2854,0.534,2855,0.534,2856,0.534]],["component/20",[11,0.17,12,0.288]],["keyword/20",[]]],"invertedIndex":[["",{"_index":902,"title":{"19-13":{},"19-15":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["0.0",{"_index":2466,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["0.002270643",{"_index":2123,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["0.5",{"_index":2242,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["0.7",{"_index":2201,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["00",{"_index":816,"title":{},"name":{"4":{}},"text":{},"component":{},"keyword":{}}],["00:00:00",{"_index":2711,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["01",{"_index":840,"title":{},"name":{"5":{}},"text":{"4":{},"11":{},"19":{}},"component":{},"keyword":{}}],["02",{"_index":910,"title":{},"name":{"6":{}},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["03",{"_index":1143,"title":{},"name":{"7":{}},"text":{},"component":{},"keyword":{}}],["04",{"_index":1275,"title":{},"name":{"8":{}},"text":{},"component":{},"keyword":{}}],["05",{"_index":1311,"title":{},"name":{"9":{}},"text":{},"component":{},"keyword":{}}],["06",{"_index":1332,"title":{},"name":{"10":{}},"text":{},"component":{},"keyword":{}}],["1",{"_index":270,"title":{"3":{},"18-9":{}},"name":{},"text":{"2":{},"3":{},"12":{},"13":{},"16":{},"17":{}},"component":{},"keyword":{}}],["1.0",{"_index":1639,"title":{},"name":{},"text":{"13":{},"18":{}},"component":{},"keyword":{}}],["1.10.13",{"_index":921,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["1.9.20",{"_index":916,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["10",{"_index":600,"title":{"12":{},"19":{},"12-3":{},"12-4":{}},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"17":{}},"component":{},"keyword":{}}],["10).thi",{"_index":2360,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["100",{"_index":1994,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["1000",{"_index":2281,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["100mb",{"_index":1996,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["1019",{"_index":895,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["1024",{"_index":1995,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["11",{"_index":853,"title":{"20":{}},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["1234",{"_index":2533,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["12345",{"_index":2787,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["14",{"_index":1536,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["14250:14250",{"_index":2477,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["14268:14268",{"_index":2476,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["15",{"_index":1197,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"15":{}},"component":{},"keyword":{}}],["15\",\"id\":1,\"name\":\"iphone\",\"price\":999.99},{\"description\":\"appl",{"_index":1271,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["15–30",{"_index":2719,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["16",{"_index":841,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["16686:16686",{"_index":2475,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["16:47:16",{"_index":911,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["17",{"_index":851,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["17.0.10",{"_index":839,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["17.0.10+7",{"_index":844,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["1735686000",{"_index":2605,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["1735689600",{"_index":2603,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["1l",{"_index":1974,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["1rzgn5tiysnmztrof869lq",{"_index":2620,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["2",{"_index":658,"title":{"4":{},"11":{},"18-10":{}},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{},"keyword":{}}],["2.0",{"_index":75,"title":{},"name":{},"text":{"2":{},"19":{}},"component":{},"keyword":{}}],["2.1",{"_index":2727,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["200",{"_index":1617,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["2000",{"_index":2190,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["201",{"_index":1529,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["2016",{"_index":422,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["2023",{"_index":925,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["2024",{"_index":59,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["2024.1",{"_index":946,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["2025",{"_index":2710,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["204",{"_index":1555,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["3",{"_index":1348,"title":{"12":{},"18-11":{}},"name":{},"text":{"12":{},"15":{},"17":{}},"component":{},"keyword":{}}],["3\",\"name\":\"iphone14",{"_index":1556,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["3.0",{"_index":2129,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{},"keyword":{}}],["3.0.17",{"_index":918,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["3.0.3",{"_index":1637,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["3.0</featur",{"_index":1234,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["3.1",{"_index":1871,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["3.1</featur",{"_index":1232,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["3.9.6",{"_index":882,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["3000",{"_index":2333,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["3xx",{"_index":2743,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["4",{"_index":924,"title":{"13":{},"18-12":{}},"name":{},"text":{"4":{},"11":{},"13":{}},"component":{},"keyword":{}}],["4.0.0.xsd",{"_index":1032,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["4.1.1",{"_index":2174,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["40",{"_index":688,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["400",{"_index":1622,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{},"keyword":{}}],["401",{"_index":2677,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["403",{"_index":2706,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["404",{"_index":1554,"title":{},"name":{},"text":{"12":{},"14":{},"20":{}},"component":{},"keyword":{}}],["5",{"_index":1678,"title":{"14":{},"18-13":{}},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["5.x",{"_index":2104,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["50",{"_index":2247,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["500",{"_index":2191,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["5000",{"_index":2243,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["503",{"_index":1745,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["5775:5775/udp",{"_index":2471,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["5778:5778",{"_index":2474,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["6",{"_index":388,"title":{"15":{}},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["6.1",{"_index":54,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"11":{}},"component":{},"keyword":{}}],["6.2.0",{"_index":894,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["600",{"_index":1783,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["64",{"_index":845,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["6831:6831/udp",{"_index":2472,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["6832:6832/udp",{"_index":2473,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["7",{"_index":2057,"title":{"16":{}},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["7519",{"_index":2587,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["799.99",{"_index":1540,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["8",{"_index":891,"title":{"17":{}},"name":{},"text":{"4":{},"5":{},"11":{}},"component":{},"keyword":{}}],["8.6",{"_index":904,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["8080",{"_index":35,"title":{},"name":{},"text":{"1":{},"15":{}},"component":{},"keyword":{}}],["8902769",{"_index":843,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["8</project.build.sourceencod",{"_index":1045,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["8</project.reporting.outputencod",{"_index":1047,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["9",{"_index":2380,"title":{"18":{}},"name":{},"text":{},"component":{},"keyword":{}}],["9080",{"_index":1634,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["9411:9411",{"_index":2478,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["98765",{"_index":2440,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["a1b2c3d4",{"_index":2633,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["abil",{"_index":736,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["abnorm",{"_index":2518,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["abort",{"_index":2179,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["aborton",{"_index":2194,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["abov",{"_index":271,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["absolut",{"_index":2114,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["abstract",{"_index":1315,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"15":{}},"component":{},"keyword":{}}],["acceler",{"_index":539,"title":{},"name":{},"text":{"3":{},"13":{}},"component":{},"keyword":{}}],["accept",{"_index":2275,"title":{},"name":{},"text":{"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["access",{"_index":198,"title":{"14-15":{},"15-20":{},"18-40":{},"19-10":{},"19-28":{},"19-29":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["accident",{"_index":1849,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["accommod",{"_index":1685,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["accord",{"_index":752,"title":{},"name":{},"text":{"3":{},"12":{},"15":{}},"component":{},"keyword":{}}],["accordingli",{"_index":1303,"title":{},"name":{},"text":{"8":{},"11":{},"14":{}},"component":{},"keyword":{}}],["account",{"_index":214,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["accur",{"_index":251,"title":{},"name":{},"text":{"2":{},"15":{},"18":{}},"component":{},"keyword":{}}],["accuraci",{"_index":193,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["achiev",{"_index":1608,"title":{},"name":{},"text":{"13":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["acl",{"_index":1886,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["act",{"_index":178,"title":{},"name":{},"text":{"2":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["action",{"_index":358,"title":{},"name":{},"text":{"2":{},"3":{},"15":{},"20":{}},"component":{},"keyword":{}}],["activ",{"_index":644,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["actual",{"_index":1633,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["ad",{"_index":476,"title":{"17-11":{}},"name":{},"text":{"3":{},"5":{},"7":{},"8":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["adapt",{"_index":166,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["add",{"_index":195,"title":{"18-9":{},"18-12":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["addit",{"_index":68,"title":{"7-10":{},"11-33":{},"20-17":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["addition",{"_index":1570,"title":{},"name":{},"text":{"12":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["address",{"_index":465,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"12":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["adeptli",{"_index":141,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["adequ",{"_index":503,"title":{},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{},"keyword":{}}],["adher",{"_index":1579,"title":{},"name":{},"text":{"13":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["adjust",{"_index":733,"title":{},"name":{},"text":{"3":{},"5":{},"7":{},"8":{},"11":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["admin",{"_index":1856,"title":{},"name":{},"text":{"14":{},"19":{}},"component":{},"keyword":{}}],["adopt",{"_index":466,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"18":{}},"component":{},"keyword":{}}],["advanc",{"_index":346,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"19":{}},"component":{},"keyword":{}}],["advantag",{"_index":471,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["affect",{"_index":942,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"18":{}},"component":{},"keyword":{}}],["affili",{"_index":105,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["aftereach",{"_index":1286,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["again",{"_index":783,"title":{},"name":{},"text":{"3":{},"14":{},"15":{}},"component":{},"keyword":{}}],["against",{"_index":2173,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["agent",{"_index":2375,"title":{"18-28":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["aggreg",{"_index":1931,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["aggress",{"_index":2300,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["agil",{"_index":2148,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["agnost",{"_index":1577,"title":{},"name":{},"text":{"13":{},"14":{},"18":{}},"component":{},"keyword":{}}],["agre",{"_index":85,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["agreement",{"_index":2297,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["aim",{"_index":128,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"15":{}},"component":{},"keyword":{}}],["air",{"_index":1201,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["air\",\"id\":2,\"name\":\"macbook\",\"price\":1299.99",{"_index":1272,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["ajug",{"_index":447,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["alert",{"_index":250,"title":{"18-44":{}},"name":{},"text":{"2":{},"15":{},"18":{}},"component":{},"keyword":{}}],["alg",{"_index":2594,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["algorithm",{"_index":2593,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["align",{"_index":1828,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["alik",{"_index":1397,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["allargsconstructor",{"_index":1158,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["alloc",{"_index":1987,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["allocatedmemori",{"_index":1985,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["allow",{"_index":194,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["along",{"_index":569,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["alongsid",{"_index":1075,"title":{},"name":{},"text":{"5":{},"11":{},"17":{},"19":{}},"component":{},"keyword":{}}],["alter",{"_index":763,"title":{},"name":{},"text":{"3":{},"12":{},"14":{}},"component":{},"keyword":{}}],["altern",{"_index":498,"title":{},"name":{},"text":{"3":{},"10":{},"11":{},"16":{},"17":{}},"component":{},"keyword":{}}],["although",{"_index":1854,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["alway",{"_index":1139,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["amazon",{"_index":856,"title":{},"name":{},"text":{"4":{},"11":{},"13":{}},"component":{},"keyword":{}}],["amd64",{"_index":898,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["amount",{"_index":1806,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["analysi",{"_index":2064,"title":{"18-14":{}},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["analyz",{"_index":2069,"title":{"18-29":{},"18-35":{}},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["and/or",{"_index":104,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{},"keyword":{}}],["annot",{"_index":753,"title":{"12-5":{},"13-10":{},"16-7":{},"17-12":{},"17-13":{},"17-28":{},"18-25":{},"20-8":{},"20-17":{}},"name":{},"text":{"3":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["anomali",{"_index":2379,"title":{"18-44":{}},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["anonym",{"_index":2531,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["anoth",{"_index":1830,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["ant",{"_index":919,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["ant(tm",{"_index":920,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["antora",{"_index":23,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["apach",{"_index":74,"title":{"4-6":{},"4-11":{},"4-19":{},"11-6":{},"11-11":{},"11-19":{}},"name":{},"text":{"2":{},"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["api",{"_index":51,"title":{"2":{},"12-22":{},"12-23":{},"13-7":{},"13-9":{},"17-10":{},"17-11":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["api/ord",{"_index":2669,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["api/product",{"_index":1206,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{},"keyword":{}}],["api/products/chapter03",{"_index":1481,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["api/products/products/{id",{"_index":1645,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["api/products/{id",{"_index":1649,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["api:2.1",{"_index":2657,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["api:3.1",{"_index":1713,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["api:4.0.1",{"_index":1963,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["api:5.1.1",{"_index":2094,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["api</artifactid",{"_index":1057,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["apikey",{"_index":1815,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["apirespons",{"_index":1615,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["apiresponses(valu",{"_index":1614,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["apivers",{"_index":2030,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["api’",{"_index":1592,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["app",{"_index":157,"title":{},"name":{},"text":{"2":{},"12":{},"15":{}},"component":{},"keyword":{}}],["app.java",{"_index":1003,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["appear",{"_index":369,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["appl",{"_index":1196,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["appli",{"_index":310,"title":{"17-15":{}},"name":{},"text":{"2":{},"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["applic",{"_index":83,"title":{"6-1":{},"7-5":{},"7-9":{},"11-28":{},"11-32":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["applicaitonscop",{"_index":1477,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["application/hal+json",{"_index":1516,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["application/json",{"_index":1487,"title":{},"name":{},"text":{"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["application/octet",{"_index":1502,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["application/vnd.api+json",{"_index":1515,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["application/x",{"_index":1506,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["application/xml",{"_index":1489,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["applicationpath(\"/api",{"_index":1214,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["applicationscop",{"_index":1190,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["application’",{"_index":679,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["appreci",{"_index":1353,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["approach",{"_index":554,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["appropri",{"_index":1104,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"15":{},"18":{},"20":{}},"component":{},"keyword":{}}],["apptest.java",{"_index":1005,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["arbitrarili",{"_index":2079,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["arch",{"_index":897,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["archetyp",{"_index":993,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["archetype:gener",{"_index":994,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["architect",{"_index":140,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["architectur",{"_index":159,"title":{"3-9":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["archiv",{"_index":1336,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["area",{"_index":605,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["argument",{"_index":1173,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["around",{"_index":543,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["array",{"_index":689,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"13":{}},"component":{},"keyword":{}}],["arraylist",{"_index":1192,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["articl",{"_index":2295,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["artifact",{"_index":992,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["artifactid",{"_index":979,"title":{},"name":{},"text":{"4":{},"5":{},"11":{}},"component":{},"keyword":{}}],["artifactid>jakarta.jakartae",{"_index":1056,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["artifactid>junit",{"_index":1067,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["artifactid>liberti",{"_index":1253,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["artifactid>lombok</artifactid",{"_index":1052,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["artifactid>maven",{"_index":1249,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["artifactid>microprofil",{"_index":1107,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["artifactid>microprofile</artifactid",{"_index":1061,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["artifactid>mp",{"_index":1038,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["artifactid>opentelemetri",{"_index":1132,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["ascend",{"_index":2805,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["asciidoc",{"_index":14,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["aspect",{"_index":165,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{},"keyword":{}}],["assert",{"_index":1293,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["assertequals(2",{"_index":1291,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["assertnotnull(product",{"_index":1290,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["assess",{"_index":1301,"title":{},"name":{},"text":{"8":{},"11":{},"15":{}},"component":{},"keyword":{}}],["assign",{"_index":2689,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["assist",{"_index":937,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["associ",{"_index":357,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"18":{},"20":{}},"component":{},"keyword":{}}],["assum",{"_index":295,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["asynchron",{"_index":614,"title":{"17-4":{},"17-28":{},"17-29":{},"17-32":{},"17-33":{}},"name":{},"text":{"3":{},"13":{},"17":{},"20":{}},"component":{},"keyword":{}}],["atlanta",{"_index":446,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["attach",{"_index":2429,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["attack",{"_index":2708,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["attempt",{"_index":782,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["attent",{"_index":1877,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["attribut",{"_index":1749,"title":{"18-12":{}},"name":{},"text":{"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["aud",{"_index":2606,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["audienc",{"_index":2607,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["audit",{"_index":1882,"title":{"18-40":{}},"name":{},"text":{"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["augment",{"_index":1599,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["auth",{"_index":986,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"19":{}},"component":{},"keyword":{}}],["authent",{"_index":309,"title":{"19":{},"19-2":{},"19-9":{},"19-41":{}},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"13":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["authentication—th",{"_index":2852,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["author",{"_index":13,"title":{"19-10":{},"19-17":{}},"name":{},"text":{"1":{},"3":{},"4":{},"11":{},"13":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["authtoken",{"_index":2785,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["auto",{"_index":1071,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["autoclos",{"_index":2762,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["autom",{"_index":586,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"13":{},"14":{},"15":{},"18":{},"20":{}},"component":{},"keyword":{}}],["automat",{"_index":1122,"title":{"18-23":{}},"name":{},"text":{"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["autonom",{"_index":2147,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["avail",{"_index":245,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["availablememori",{"_index":1992,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["averag",{"_index":2085,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["avoid",{"_index":517,"title":{"17-21":{},"18-37":{}},"name":{},"text":{"3":{},"4":{},"9":{},"11":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["aw",{"_index":1273,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"19":{}},"component":{},"keyword":{}}],["away",{"_index":1904,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["axy8dctdaglsbgljb3rozq",{"_index":2621,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["azul",{"_index":858,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["azur",{"_index":896,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["b",{"_index":322,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["back",{"_index":512,"title":{},"name":{},"text":{"3":{},"16":{}},"component":{},"keyword":{}}],["backend",{"_index":2443,"title":{},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["background",{"_index":293,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["balanc",{"_index":796,"title":{},"name":{},"text":{"3":{},"15":{},"18":{}},"component":{},"keyword":{}}],["bandwidth",{"_index":2338,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["base",{"_index":112,"title":{"19-10":{},"19-11":{},"19-29":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["base64",{"_index":2590,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["baselin",{"_index":691,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["baseuri",{"_index":2846,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["baseuri(productapiuri",{"_index":2835,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["basi",{"_index":88,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["basic",{"_index":296,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["batch",{"_index":2445,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["bc0240f3c744dd6b6ec2920b3cd08dcc295161a",{"_index":883,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["be",{"_index":667,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["bean",{"_index":1346,"title":{"12-20":{}},"name":{},"text":{"12":{},"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["beanparam",{"_index":2793,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bearer",{"_index":2639,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["becom",{"_index":433,"title":{},"name":{},"text":{"3":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["befor",{"_index":1081,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["beforeeach",{"_index":1284,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["begin",{"_index":821,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"18":{},"20":{}},"component":{},"keyword":{}}],["beginn",{"_index":135,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{},"keyword":{}}],["behav",{"_index":1306,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["behavior",{"_index":732,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["behind",{"_index":1364,"title":{},"name":{},"text":{"12":{},"16":{},"18":{}},"component":{},"keyword":{}}],["below",{"_index":174,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["benefici",{"_index":2483,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["benefit",{"_index":401,"title":{"3-10":{},"19-14":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["besid",{"_index":1600,"title":{},"name":{},"text":{"13":{},"16":{}},"component":{},"keyword":{}}],["best",{"_index":668,"title":{"14-19":{},"15-22":{},"17-20":{},"17-27":{},"17-32":{},"17-36":{},"17-42":{},"17-51":{},"18-35":{},"19-41":{},"19-42":{}},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["better",{"_index":698,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["between",{"_index":478,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["beyond",{"_index":1787,"title":{},"name":{},"text":{"14":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["bigdecim",{"_index":1805,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["binari",{"_index":1504,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["bind",{"_index":534,"title":{"12-13":{},"12-14":{}},"name":{},"text":{"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["bit",{"_index":846,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["block",{"_index":551,"title":{},"name":{},"text":{"3":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["bodi",{"_index":1480,"title":{},"name":{},"text":{"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["boilerpl",{"_index":525,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["boldfac",{"_index":349,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["bom</artifactid",{"_index":1133,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["book",{"_index":378,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["boolean",{"_index":1723,"title":{},"name":{},"text":{"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["boostrap",{"_index":935,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["boot",{"_index":2654,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["both",{"_index":686,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"13":{},"14":{},"18":{}},"component":{},"keyword":{}}],["bottleneck",{"_index":2067,"title":{"18-31":{}},"name":{},"text":{"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["boundari",{"_index":628,"title":{},"name":{},"text":{"3":{},"18":{},"19":{}},"component":{},"keyword":{}}],["breach",{"_index":1888,"title":{},"name":{},"text":{"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["break",{"_index":2272,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["breakdown",{"_index":2075,"title":{},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["breaker",{"_index":571,"title":{"17-9":{},"17-24":{},"17-25":{},"17-26":{},"17-27":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"20":{}},"component":{},"keyword":{}}],["breaker’",{"_index":2273,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["breviti",{"_index":2842,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["bridg",{"_index":504,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["brief",{"_index":864,"title":{},"name":{},"text":{"4":{},"11":{},"13":{}},"component":{},"keyword":{}}],["broad",{"_index":672,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["broader",{"_index":412,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["broken",{"_index":1913,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["brought",{"_index":469,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["browser",{"_index":37,"title":{},"name":{},"text":{"1":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["bu",{"_index":1864,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["bucket",{"_index":2084,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["bug",{"_index":1102,"title":{},"name":{},"text":{"6":{},"11":{},"14":{}},"component":{},"keyword":{}}],["build",{"_index":10,"title":{"4-5":{},"7-5":{},"11-5":{},"11-28":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["build(productserviceclient.class",{"_index":2839,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["build.gradl",{"_index":926,"title":{},"name":{},"text":{"4":{},"11":{},"14":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["build/sit",{"_index":31,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["builder",{"_index":2823,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["built",{"_index":27,"title":{"14-5":{}},"name":{},"text":{"1":{},"3":{},"5":{},"11":{},"12":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["bulkhead",{"_index":572,"title":{"17-7":{},"17-46":{},"17-47":{},"17-48":{},"17-49":{},"17-50":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"20":{}},"component":{},"keyword":{}}],["bulkhead(valu",{"_index":2348,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["bulkheadvalu",{"_index":2347,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["burden",{"_index":608,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["busi",{"_index":720,"title":{},"name":{},"text":{"3":{},"9":{},"11":{},"12":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["button",{"_index":988,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["c",{"_index":58,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["cach",{"_index":359,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"17":{}},"component":{},"keyword":{}}],["calcul",{"_index":204,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["call",{"_index":156,"title":{"20-23":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["callback",{"_index":1667,"title":{},"name":{},"text":{"13":{},"16":{}},"component":{},"keyword":{}}],["caller",{"_index":2157,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["capabl",{"_index":562,"title":{"13-5":{},"14-7":{}},"name":{},"text":{"3":{},"4":{},"8":{},"10":{},"11":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["captur",{"_index":2080,"title":{"18-37":{}},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["card",{"_index":1809,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["cardholdernam",{"_index":1801,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["cardnumb",{"_index":1800,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["care",{"_index":2232,"title":{},"name":{},"text":{"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["carefulli",{"_index":2506,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["carri",{"_index":2402,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["cart",{"_index":188,"title":{},"name":{},"text":{"2":{},"9":{},"11":{}},"component":{},"keyword":{}}],["cascad",{"_index":2141,"title":{"17-21":{},"17-22":{},"17-23":{}},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["case",{"_index":168,"title":{"19-8":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["cassandra",{"_index":2450,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["castañeda",{"_index":445,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["catalog",{"_index":176,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"12":{},"14":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["catch",{"_index":1975,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["categor",{"_index":1660,"title":{},"name":{},"text":{"13":{},"16":{},"19":{}},"component":{},"keyword":{}}],["categori",{"_index":566,"title":{"16-8":{}},"name":{},"text":{"3":{},"16":{},"20":{}},"component":{},"keyword":{}}],["category=electron",{"_index":2779,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["cater",{"_index":133,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["caught",{"_index":2849,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["caus",{"_index":773,"title":{"17-22":{}},"name":{},"text":{"3":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["cautiou",{"_index":2526,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["ccpa",{"_index":2550,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["cd",{"_index":30,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["cdi",{"_index":537,"title":{"12-7":{},"12-8":{},"15-19":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["central",{"_index":179,"title":{},"name":{},"text":{"2":{},"12":{},"16":{},"19":{}},"component":{},"keyword":{}}],["centric",{"_index":661,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["certain",{"_index":1861,"title":{},"name":{},"text":{"14":{},"15":{},"16":{}},"component":{},"keyword":{}}],["certif",{"_index":2747,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["chain",{"_index":1954,"title":{},"name":{},"text":{"15":{},"20":{}},"component":{},"keyword":{}}],["challeng",{"_index":474,"title":{},"name":{},"text":{"3":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["chang",{"_index":280,"title":{"14-18":{}},"name":{},"text":{"2":{},"3":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["channel",{"_index":1789,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["chapter",{"_index":387,"title":{"3":{},"4":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["chapter01",{"_index":404,"title":{},"name":{"3":{}},"text":{},"component":{},"keyword":{}}],["chapter02",{"_index":815,"title":{},"name":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{}},"text":{},"component":{},"keyword":{}}],["chapter03",{"_index":1349,"title":{},"name":{"12":{}},"text":{},"component":{},"keyword":{}}],["chapter04",{"_index":1574,"title":{},"name":{"13":{}},"text":{},"component":{},"keyword":{}}],["chapter05",{"_index":1679,"title":{},"name":{"14":{}},"text":{},"component":{},"keyword":{}}],["chapter06",{"_index":1899,"title":{},"name":{"15":{}},"text":{},"component":{},"keyword":{}}],["chapter07",{"_index":2058,"title":{},"name":{"16":{}},"text":{},"component":{},"keyword":{}}],["chapter08",{"_index":2146,"title":{},"name":{"17":{}},"text":{},"component":{},"keyword":{}}],["chapter10",{"_index":2584,"title":{},"name":{"19":{}},"text":{},"component":{},"keyword":{}}],["chapter11",{"_index":2734,"title":{},"name":{"20":{}},"text":{},"component":{},"keyword":{}}],["characterist",{"_index":1938,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["check",{"_index":317,"title":{"15-5":{},"15-6":{},"15-7":{},"15-8":{},"15-9":{},"15-10":{},"15-12":{},"15-13":{},"15-17":{},"15-18":{},"15-20":{},"15-22":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["checkdatabaseconnect",{"_index":2008,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["checker",{"_index":1940,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["checkout",{"_index":210,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["child",{"_index":2401,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["choic",{"_index":660,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"18":{}},"component":{},"keyword":{}}],["choos",{"_index":362,"title":{"6-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"11":{},"16":{}},"component":{},"keyword":{}}],["chosen",{"_index":931,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["ci/cd",{"_index":1852,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["circuit",{"_index":570,"title":{"17-9":{},"17-24":{},"17-25":{},"17-26":{},"17-27":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"20":{}},"component":{},"keyword":{}}],["circuitbreak",{"_index":2183,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{},"keyword":{}}],["circular",{"_index":2516,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["claim",{"_index":2569,"title":{"19-5":{},"19-6":{},"19-7":{},"19-11":{},"19-28":{},"19-30":{},"19-38":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["clariti",{"_index":2738,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["class",{"_index":1141,"title":{"7-2":{},"7-3":{},"7-4":{},"11-25":{},"11-26":{},"11-27":{},"12-18":{},"12-19":{},"15-15":{},"15-16":{},"17-15":{},"17-16":{},"17-17":{},"20-22":{}},"name":{},"text":{"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["classpath",{"_index":1965,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["cleaner",{"_index":2773,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["cleanli",{"_index":1431,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["clear",{"_index":555,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"13":{}},"component":{},"keyword":{}}],["clearli",{"_index":2042,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["click",{"_index":987,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["client",{"_index":118,"title":{"20":{},"19-24":{},"20-2":{},"20-3":{},"20-4":{},"20-7":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["close",{"_index":1694,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["closur",{"_index":2763,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["cloud",{"_index":126,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"10":{},"11":{},"12":{},"14":{},"15":{},"18":{},"20":{}},"component":{},"keyword":{}}],["cluster",{"_index":794,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["clutter",{"_index":1375,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["cncf",{"_index":2382,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["co",{"_index":1369,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["code",{"_index":46,"title":{"2-7":{},"4-12":{},"11-12":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["codebas",{"_index":1650,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["coexist",{"_index":699,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["cohes",{"_index":2404,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["collabor",{"_index":328,"title":{},"name":{},"text":{"2":{},"3":{},"13":{},"18":{}},"component":{},"keyword":{}}],["collect",{"_index":224,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"16":{},"18":{}},"component":{},"keyword":{}}],["collect(collectors.tolist",{"_index":2325,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["collector",{"_index":2368,"title":{"18-15":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["collector.example.com",{"_index":2537,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["collector_zipkin_http_port=9411",{"_index":2470,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["com.example.service/dynamicbulkheadoperation/bulkhead/value=5",{"_index":2362,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["com.example.service/dynamicbulkheadoperation/bulkhead/waitingtaskqueue=10",{"_index":2363,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["combin",{"_index":1603,"title":{"17-40":{},"17-43":{}},"name":{},"text":{"13":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["come",{"_index":2718,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["command",{"_index":365,"title":{"5-3":{},"11-22":{}},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"18":{}},"component":{},"keyword":{}}],["comment",{"_index":1635,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["commerc",{"_index":114,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["commit",{"_index":461,"title":{},"name":{},"text":{"3":{},"13":{}},"component":{},"keyword":{}}],["committ",{"_index":442,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["common",{"_index":1325,"title":{},"name":{},"text":{"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["commonli",{"_index":861,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["commun",{"_index":197,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["compani",{"_index":648,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["compar",{"_index":678,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["compat",{"_index":516,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"11":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["compel",{"_index":659,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["compens",{"_index":2748,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["compil",{"_index":922,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"20":{}},"component":{},"keyword":{}}],["compileonli",{"_index":1090,"title":{},"name":{},"text":{"6":{},"11":{},"20":{}},"component":{},"keyword":{}}],["compirs",{"_index":171,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["complement",{"_index":690,"title":{},"name":{},"text":{"3":{},"12":{},"16":{}},"component":{},"keyword":{}}],["complementari",{"_index":673,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["complet",{"_index":151,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"9":{},"11":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["completablefuture.completedfuture(\"pay",{"_index":2262,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completablefuture.runasync",{"_index":2356,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completablefuture.supplyasync",{"_index":2285,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completablestag",{"_index":2269,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completionstag",{"_index":2259,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completionstage<str",{"_index":2260,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["completionstage<t",{"_index":2741,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["completionstage<void",{"_index":2355,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["complex",{"_index":477,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"14":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["compli",{"_index":2547,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["complianc",{"_index":77,"title":{"18-42":{}},"name":{},"text":{"2":{},"18":{},"20":{}},"component":{},"keyword":{}}],["compliant",{"_index":1670,"title":{},"name":{},"text":{"13":{},"18":{}},"component":{},"keyword":{}}],["complic",{"_index":561,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["compon",{"_index":396,"title":{"3-6":{},"12-17":{}},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["components/schemas/product",{"_index":1643,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["comprehens",{"_index":130,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["compris",{"_index":441,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["compromis",{"_index":560,"title":{},"name":{},"text":{"3":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["comput",{"_index":436,"title":{},"name":{},"text":{"3":{},"10":{},"11":{},"18":{}},"component":{},"keyword":{}}],["concaten",{"_index":2795,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["concept",{"_index":968,"title":{"15-4":{},"18-3":{}},"name":{},"text":{"4":{},"11":{},"12":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["conceptu",{"_index":1951,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["concern",{"_index":607,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["concis",{"_index":1358,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["conclud",{"_index":2854,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["conclus",{"_index":402,"title":{"3-12":{},"18-45":{},"19-43":{},"20-25":{}},"name":{},"text":{"15":{},"19":{}},"component":{},"keyword":{}}],["concurr",{"_index":657,"title":{},"name":{},"text":{"3":{},"17":{},"20":{}},"component":{},"keyword":{}}],["condit",{"_index":91,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["condition",{"_index":1842,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["conduct",{"_index":241,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["confidenti",{"_index":2566,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["config",{"_index":116,"title":{"14-16":{},"14-19":{},"17-19":{},"17-41":{},"20-9":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"9":{},"11":{},"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["config.properti",{"_index":1630,"title":{},"name":{},"text":{"13":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["configbuild",{"_index":1706,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configkey",{"_index":2757,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["configproperti",{"_index":1676,"title":{"14-10":{},"14-11":{}},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["configproperty(nam",{"_index":1813,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["configproperty(name=\"product.maintenancemessag",{"_index":1752,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configproperty(name=\"product.maintenancemod",{"_index":1721,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configprovid",{"_index":1705,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configprovider.getconfig().getvalue(\"database.url",{"_index":1844,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configsourc",{"_index":1677,"title":{"14-13":{},"14-14":{}},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["configur",{"_index":482,"title":{"14":{},"14-2":{},"14-4":{},"14-5":{},"14-6":{},"14-7":{},"14-8":{},"14-9":{},"14-12":{},"14-15":{},"14-17":{},"14-18":{},"14-19":{},"15-21":{},"17-14":{},"17-19":{},"17-24":{},"17-26":{},"17-31":{},"17-41":{},"17-50":{},"19-20":{},"19-35":{},"20-5":{},"20-6":{},"20-9":{},"20-10":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["config’",{"_index":1786,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["confirm",{"_index":226,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"18":{}},"component":{},"keyword":{}}],["conflict",{"_index":976,"title":{},"name":{},"text":{"4":{},"6":{},"11":{}},"component":{},"keyword":{}}],["conjunct",{"_index":1655,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["connect",{"_index":577,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["connecttimeout",{"_index":2847,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["connecttimeout(3",{"_index":2836,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["consecut",{"_index":2240,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["consid",{"_index":984,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"11":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["consider",{"_index":1142,"title":{"7-7":{},"7-10":{},"11-30":{},"11-33":{},"18-36":{}},"name":{},"text":{"7":{},"11":{},"12":{},"18":{},"19":{}},"component":{},"keyword":{}}],["consist",{"_index":192,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"12":{},"13":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["consortium",{"_index":1589,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["constant",{"_index":1485,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["constantli",{"_index":544,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["constraint",{"_index":1095,"title":{},"name":{},"text":{"6":{},"11":{},"13":{},"18":{}},"component":{},"keyword":{}}],["construct",{"_index":1465,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["constructor",{"_index":1074,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["consul",{"_index":1846,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["consult",{"_index":1261,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["consum",{"_index":764,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["consumes(\"application/json",{"_index":2800,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["consumes(mediatype.application_json",{"_index":1482,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["consumpt",{"_index":1588,"title":{},"name":{},"text":{"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["contact",{"_index":1657,"title":{},"name":{},"text":{"13":{},"19":{}},"component":{},"keyword":{}}],["contain",{"_index":6,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["container",{"_index":963,"title":{},"name":{},"text":{"4":{},"7":{},"10":{},"11":{},"12":{},"14":{},"15":{}},"component":{},"keyword":{}}],["containerport",{"_index":2034,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["content",{"_index":1025,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["content(mediatyp",{"_index":1618,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["contenttyp",{"_index":1486,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["context",{"_index":413,"title":{"12-7":{},"12-8":{},"18-6":{}},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["contextroot",{"_index":1225,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["contextroot=\"${app.context.root",{"_index":1242,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["contextu",{"_index":1370,"title":{},"name":{},"text":{"12":{},"18":{}},"component":{},"keyword":{}}],["continu",{"_index":335,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"11":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["contract",{"_index":556,"title":{},"name":{},"text":{"3":{},"13":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["contribut",{"_index":712,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["contributor",{"_index":60,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["control",{"_index":649,"title":{"18-40":{},"19-10":{},"19-29":{}},"name":{},"text":{"3":{},"9":{},"11":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["control(rbac",{"_index":580,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["conveni",{"_index":1399,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["convent",{"_index":50,"title":{"2-10":{}},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"18":{}},"component":{},"keyword":{}}],["convers",{"_index":749,"title":{"14-11":{}},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["convert",{"_index":1170,"title":{"14-12":{}},"name":{},"text":{"7":{},"11":{},"12":{},"14":{},"20":{}},"component":{},"keyword":{}}],["converter<t",{"_index":1709,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["convey",{"_index":2010,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["cooki",{"_index":2721,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["cookieparam",{"_index":2788,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["coordin",{"_index":1606,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{},"keyword":{}}],["copi",{"_index":79,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{},"keyword":{}}],["copyright",{"_index":57,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["core",{"_index":538,"title":{"12":{},"12-3":{},"12-4":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["corpor",{"_index":450,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["correct",{"_index":1079,"title":{},"name":{},"text":{"5":{},"11":{},"14":{}},"component":{},"keyword":{}}],["correctli",{"_index":735,"title":{},"name":{},"text":{"3":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["correl",{"_index":2366,"title":{"18-7":{},"18-34":{}},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["correspond",{"_index":1469,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["corretto",{"_index":857,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["cost",{"_index":2458,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["count",{"_index":2056,"title":{"16-13":{}},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["counted(nam",{"_index":2125,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["counter",{"_index":2071,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["counter’",{"_index":2077,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["coupl",{"_index":759,"title":{},"name":{},"text":{"3":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["cover",{"_index":43,"title":{"2-5":{},"3-2":{},"4-2":{},"11-2":{},"12-2":{},"13-2":{},"14-1":{},"15-2":{},"16-2":{},"17-1":{},"18-1":{},"19-1":{},"20-1":{}},"name":{},"text":{"2":{},"12":{},"16":{},"18":{}},"component":{},"keyword":{}}],["cpu",{"_index":2096,"title":{},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["craft",{"_index":1350,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["creat",{"_index":420,"title":{"5-1":{},"7-2":{},"7-3":{},"7-4":{},"11-25":{},"11-26":{},"11-27":{},"12-24":{},"14-13":{},"16-14":{},"17-17":{},"18-10":{},"18-11":{},"20-7":{}},"name":{},"text":{"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["created\").build",{"_index":1525,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["createproduct",{"_index":1460,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["createproduct(product",{"_index":1441,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["creation",{"_index":619,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"12":{},"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["credenti",{"_index":1680,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["credit",{"_index":2530,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["criteria",{"_index":785,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["critic",{"_index":264,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["criticalpaymentexcept",{"_index":2211,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["criticalpaymentexception(str",{"_index":2212,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["criticalpaymentexception.class",{"_index":2195,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["crm",{"_index":2648,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["cross",{"_index":1361,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["crucial",{"_index":239,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["crud",{"_index":1176,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"12":{}},"component":{},"keyword":{}}],["cryptograph",{"_index":2722,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["ctx",{"_index":2682,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["ctx.getuserprincip",{"_index":2683,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["ctx.getuserprincipal().getnam",{"_index":2697,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["cumbersom",{"_index":2735,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["curat",{"_index":1355,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["curl",{"_index":1531,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["current",{"_index":415,"title":{},"name":{},"text":{"3":{},"4":{},"9":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["curv",{"_index":705,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["custom",{"_index":260,"title":{"14-13":{},"16-14":{},"17-17":{},"18-26":{},"19-7":{},"19-32":{}},"name":{},"text":{"2":{},"3":{},"4":{},"9":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["customerrepositori",{"_index":1318,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["customiz",{"_index":971,"title":{},"name":{},"text":{"4":{},"11":{},"16":{}},"component":{},"keyword":{}}],["customtrac",{"_index":2497,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["customvalu",{"_index":2500,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["cut",{"_index":1362,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["cx9obngwjq3nm52",{"_index":2618,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["cycl",{"_index":1675,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["d",{"_index":1534,"title":{},"name":{},"text":{"12":{},"14":{},"18":{}},"component":{},"keyword":{}}],["d55c486870a0dc6f6278f53d21381396d0741c6",{"_index":914,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["darchetypeartifactid=maven",{"_index":997,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["dartifactid=stor",{"_index":996,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["dashboard",{"_index":2460,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["data",{"_index":190,"title":{"12-23":{},"14-12":{},"14-15":{},"18-37":{},"18-38":{},"20-19":{}},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["databas",{"_index":729,"title":{},"name":{},"text":{"3":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["databaseurl",{"_index":1843,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["date",{"_index":200,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"13":{},"14":{}},"component":{},"keyword":{}}],["deadlock",{"_index":787,"title":{},"name":{},"text":{"3":{},"15":{}},"component":{},"keyword":{}}],["deal",{"_index":1316,"title":{},"name":{},"text":{"9":{},"11":{},"14":{}},"component":{},"keyword":{}}],["debug",{"_index":940,"title":{},"name":{},"text":{"4":{},"11":{},"14":{},"18":{}},"component":{},"keyword":{}}],["decentr",{"_index":2574,"title":{"19-18":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["decid",{"_index":865,"title":{},"name":{},"text":{"4":{},"7":{},"11":{}},"component":{},"keyword":{}}],["decis",{"_index":1083,"title":{},"name":{},"text":{"6":{},"11":{},"15":{},"16":{}},"component":{},"keyword":{}}],["declar",{"_index":1424,"title":{},"name":{},"text":{"12":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["decod",{"_index":2672,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["decor",{"_index":1356,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["decoupl",{"_index":757,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"14":{},"17":{}},"component":{},"keyword":{}}],["decrypt",{"_index":1792,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["dedic",{"_index":230,"title":{},"name":{},"text":{"2":{},"14":{},"18":{}},"component":{},"keyword":{}}],["deep",{"_index":1411,"title":{},"name":{},"text":{"12":{},"16":{},"18":{}},"component":{},"keyword":{}}],["deeper",{"_index":718,"title":{},"name":{},"text":{"3":{},"12":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["default",{"_index":887,"title":{"14-10":{},"19-30":{}},"name":{},"text":{"4":{},"7":{},"11":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["defaultvalu",{"_index":1736,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["defaultvalue=\"fals",{"_index":1722,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["defect",{"_index":2150,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["defin",{"_index":353,"title":{"12-22":{},"17-16":{}},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["definit",{"_index":692,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"13":{},"15":{},"20":{}},"component":{},"keyword":{}}],["degrad",{"_index":2186,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["delay",{"_index":2163,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["delet",{"_index":1021,"title":{"12-28":{}},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"19":{},"20":{}},"component":{},"keyword":{}}],["deleted\").build",{"_index":1564,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["deleteorder(@pathparam(\"id",{"_index":2701,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["deleteproduct",{"_index":1462,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["deleteproduct(@pathparam(\"id",{"_index":1560,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["deleteproduct(product",{"_index":1445,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["deliv",{"_index":693,"title":{},"name":{},"text":{"3":{},"16":{},"18":{}},"component":{},"keyword":{}}],["deliveri",{"_index":262,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["delv",{"_index":715,"title":{},"name":{},"text":{"3":{},"12":{},"15":{},"16":{},"17":{}},"component":{},"keyword":{}}],["demand",{"_index":491,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["demonstr",{"_index":158,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"13":{},"14":{},"17":{}},"component":{},"keyword":{}}],["denot",{"_index":1425,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["denyal",{"_index":2717,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["depart",{"_index":2634,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["depenc",{"_index":1026,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["depend",{"_index":535,"title":{"6-2":{},"6-3":{},"11-23":{},"11-24":{},"12-7":{},"12-8":{},"12-17":{},"16-6":{},"17-11":{},"18-9":{},"18-33":{},"20-4":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["dependencymanag",{"_index":1130,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["deplet",{"_index":2339,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["deploy",{"_index":344,"title":{"7-6":{},"7-8":{},"11-29":{},"11-31":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"18":{}},"component":{},"keyword":{}}],["depth",{"_index":1380,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["describ",{"_index":1543,"title":{},"name":{},"text":{"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["descript",{"_index":182,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["description\":\"appl",{"_index":1270,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["description=\"microprofil",{"_index":1229,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["deseri",{"_index":747,"title":{},"name":{},"text":{"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["design",{"_index":343,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["desir",{"_index":1710,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["despit",{"_index":779,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["destroy",{"_index":1470,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["detail",{"_index":148,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["detect",{"_index":1718,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["determin",{"_index":1759,"title":{},"name":{},"text":{"14":{},"15":{},"18":{},"20":{}},"component":{},"keyword":{}}],["dev.database.url",{"_index":1838,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["dev.java/learn",{"_index":291,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["develop",{"_index":137,"title":{"4-3":{},"4-4":{},"4-8":{},"4-9":{},"5-1":{},"7-1":{},"11-3":{},"11-4":{},"11-8":{},"11-9":{},"14-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["developer’",{"_index":1929,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["dgroupid=io.microprofile.tutori",{"_index":995,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["diagnos",{"_index":1129,"title":{"18-32":{}},"name":{},"text":{"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["diagnost",{"_index":1997,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["differ",{"_index":162,"title":{"14-3":{},"14-17":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["differenti",{"_index":1836,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["difficult",{"_index":2391,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["digit",{"_index":2589,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["diminish",{"_index":2395,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["dinteractivemode=fals",{"_index":999,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["direct",{"_index":650,"title":{},"name":{},"text":{"3":{},"13":{},"14":{}},"component":{},"keyword":{}}],["directli",{"_index":1100,"title":{},"name":{},"text":{"6":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["directori",{"_index":364,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"11":{},"14":{},"19":{}},"component":{},"keyword":{}}],["disabl",{"_index":775,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"12":{},"18":{}},"component":{},"keyword":{}}],["discount",{"_index":206,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["discov",{"_index":719,"title":{},"name":{},"text":{"3":{},"15":{}},"component":{},"keyword":{}}],["discover",{"_index":1673,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["discoveri",{"_index":589,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["discuss",{"_index":334,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["display",{"_index":1299,"title":{},"name":{},"text":{"8":{},"11":{},"18":{},"19":{}},"component":{},"keyword":{}}],["dispos",{"_index":1089,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["disrupt",{"_index":2301,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["distinct",{"_index":1686,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{},"keyword":{}}],["distribut",{"_index":66,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["dive",{"_index":822,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"12":{}},"component":{},"keyword":{}}],["divers",{"_index":1578,"title":{},"name":{},"text":{"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["divid",{"_index":563,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["do",{"_index":1168,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["doc",{"_index":1262,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["docker",{"_index":1218,"title":{},"name":{},"text":{"7":{},"11":{},"18":{}},"component":{},"keyword":{}}],["document",{"_index":20,"title":{"13-6":{},"13-8":{}},"name":{},"text":{"1":{},"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{}},"component":{},"keyword":{}}],["dom",{"_index":1386,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["domain",{"_index":437,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"9":{},"11":{},"19":{}},"component":{},"keyword":{}}],["done",{"_index":1382,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["don’t",{"_index":878,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["dot",{"_index":2591,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["doubl",{"_index":1163,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"17":{},"18":{}},"component":{},"keyword":{}}],["double.valueof(1299.99",{"_index":1202,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["double.valueof(999.99",{"_index":1198,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["down",{"_index":1932,"title":{},"name":{},"text":{"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["download",{"_index":45,"title":{"2-7":{}},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["downstream",{"_index":2274,"title":{},"name":{},"text":{"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["downtim",{"_index":1684,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["draft",{"_index":56,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["driven",{"_index":508,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"20":{}},"component":{},"keyword":{}}],["dto",{"_index":1312,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{},"keyword":{}}],["due",{"_index":475,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["duke’",{"_index":313,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["dummi",{"_index":1689,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["durat",{"_index":801,"title":{},"name":{},"text":{"3":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["dure",{"_index":613,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"12":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["dynam",{"_index":956,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["dysfunct",{"_index":1917,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["e",{"_index":113,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["e.g",{"_index":980,"title":{"19-37":{},"19-40":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"9":{},"11":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["e.getmessag",{"_index":1977,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["each",{"_index":150,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["eas",{"_index":684,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{}},"component":{},"keyword":{}}],["easi",{"_index":522,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"9":{},"11":{},"13":{},"14":{},"15":{},"19":{}},"component":{},"keyword":{}}],["easier",{"_index":507,"title":{},"name":{},"text":{"3":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["easili",{"_index":638,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["eclips",{"_index":61,"title":{"4-9":{},"11-9":{}},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"11":{},"20":{}},"component":{},"keyword":{}}],["ecomm",{"_index":981,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["ecomm</artifactid",{"_index":1039,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["ecommerc",{"_index":1151,"title":{},"name":{},"text":{"7":{},"11":{},"20":{}},"component":{},"keyword":{}}],["ecosystem",{"_index":299,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"13":{}},"component":{},"keyword":{}}],["edit",{"_index":372,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["editor",{"_index":951,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["ee",{"_index":306,"title":{"12":{},"3-11":{},"12-3":{},"12-4":{},"12-20":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"11":{},"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["ee’",{"_index":708,"title":{},"name":{},"text":{"3":{},"19":{}},"component":{},"keyword":{}}],["effect",{"_index":319,"title":{"15-22":{}},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["effici",{"_index":123,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["effort",{"_index":459,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["elast",{"_index":724,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["elasticsearch",{"_index":2449,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["element",{"_index":356,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["elimin",{"_index":528,"title":{},"name":{},"text":{"3":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["elsewher",{"_index":781,"title":{},"name":{},"text":{"3":{},"14":{},"17":{}},"component":{},"keyword":{}}],["em",{"_index":1440,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.createnamedquery(\"event.findproduct",{"_index":1453,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.createnamedquery(\"product.findallproduct",{"_index":1448,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.find(product.class",{"_index":1451,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.merge(product",{"_index":1444,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.persist(product",{"_index":1442,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["em.remove(product",{"_index":1446,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["email",{"_index":2642,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["embark",{"_index":818,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["embed",{"_index":2649,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["emerg",{"_index":1597,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["emerson",{"_index":444,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["emf",{"_index":2018,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["emf.isopen",{"_index":2019,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["emphas",{"_index":553,"title":{},"name":{},"text":{"3":{},"12":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["emphasi",{"_index":380,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["empow",{"_index":2562,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["empti",{"_index":1296,"title":{},"name":{},"text":{"8":{},"11":{},"14":{}},"component":{},"keyword":{}}],["en_u",{"_index":888,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["enabl",{"_index":276,"title":{"14-16":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["encapsul",{"_index":1343,"title":{},"name":{},"text":{"10":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["encod",{"_index":889,"title":{},"name":{},"text":{"4":{},"11":{},"19":{}},"component":{},"keyword":{}}],["encoding=\"utf",{"_index":1029,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["encount",{"_index":2218,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["encourag",{"_index":643,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["encrypt",{"_index":906,"title":{"18-38":{}},"name":{},"text":{"4":{},"11":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["end",{"_index":339,"title":{"18-13":{}},"name":{},"text":{"2":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["endpoint",{"_index":581,"title":{"19-31":{}},"name":{},"text":{"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["enforc",{"_index":1426,"title":{},"name":{},"text":{"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["engag",{"_index":329,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["engin",{"_index":138,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{}},"component":{},"keyword":{}}],["engine</artifactid",{"_index":1070,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["enhanc",{"_index":259,"title":{"17-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["enough",{"_index":1964,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["enrich",{"_index":1625,"title":{},"name":{},"text":{"13":{},"18":{}},"component":{},"keyword":{}}],["ensur",{"_index":191,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["enter",{"_index":371,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"11":{}},"component":{},"keyword":{}}],["enterpris",{"_index":414,"title":{"4-9":{},"11-9":{}},"name":{},"text":{"3":{},"4":{},"5":{},"11":{},"12":{},"18":{},"19":{}},"component":{},"keyword":{}}],["entir",{"_index":223,"title":{"6-2":{},"11-23":{}},"name":{},"text":{"2":{},"6":{},"11":{},"12":{},"13":{},"17":{},"18":{}},"component":{},"keyword":{}}],["entiti",{"_index":1013,"title":{"7-2":{},"11-25":{},"12-18":{}},"name":{},"text":{"5":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["entity(\"new",{"_index":1524,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["entity(\"no",{"_index":1733,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["entity(\"product",{"_index":1549,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["entity(\"th",{"_index":1727,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["entity(products).build",{"_index":1731,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["entitymanag",{"_index":1439,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["entitymanager.find(product.class",{"_index":1973,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["entitymanagerfactori",{"_index":2017,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["entri",{"_index":1322,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["enum",{"_index":1948,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["environ",{"_index":347,"title":{"4-3":{},"4-8":{},"11-3":{},"11-8":{},"14-3":{},"14-17":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["environment—develop",{"_index":1687,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["environment—thi",{"_index":1692,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["equip",{"_index":820,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["error",{"_index":1300,"title":{"19-36":{},"20-20":{}},"name":{},"text":{"8":{},"9":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["error=\"invalid_token",{"_index":2712,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["error=\"missing_token",{"_index":2714,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["error_description=\"token",{"_index":2713,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["especi",{"_index":542,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["essenc",{"_index":2049,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["essenti",{"_index":219,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["establish",{"_index":1351,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["etc",{"_index":2794,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["etcd",{"_index":1847,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["evalu",{"_index":2238,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["even",{"_index":1295,"title":{},"name":{},"text":{"8":{},"11":{},"14":{},"17":{}},"component":{},"keyword":{}}],["event",{"_index":627,"title":{"14-18":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["eventu",{"_index":557,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["everyth",{"_index":1341,"title":{},"name":{},"text":{"10":{},"11":{},"12":{}},"component":{},"keyword":{}}],["evolut",{"_index":303,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["evolv",{"_index":462,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["ex.getmessag",{"_index":2289,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["exactli",{"_index":621,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["examin",{"_index":770,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["exampl",{"_index":278,"title":{"15-11":{},"20-23":{}},"name":{},"text":{"2":{},"4":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["exce",{"_index":2168,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["exceed",{"_index":2180,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["except",{"_index":76,"title":{"17-17":{}},"name":{},"text":{"2":{},"9":{},"11":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["exception(",{"_index":2220,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["exception(\"an",{"_index":2822,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["exceptionally(ex",{"_index":2287,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["excess",{"_index":2224,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["exchang",{"_index":738,"title":{"19-12":{}},"name":{},"text":{"3":{},"19":{},"20":{}},"component":{},"keyword":{}}],["exclud",{"_index":1402,"title":{},"name":{},"text":{"12":{},"17":{}},"component":{},"keyword":{}}],["execut",{"_index":237,"title":{"17-4":{},"17-33":{}},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["executepayment(orderid",{"_index":2420,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["executepayment(str",{"_index":2423,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["executor",{"_index":612,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["exemplifi",{"_index":1430,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["exhaust",{"_index":2228,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["exist",{"_index":501,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["exp",{"_index":2581,"title":{"19-38":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["expect",{"_index":268,"title":{},"name":{},"text":{"2":{},"8":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["experi",{"_index":221,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["experiment",{"_index":604,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["expert",{"_index":1590,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["expertis",{"_index":464,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["expir",{"_index":2580,"title":{"19-38":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["expirationd",{"_index":1802,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["expiri",{"_index":2577,"title":{"19-34":{},"19-35":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["explain",{"_index":1567,"title":{},"name":{},"text":{"12":{},"17":{},"19":{}},"component":{},"keyword":{}}],["explan",{"_index":1001,"title":{"20-24":{}},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"20":{}},"component":{},"keyword":{}}],["explicit",{"_index":2493,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["explicitli",{"_index":662,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["exploit",{"_index":2559,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["explor",{"_index":707,"title":{"13-9":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["exploratori",{"_index":1136,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["export",{"_index":593,"title":{"18-19":{}},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["expos",{"_index":582,"title":{"15-10":{},"15-13":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["exposur",{"_index":2377,"title":{"18-41":{}},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["express",{"_index":93,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["extend",{"_index":435,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"14":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["extens",{"_index":867,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"14":{},"16":{}},"component":{},"keyword":{}}],["extern",{"_index":232,"title":{"17-19":{},"17-26":{},"17-31":{},"17-41":{},"17-50":{}},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["externaldocument",{"_index":1666,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["extract",{"_index":2575,"title":{"19-26":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["eyjhbgcioijsu0exxzuilcjlbmmioijbmti4q0jdluhtmju2in0",{"_index":2609,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["eyjhbgcioijsuzi1nii",{"_index":2671,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["face",{"_index":1114,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["facil",{"_index":1338,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["facilit",{"_index":307,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"11":{},"12":{},"13":{},"15":{},"19":{},"20":{}},"component":{},"keyword":{}}],["factor",{"_index":2567,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["fail",{"_index":776,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["failon",{"_index":2241,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["failov",{"_index":1900,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["failsaf",{"_index":1256,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["failur",{"_index":481,"title":{"17-17":{},"17-21":{},"17-22":{},"17-23":{},"18-32":{},"19-38":{}},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["failure_threshold",{"_index":2282,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["failureratio",{"_index":2184,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["failurethreshold",{"_index":2039,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["fallback",{"_index":575,"title":{"17-8":{},"17-37":{},"17-38":{},"17-39":{},"17-40":{},"17-42":{}},"name":{},"text":{"3":{},"6":{},"11":{},"14":{},"17":{}},"component":{},"keyword":{}}],["fallback(fallbackhandlerimpl.class",{"_index":2312,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallback(fallbackmethod",{"_index":2303,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallbackhandler<str",{"_index":2314,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallbackhandler<t",{"_index":2309,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallbackhandlerimpl",{"_index":2313,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallbackprocesspay",{"_index":2304,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fallbackprocesspayment(paymentdetail",{"_index":2306,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["fals",{"_index":1737,"title":{},"name":{},"text":{"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["famili",{"_index":899,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["familiar",{"_index":409,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{}},"component":{},"keyword":{}}],["fast",{"_index":957,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"18":{}},"component":{},"keyword":{}}],["fault",{"_index":120,"title":{"17":{},"17-2":{},"17-3":{},"17-10":{},"17-11":{},"17-12":{},"17-33":{},"17-40":{},"17-43":{},"17-44":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"11":{},"12":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["faulttoleranceexcept",{"_index":2181,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["feasibl",{"_index":2508,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["featur",{"_index":109,"title":{"12-6":{},"12-8":{},"12-10":{},"12-12":{},"12-14":{},"12-16":{},"20-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["feature>jsonb",{"_index":1233,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["feature>mpconfig",{"_index":1835,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["feature>restfulw",{"_index":1231,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["featuremanag",{"_index":1230,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["feder",{"_index":2570,"title":{"19-13":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["fetch",{"_index":186,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"11":{},"12":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["fetchdata",{"_index":2267,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["few",{"_index":2171,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["field",{"_index":1167,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["figur",{"_index":269,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["fik51vwhsxj",{"_index":2624,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["file",{"_index":8,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["file(",{"_index":65,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["filenam",{"_index":393,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["filesystem",{"_index":1865,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["fill",{"_index":495,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["filter",{"_index":1605,"title":{},"name":{},"text":{"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["final",{"_index":411,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["finalname>${project.artifactid}</finalnam",{"_index":1247,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["financi",{"_index":240,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["find",{"_index":1428,"title":{},"name":{},"text":{"12":{},"18":{}},"component":{},"keyword":{}}],["findallproduct",{"_index":1447,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["findproduct(str",{"_index":1452,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["findproductbyid",{"_index":1463,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["findproductbyid(long",{"_index":1450,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["fine",{"_index":2488,"title":{"19-17":{}},"name":{},"text":{"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["finish",{"_index":2158,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["firewal",{"_index":2553,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["first",{"_index":145,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["fit",{"_index":862,"title":{},"name":{},"text":{"4":{},"6":{},"11":{}},"component":{},"keyword":{}}],["fix",{"_index":1302,"title":{},"name":{},"text":{"8":{},"11":{},"18":{}},"component":{},"keyword":{}}],["flag",{"_index":1681,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["flexibl",{"_index":275,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["flow",{"_index":799,"title":{"19-22":{}},"name":{},"text":{"3":{},"18":{},"19":{}},"component":{},"keyword":{}}],["fluctuat",{"_index":2090,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["fluent",{"_index":1953,"title":{},"name":{},"text":{"15":{},"20":{}},"component":{},"keyword":{}}],["focu",{"_index":519,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["focus",{"_index":494,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"18":{}},"component":{},"keyword":{}}],["folder",{"_index":1009,"title":{},"name":{},"text":{"5":{},"11":{},"16":{}},"component":{},"keyword":{}}],["follow",{"_index":147,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["followredirect",{"_index":2766,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["footprint",{"_index":603,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{}},"component":{},"keyword":{}}],["forbidden",{"_index":2707,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["forefront",{"_index":709,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["forest",{"_index":314,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["form",{"_index":273,"title":{},"name":{},"text":{"2":{},"12":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["format",{"_index":583,"title":{"20-19":{}},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["formerli",{"_index":727,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["formparam",{"_index":2789,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["forum",{"_index":333,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["forward",{"_index":717,"title":{},"name":{},"text":{"3":{},"12":{},"19":{}},"component":{},"keyword":{}}],["foster",{"_index":1671,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["found",{"_index":533,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"20":{}},"component":{},"keyword":{}}],["found\").build",{"_index":1552,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["foundat",{"_index":62,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"11":{},"12":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["four",{"_index":2070,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["fragment",{"_index":2390,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["framework",{"_index":434,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["framework/librari",{"_index":1867,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["free",{"_index":1990,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["freememori",{"_index":1988,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["frequenc",{"_index":2083,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{},"keyword":{}}],["frequent",{"_index":1088,"title":{},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{},"keyword":{}}],["friendli",{"_index":1653,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["fuel",{"_index":1595,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["fujitsu",{"_index":452,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["fulfil",{"_index":1925,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["full",{"_index":677,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"10":{},"11":{},"12":{},"17":{}},"component":{},"keyword":{}}],["fulli",{"_index":1310,"title":{},"name":{},"text":{"8":{},"11":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["function",{"_index":526,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["functionalinterfac",{"_index":1942,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["fundament",{"_index":410,"title":{},"name":{},"text":{"3":{},"12":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["further",{"_index":825,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"11":{},"12":{},"19":{}},"component":{},"keyword":{}}],["furthermor",{"_index":1580,"title":{},"name":{},"text":{"13":{},"16":{}},"component":{},"keyword":{}}],["futur",{"_index":1740,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["gain",{"_index":300,"title":{},"name":{},"text":{"2":{},"12":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["gap",{"_index":496,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["garbag",{"_index":2097,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["gateway",{"_index":233,"title":{},"name":{},"text":{"2":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["gaug",{"_index":2072,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["gauge(nam",{"_index":2132,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["gcp",{"_index":1274,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["gdpr",{"_index":2549,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["gener",{"_index":294,"title":{"7-7":{},"11-30":{},"13-6":{},"13-8":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["generatedvalu",{"_index":1422,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["german",{"_index":448,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["get",{"_index":287,"title":{"4":{},"11":{}},"name":{},"text":{"2":{},"4":{},"7":{},"11":{},"14":{},"18":{}},"component":{},"keyword":{}}],["getamount",{"_index":2204,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["getdata",{"_index":1950,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["getnam",{"_index":1755,"title":{},"name":{},"text":{"14":{},"15":{}},"component":{},"keyword":{}}],["getorder(@pathparam(\"id",{"_index":2696,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["getorders(@headerparam(\"author",{"_index":2784,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["getordin",{"_index":1757,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["getproduct",{"_index":1178,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{}},"component":{},"keyword":{}}],["getproduct(@pathparam(\"id",{"_index":2116,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["getproduct(long",{"_index":2245,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["getproductbyid",{"_index":2760,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["getproductbyid(@pathparam(\"id",{"_index":2756,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["getproductcount",{"_index":2135,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["getproductsbycategory(@queryparam(\"categori",{"_index":2776,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["getproductsfromcach",{"_index":2320,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["getproperti",{"_index":1763,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["getproperty(str",{"_index":1831,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["getpropertynam",{"_index":1767,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["getstatu",{"_index":1949,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["getter",{"_index":1072,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"15":{},"17":{}},"component":{},"keyword":{}}],["gettimeout",{"_index":2331,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["getuser(id",{"_index":2737,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["getuserprofile(@context",{"_index":2681,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["getvalue(str",{"_index":1764,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["github",{"_index":1308,"title":{},"name":{},"text":{"8":{},"11":{},"20":{}},"component":{},"keyword":{}}],["give",{"_index":1085,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["given",{"_index":1766,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["glitch",{"_index":2162,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["global",{"_index":1668,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["glossari",{"_index":403,"title":{"3-13":{},"10-1":{},"11-37":{}},"name":{},"text":{},"component":{},"keyword":{}}],["go",{"_index":726,"title":{},"name":{},"text":{"3":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["goal",{"_index":418,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"18":{}},"component":{},"keyword":{}}],["good",{"_index":289,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["googl",{"_index":1591,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["govern",{"_index":97,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["grace",{"_index":1874,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["gracefulli",{"_index":1875,"title":{},"name":{},"text":{"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["grade",{"_index":637,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["gradl",{"_index":807,"title":{"4-5":{},"4-7":{},"11-5":{},"11-7":{},"20-6":{}},"name":{},"text":{"4":{},"6":{},"7":{},"11":{},"14":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["gradlew",{"_index":877,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["gradle’",{"_index":930,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["grafana",{"_index":2371,"title":{"18-18":{}},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["grain",{"_index":2489,"title":{"19-17":{}},"name":{},"text":{"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["grant",{"_index":2637,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["graph",{"_index":2454,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["graphana",{"_index":2510,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["graphic",{"_index":355,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["graphql",{"_index":616,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["great",{"_index":874,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["greater",{"_index":2490,"title":{},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["groovi",{"_index":917,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["groundwork",{"_index":1393,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["group",{"_index":440,"title":{"19-30":{}},"name":{},"text":{"3":{},"5":{},"11":{},"16":{},"19":{}},"component":{},"keyword":{}}],["groupid",{"_index":974,"title":{},"name":{},"text":{"4":{},"5":{},"11":{}},"component":{},"keyword":{}}],["groupid>io.microprofile.tutorial</groupid",{"_index":1037,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["groupid>io.openliberty.tools</groupid",{"_index":1252,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["groupid>io.opentelemetry</groupid",{"_index":1131,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["groupid>jakarta.platform</groupid",{"_index":1055,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["groupid>org.apache.maven.plugins</groupid",{"_index":1248,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.config</groupid",{"_index":1106,"title":{},"name":{},"text":{"6":{},"11":{},"14":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.fault",{"_index":1116,"title":{},"name":{},"text":{"6":{},"11":{},"17":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.health</groupid",{"_index":1110,"title":{},"name":{},"text":{"6":{},"11":{},"15":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.jwt</groupid",{"_index":1120,"title":{},"name":{},"text":{"6":{},"11":{},"19":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.metrics</groupid",{"_index":1112,"title":{},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.openapi</groupid",{"_index":1123,"title":{},"name":{},"text":{"6":{},"11":{},"13":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.rest.client</groupid",{"_index":1126,"title":{},"name":{},"text":{"6":{},"11":{},"20":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile.telemetry</groupid",{"_index":2408,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["groupid>org.eclipse.microprofile</groupid",{"_index":1060,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["groupid>org.junit.jupiter</groupid",{"_index":1066,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["groupid>org.projectlombok</groupid",{"_index":1051,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["grow",{"_index":2539,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["guarante",{"_index":2326,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["guid",{"_index":390,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{}},"component":{},"keyword":{}}],["guidanc",{"_index":1396,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["guidelin",{"_index":2052,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["h",{"_index":1533,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["hal",{"_index":1518,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["half",{"_index":2169,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["hand",{"_index":131,"title":{},"name":{},"text":{"2":{},"14":{},"20":{}},"component":{},"keyword":{}}],["handl",{"_index":201,"title":{"12-21":{},"14-18":{},"17-17":{},"19-36":{},"20-18":{},"20-19":{},"20-20":{}},"name":{},"text":{"2":{},"3":{},"9":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["handle(executioncontext",{"_index":2315,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["handler",{"_index":2142,"title":{"17-39":{}},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["handles(int",{"_index":2807,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["happi",{"_index":2856,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["har",{"_index":700,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["hardcod",{"_index":1775,"title":{},"name":{},"text":{"14":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["harder",{"_index":2386,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["hashicorp",{"_index":1881,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["hashmap",{"_index":1774,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["hat",{"_index":454,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["have",{"_index":1520,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["hdjueokiwrtkhthpqeansbnyhzgmnov7sln1eu9g3j8",{"_index":2623,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["head",{"_index":2796,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["header",{"_index":1659,"title":{"20-15":{}},"name":{},"text":{"13":{},"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["header>.<payload>.<signatur",{"_index":2592,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["headerparam",{"_index":2730,"title":{"20-15":{},"20-16":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["health",{"_index":308,"title":{"15":{},"15-3":{},"15-5":{},"15-6":{},"15-10":{},"15-12":{},"15-13":{},"15-17":{},"15-18":{},"15-20":{},"15-22":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"11":{},"12":{},"15":{},"16":{},"17":{}},"component":{},"keyword":{}}],["health/blob/main/api/src/main/java/org/eclipse/microprofile/health/healthcheck.java",{"_index":1943,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/blob/main/api/src/main/java/org/eclipse/microprofile/health/healthcheckresponse.java",{"_index":1952,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/blob/main/api/src/main/java/org/eclipse/microprofile/health/healthcheckresponsebuilder.java",{"_index":1961,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/liv",{"_index":1907,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/readi",{"_index":1908,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/start",{"_index":1909,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["health/startup",{"_index":2041,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheck",{"_index":1895,"title":{"15-14":{}},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckrespons",{"_index":1896,"title":{"15-15":{}},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckresponse.down(\"productservicestartupcheck",{"_index":2021,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckresponse.named(\"productservicereadinesscheck",{"_index":1972,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckresponse.named(\"systemresourcesl",{"_index":1999,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckresponse.up(\"productservicestartupcheck",{"_index":2020,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthcheckresponsebuild",{"_index":1897,"title":{"15-16":{}},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["healthi",{"_index":1936,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["heart",{"_index":1023,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["heavyweight",{"_index":488,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["helidon",{"_index":635,"title":{"4-18":{},"11-18":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{}},"component":{},"keyword":{}}],["help",{"_index":666,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["helper",{"_index":1328,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["henc",{"_index":990,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["herd",{"_index":2216,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["here",{"_index":855,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"13":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["here’",{"_index":863,"title":{},"name":{},"text":{"4":{},"11":{},"14":{},"15":{},"17":{},"19":{}},"component":{},"keyword":{}}],["hierarch",{"_index":1829,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["hierarchi",{"_index":2407,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["high",{"_index":655,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["higher",{"_index":1761,"title":{},"name":{},"text":{"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["highli",{"_index":870,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["highlight",{"_index":164,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"11":{},"16":{},"18":{}},"component":{},"keyword":{}}],["hipaa",{"_index":2551,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["histogram",{"_index":2073,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["hit",{"_index":1922,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["holist",{"_index":2400,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["home",{"_index":884,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["horizont",{"_index":2650,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["host",{"_index":795,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"13":{},"14":{}},"component":{},"keyword":{}}],["hot",{"_index":939,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["hr",{"_index":2646,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["html",{"_index":1208,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["http",{"_index":28,"title":{"12-21":{}},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["http(",{"_index":598,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["http.port>${liberty.var.default.http.port}</http.port",{"_index":1259,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["http.server",{"_index":34,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["http.status_code=500",{"_index":2514,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["http/1.1",{"_index":2670,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["http://localhost:5050/mp",{"_index":1558,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["http://localhost:8080",{"_index":39,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["http://localhost:8080/api/product",{"_index":2765,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["http://localhost:9080",{"_index":1265,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["http://localhost:9080/catalog",{"_index":1640,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["http://localhost:9080/mp",{"_index":1266,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["http://localhost:9080/openapi",{"_index":1636,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["http://localhost:9080/openapi/ui",{"_index":1652,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["http://localhost:<port>/<contextroot>/api/product",{"_index":1221,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["http://localhost:<port>/openapi",{"_index":1632,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["http://maven.apache.org/xsd/maven",{"_index":1031,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["http://www.apache.org/licenses/licens",{"_index":80,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["httpendpoint",{"_index":1235,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["httpget",{"_index":2035,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["httpport=\"${default.http.port",{"_index":1236,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["https://<hostname>:16686",{"_index":2481,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["https://api.paymentgateway.com",{"_index":1779,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["https://docs.gradle.org/8.6/releas",{"_index":908,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["https://example.com/issu",{"_index":2690,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["https://github.com/eclipse/microprofil",{"_index":1309,"title":{},"name":{},"text":{"8":{},"11":{},"15":{}},"component":{},"keyword":{}}],["https://io.microprofile.com/issu",{"_index":2600,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["https://localhost:<port>/metrics?scope=appl",{"_index":2120,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["https://microprofile.io",{"_index":1307,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["httpsport=\"${default.https.port",{"_index":1237,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["human",{"_index":1494,"title":{},"name":{},"text":{"12":{},"13":{},"15":{},"17":{}},"component":{},"keyword":{}}],["hypertext",{"_index":1517,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["iat",{"_index":2604,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["ibm",{"_index":451,"title":{},"name":{},"text":{"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["id",{"_index":933,"title":{"5-2":{},"11-21":{}},"name":{},"text":{"4":{},"5":{},"7":{},"10":{},"11":{},"12":{},"13":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["id).build",{"_index":2699,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["id=\"defaulthttpendpoint",{"_index":1238,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["idea",{"_index":810,"title":{"4-10":{},"11-10":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["ideal",{"_index":983,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"18":{},"20":{}},"component":{},"keyword":{}}],["ident",{"_index":1119,"title":{"19-11":{}},"name":{},"text":{"6":{},"11":{},"14":{},"19":{}},"component":{},"keyword":{}}],["identif",{"_index":2453,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["identifi",{"_index":975,"title":{"18-31":{}},"name":{},"text":{"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["ijug",{"_index":449,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["illumin",{"_index":2139,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["illustr",{"_index":1607,"title":{},"name":{},"text":{"13":{},"15":{},"16":{}},"component":{},"keyword":{}}],["imag",{"_index":1219,"title":{},"name":{},"text":{"7":{},"11":{},"15":{}},"component":{},"keyword":{}}],["immedi",{"_index":1086,"title":{},"name":{},"text":{"6":{},"11":{},"15":{},"17":{}},"component":{},"keyword":{}}],["impact",{"_index":1876,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["implement",{"_index":170,"title":{"3-8":{},"12-23":{},"14-8":{},"15-13":{},"15-17":{},"15-18":{},"17-14":{},"17-30":{},"17-37":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["impli",{"_index":94,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["implic",{"_index":2525,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["import",{"_index":932,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["improv",{"_index":472,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["in_progress",{"_index":2419,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["inbound",{"_index":1918,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["incid",{"_index":2555,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["includ",{"_index":160,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["inclus",{"_index":2565,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["incom",{"_index":1920,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["inconsist",{"_index":2389,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["incorpor",{"_index":547,"title":{},"name":{},"text":{"3":{},"12":{},"16":{}},"component":{},"keyword":{}}],["increas",{"_index":523,"title":{},"name":{},"text":{"3":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["increment",{"_index":873,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["indefinit",{"_index":2160,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["independ",{"_index":484,"title":{},"name":{},"text":{"3":{},"12":{},"19":{}},"component":{},"keyword":{}}],["index",{"_index":52,"title":{},"name":{"2":{},"18":{}},"text":{"18":{}},"component":{},"keyword":{}}],["indic",{"_index":351,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["individu",{"_index":426,"title":{"6-3":{},"11-24":{}},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"15":{},"17":{},"19":{}},"component":{},"keyword":{}}],["industri",{"_index":423,"title":{},"name":{},"text":{"3":{},"13":{},"19":{}},"component":{},"keyword":{}}],["ineffici",{"_index":2456,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["inevit",{"_index":2155,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["inf",{"_index":1702,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["inf/microprofil",{"_index":1629,"title":{},"name":{},"text":{"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["inf/publickey.pem",{"_index":2662,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["inf/services/org.eclipse.microprofile.config.spi.configsourc",{"_index":1793,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["infinit",{"_index":1914,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["influenc",{"_index":1357,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["info",{"_index":1638,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["inform",{"_index":69,"title":{"19-12":{}},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["infrastructur",{"_index":772,"title":{"18-43":{}},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["ingest",{"_index":2444,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["inher",{"_index":664,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["init",{"_index":907,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["initi",{"_index":211,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"13":{},"14":{},"15":{},"19":{},"20":{}},"component":{},"keyword":{}}],["initialdelaysecond",{"_index":2036,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["inject",{"_index":536,"title":{"12-7":{},"12-8":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["innov",{"_index":509,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["input",{"_index":1007,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["insert",{"_index":2770,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["insid",{"_index":1658,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{},"keyword":{}}],["insight",{"_index":1406,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["inspect",{"_index":2397,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["instal",{"_index":808,"title":{"4-6":{},"11-6":{}},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["instanc",{"_index":1035,"title":{},"name":{},"text":{"5":{},"7":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["instantan",{"_index":2078,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["instanti",{"_index":1174,"title":{},"name":{},"text":{"7":{},"11":{},"20":{}},"component":{},"keyword":{}}],["instead",{"_index":1715,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["instruct",{"_index":236,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"11":{},"18":{}},"component":{},"keyword":{}}],["instrument",{"_index":2055,"title":{"16-11":{},"18-8":{},"18-23":{},"18-24":{},"18-28":{}},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["insuffici",{"_index":2582,"title":{"19-40":{}},"name":{},"text":{},"component":{},"keyword":{}}],["int",{"_index":1756,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["int64",{"_index":1647,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["integ",{"_index":1648,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["integr",{"_index":22,"title":{"4-8":{},"11-8":{},"15-19":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["intellig",{"_index":936,"title":{},"name":{},"text":{"4":{},"11":{},"18":{}},"component":{},"keyword":{}}],["intellij",{"_index":809,"title":{"4-10":{},"11-10":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["intend",{"_index":2047,"title":{},"name":{},"text":{"15":{},"19":{}},"component":{},"keyword":{}}],["intent",{"_index":1363,"title":{},"name":{},"text":{"12":{},"16":{}},"component":{},"keyword":{}}],["interact",{"_index":231,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"9":{},"11":{},"12":{},"13":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["intercept",{"_index":1360,"title":{},"name":{},"text":{"12":{},"19":{}},"component":{},"keyword":{}}],["interceptor",{"_index":1345,"title":{"12-9":{},"12-10":{}},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["interest",{"_index":1405,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["interfac",{"_index":209,"title":{"15-14":{},"20-7":{},"20-21":{}},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["intermediari",{"_index":2442,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["intermitt",{"_index":2187,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["intern",{"_index":768,"title":{},"name":{},"text":{"3":{},"16":{}},"component":{},"keyword":{}}],["internet",{"_index":1340,"title":{},"name":{},"text":{"10":{},"11":{},"18":{}},"component":{},"keyword":{}}],["interoper",{"_index":515,"title":{"19-16":{}},"name":{},"text":{"3":{},"10":{},"11":{},"13":{},"19":{}},"component":{},"keyword":{}}],["interpret",{"_index":1910,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["interpreter/load",{"_index":1334,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["interruptedexcept",{"_index":2264,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["interv",{"_index":1873,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{},"keyword":{}}],["intervent",{"_index":1858,"title":{},"name":{},"text":{"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["intric",{"_index":2521,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["intricaci",{"_index":318,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{},"16":{}},"component":{},"keyword":{}}],["introduc",{"_index":473,"title":{},"name":{},"text":{"3":{},"13":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["introduct",{"_index":394,"title":{"3":{},"3-1":{},"4-1":{},"11-1":{},"12-1":{},"13-1":{},"13-4":{},"15-1":{},"16-1":{},"16-3":{},"18-2":{},"19-2":{},"20-2":{}},"name":{},"text":{"13":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["introductori",{"_index":405,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["intrus",{"_index":2509,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["intuit",{"_index":1384,"title":{},"name":{},"text":{"12":{},"13":{}},"component":{},"keyword":{}}],["invalid",{"_index":1894,"title":{"19-37":{}},"name":{},"text":{"14":{},"19":{}},"component":{},"keyword":{}}],["invalu",{"_index":1373,"title":{},"name":{},"text":{"12":{},"16":{}},"component":{},"keyword":{}}],["invas",{"_index":1372,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["inventori",{"_index":184,"title":{"20-23":{}},"name":{},"text":{"2":{},"9":{},"11":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["inventoryservic",{"_index":1320,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{},"keyword":{}}],["investig",{"_index":2560,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["invoc",{"_index":1125,"title":{"16-13":{}},"name":{},"text":{"6":{},"11":{},"12":{},"15":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["invok",{"_index":596,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["involv",{"_index":723,"title":{},"name":{},"text":{"3":{},"10":{},"11":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["io",{"_index":1012,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["io.microprofil",{"_index":978,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["io.microprofile.tutori",{"_index":1000,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.inventory.cli",{"_index":2750,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.inventory.dto.product",{"_index":2753,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.inventory.dto.productnotfoundexcept",{"_index":2818,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.stor",{"_index":1329,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.inventory.client.productservicecli",{"_index":2826,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.inventory.servic",{"_index":2825,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.config",{"_index":1769,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.ent",{"_index":1796,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.entity.paymentdetail",{"_index":2276,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.except",{"_index":2208,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.exception.paymentprocessingexcept",{"_index":2277,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.servic",{"_index":2188,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.paymentservice/processpayment/retry/delay=2000",{"_index":2222,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.paymentservice/processpayment/retry/jitter=500",{"_index":2223,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.paymentservice/processpayment/retry/maxretries=3",{"_index":2221,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.productservice/fetchdata/timeout/value=1500",{"_index":2268,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.productservice/fetchproductdetails/circuitbreaker/delay=5000",{"_index":2250,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.productservice/fetchproductdetails/circuitbreaker/failureratio=0.5",{"_index":2249,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.productservice/fetchproductdetails/circuitbreaker/requestvolumethreshold=10",{"_index":2248,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.payment.service.productservice/fetchproductdetails/circuitbreaker/successthreshold=2",{"_index":2251,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product",{"_index":1211,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.cache.productcach",{"_index":2316,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.ent",{"_index":1155,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.entity.product",{"_index":1183,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.health",{"_index":1966,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.repositori",{"_index":1433,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.repository.productrepositori",{"_index":1473,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.resourc",{"_index":1180,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["io.microprofile.tutorial.store.product.service.productservice.timeout=3000",{"_index":2332,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["io.opentelemetry.api.trace.span",{"_index":2412,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["io.opentelemetry.api.trace.trac",{"_index":2411,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["io.opentelemetry.instrumentation.annotations.withspan",{"_index":2492,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["iphon",{"_index":1195,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["ipkxlg",{"_index":2613,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["is`nul",{"_index":1746,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["isdatabaseconnectionhealthi",{"_index":1971,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["isol",{"_index":687,"title":{"17-44":{},"17-45":{},"17-46":{},"17-51":{},"18-43":{}},"name":{},"text":{"3":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["isproductavail",{"_index":2843,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["isproductavailable(long",{"_index":2830,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["iss",{"_index":2599,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["issu",{"_index":780,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["issuanc",{"_index":2709,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["issuer",{"_index":2627,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["istio",{"_index":653,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["ital",{"_index":377,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["item",{"_index":203,"title":{},"name":{},"text":{"2":{},"12":{},"13":{},"16":{}},"component":{},"keyword":{}}],["itself",{"_index":1392,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["it’",{"_index":645,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"8":{},"11":{},"14":{},"15":{},"16":{}},"component":{},"keyword":{}}],["jackson",{"_index":1169,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["jaeger",{"_index":2369,"title":{"18-16":{},"18-21":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["jaegertracing/al",{"_index":2479,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["jaeger’",{"_index":2448,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["jakarta",{"_index":305,"title":{"12":{},"3-11":{},"12-3":{},"12-4":{},"12-5":{},"12-7":{},"12-9":{},"12-10":{},"12-11":{},"12-12":{},"12-13":{},"12-14":{},"12-15":{},"12-16":{},"12-20":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"11":{},"12":{},"13":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ejb.startup",{"_index":2012,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["jakarta.enterprise.context.applicationscop",{"_index":1184,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["jakarta.enterprise.context.requestscop",{"_index":1434,"title":{},"name":{},"text":{"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["jakarta.inject.inject",{"_index":1474,"title":{},"name":{},"text":{"12":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["jakarta.persistence.ent",{"_index":1413,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jakarta.persistence.entitymanag",{"_index":1435,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["jakarta.persistence.entitymanagerfactori",{"_index":2013,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["jakarta.persistence.generatedvalu",{"_index":1415,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jakarta.persistence.id",{"_index":1414,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jakarta.persistence.persistencecontext",{"_index":1436,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["jakarta.persistence.persistenceunit",{"_index":2014,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["jakarta.transaction.transact",{"_index":1719,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["jakarta.validation.constraints.notnul",{"_index":1416,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jakarta.ws.r",{"_index":1475,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.applicationpath",{"_index":1212,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.consum",{"_index":1811,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.core.appl",{"_index":1213,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.core.mediatyp",{"_index":1188,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"17":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.core.respons",{"_index":1714,"title":{},"name":{},"text":{"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.get",{"_index":1185,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"18":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.headerparam",{"_index":2781,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.path",{"_index":1186,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.pathparam",{"_index":2751,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.post",{"_index":1810,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.produc",{"_index":1187,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"20":{}},"component":{},"keyword":{}}],["jakarta.ws.rs.queryparam",{"_index":2775,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["januari",{"_index":923,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["jar",{"_index":966,"title":{},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["java",{"_index":101,"title":{"4-4":{},"4-9":{},"5-1":{},"11-4":{},"11-9":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["java.math.bigdecim",{"_index":1797,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["java.net.uri",{"_index":2828,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["java.util.arraylist",{"_index":1181,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["java.util.concurrent.completablefutur",{"_index":2256,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["java.util.concurrent.completionstag",{"_index":2257,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["java.util.concurrent.timeunit",{"_index":2829,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["java.util.hashmap",{"_index":1770,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["java.util.list",{"_index":1182,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"13":{},"14":{}},"component":{},"keyword":{}}],["java.util.logging.logg",{"_index":2278,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["java.util.map",{"_index":1771,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["java.util.set",{"_index":1772,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["javac",{"_index":1335,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["javadoc",{"_index":1337,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["javafx",{"_index":947,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["jax",{"_index":750,"title":{},"name":{},"text":{"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["jdk",{"_index":805,"title":{"4-4":{},"11-4":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["jetbrain",{"_index":943,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["jitter",{"_index":2164,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["job",{"_index":2850,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["journey",{"_index":819,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["jpa",{"_index":320,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{}},"component":{},"keyword":{}}],["jre",{"_index":1333,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["json",{"_index":321,"title":{"12-11":{},"12-12":{},"12-13":{},"12-14":{},"15-11":{},"19-3":{},"19-8":{},"20-19":{}},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"19":{},"20":{}},"component":{},"keyword":{}}],["jsongener",{"_index":1389,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jsonpars",{"_index":1388,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jsonwebtoken",{"_index":2678,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["json’",{"_index":1394,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["jti",{"_index":2632,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["june",{"_index":421,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["junit",{"_index":1064,"title":{},"name":{},"text":{"5":{},"10":{},"11":{}},"component":{},"keyword":{}}],["jupit",{"_index":1065,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["jvm",{"_index":830,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"14":{},"15":{},"16":{}},"component":{},"keyword":{}}],["jwt",{"_index":119,"title":{"19":{},"19-2":{},"19-3":{},"19-4":{},"19-5":{},"19-14":{},"19-19":{},"19-20":{},"19-22":{},"19-23":{},"19-28":{},"19-37":{},"19-41":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"19":{},"20":{}},"component":{},"keyword":{}}],["jwt.getclaim(\"tenant_id",{"_index":2687,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["jwt.getgroup",{"_index":2686,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["jwt.getnam",{"_index":2685,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["jwt.io",{"_index":2588,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["jwt’",{"_index":2651,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["kafka",{"_index":2451,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["keep",{"_index":1140,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["key",{"_index":172,"title":{"12-4":{},"12-6":{},"12-8":{},"12-10":{},"12-12":{},"12-14":{},"12-16":{},"14-7":{},"15-4":{},"17-3":{},"19-21":{},"20-3":{},"20-26":{}},"name":{},"text":{"2":{},"3":{},"4":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["key/valu",{"_index":1707,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["kickstart",{"_index":970,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["kill",{"_index":2023,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["kind",{"_index":92,"title":{},"name":{},"text":{"2":{},"15":{}},"component":{},"keyword":{}}],["kit",{"_index":804,"title":{"4-4":{},"11-4":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["km",{"_index":2724,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["knowledg",{"_index":132,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"12":{},"16":{},"20":{}},"component":{},"keyword":{}}],["known",{"_index":743,"title":{},"name":{},"text":{"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["kotlin",{"_index":915,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["kubernet",{"_index":652,"title":{"15-21":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"15":{},"19":{}},"component":{},"keyword":{}}],["lack",{"_index":2231,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["laid",{"_index":1569,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["landscap",{"_index":541,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["languag",{"_index":96,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["larg",{"_index":1383,"title":{},"name":{},"text":{"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["larger",{"_index":1381,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["latenc",{"_index":1115,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["later",{"_index":706,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"14":{}},"component":{},"keyword":{}}],["latest",{"_index":337,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"12":{}},"component":{},"keyword":{}}],["launch",{"_index":1651,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["launcher",{"_index":632,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["law",{"_index":84,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["lay",{"_index":710,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["layer",{"_index":617,"title":{},"name":{},"text":{"3":{},"9":{},"11":{},"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["ldap",{"_index":2645,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["lead",{"_index":1138,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["leader",{"_index":424,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["leak",{"_index":1850,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["lean",{"_index":1080,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["learn",{"_index":48,"title":{"2-9":{}},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["learnt",{"_index":1734,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["led",{"_index":490,"title":{},"name":{},"text":{"3":{},"13":{}},"component":{},"keyword":{}}],["left",{"_index":505,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["legaci",{"_index":2507,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["legal",{"_index":41,"title":{"2-1":{}},"name":{},"text":{},"component":{},"keyword":{}}],["less",{"_index":1366,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["let",{"_index":1716,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["let’",{"_index":826,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"12":{},"14":{},"15":{}},"component":{},"keyword":{}}],["level",{"_index":185,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["leverag",{"_index":463,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["li",{"_index":2050,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["liberti",{"_index":631,"title":{"4-14":{},"11-14":{},"14-16":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"13":{},"14":{},"15":{}},"component":{},"keyword":{}}],["liberty.var.app.context.root>mp",{"_index":1245,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["liberty.var.default.http.port>9080</liberty.var.default.http.port",{"_index":1243,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["liberty.var.default.https.port>9443</liberty.var.default.https.port",{"_index":1244,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["liberty:dev",{"_index":1264,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["liberty:run",{"_index":1263,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["librari",{"_index":592,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"10":{},"11":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["libraries/framework",{"_index":1872,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["licens",{"_index":72,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{},"keyword":{}}],["lifecycl",{"_index":756,"title":{"12-20":{}},"name":{},"text":{"3":{},"8":{},"11":{},"12":{},"14":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["lighter",{"_index":601,"title":{},"name":{},"text":{"3":{},"6":{},"11":{}},"component":{},"keyword":{}}],["lightweight",{"_index":497,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"10":{},"11":{},"12":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["limit",{"_index":99,"title":{"18-39":{}},"name":{},"text":{"2":{},"3":{},"17":{},"18":{}},"component":{},"keyword":{}}],["line",{"_index":837,"title":{"5-3":{},"11-22":{}},"name":{},"text":{"4":{},"5":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["link",{"_index":1519,"title":{},"name":{},"text":{"12":{},"18":{}},"component":{},"keyword":{}}],["linux",{"_index":893,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["list",{"_index":374,"title":{"17-13":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["list<ord",{"_index":2783,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["list<product",{"_index":1191,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["listen",{"_index":1224,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["lite",{"_index":1344,"title":{"12-7":{},"12-8":{}},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["littl",{"_index":762,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["live",{"_index":1697,"title":{"15-7":{}},"name":{},"text":{"14":{},"15":{},"19":{}},"component":{},"keyword":{}}],["livenesscheck",{"_index":1934,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["livenessprob",{"_index":2027,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["load",{"_index":681,"title":{},"name":{},"text":{"3":{},"14":{},"15":{},"16":{},"17":{}},"component":{},"keyword":{}}],["local",{"_index":3,"title":{"1-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"11":{},"14":{},"17":{},"19":{}},"component":{},"keyword":{}}],["locat",{"_index":1018,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"12":{},"14":{},"16":{},"19":{}},"component":{},"keyword":{}}],["location=\"mp",{"_index":1240,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["lock",{"_index":518,"title":{},"name":{},"text":{"3":{},"19":{}},"component":{},"keyword":{}}],["log",{"_index":594,"title":{"18-34":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["logger",{"_index":1945,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["logger.getlogger(healthcheckresponse.class.getnam",{"_index":1946,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["logger.info(\"pay",{"_index":2350,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["logger.info(\"process",{"_index":2286,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["logger.info(\"start",{"_index":2349,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["logger.severe(\"error",{"_index":2292,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["logger.warning(\"pay",{"_index":2288,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["loggerfactory.getlogger(paymentservice.class",{"_index":2353,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["logic",{"_index":531,"title":{},"name":{},"text":{"3":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["login",{"_index":216,"title":{},"name":{},"text":{"2":{},"19":{}},"component":{},"keyword":{}}],["logist",{"_index":261,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["lombok",{"_index":1050,"title":{},"name":{},"text":{"5":{},"11":{},"12":{}},"component":{},"keyword":{}}],["lombok.allargsconstructor",{"_index":1156,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["lombok.data",{"_index":1157,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["lombok.noargsconstructor",{"_index":1798,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["long",{"_index":558,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["longer",{"_index":2318,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["longest",{"_index":2512,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["look",{"_index":991,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"12":{},"15":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["lookup",{"_index":1478,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["loop",{"_index":1915,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["loos",{"_index":758,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["lost",{"_index":2393,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["low",{"_index":959,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"16":{},"20":{}},"component":{},"keyword":{}}],["lower",{"_index":1390,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["lowest",{"_index":2806,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["lra",{"_index":559,"title":{},"name":{},"text":{"3":{},"20":{}},"component":{},"keyword":{}}],["ls",{"_index":373,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["lt",{"_index":842,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["m",{"_index":33,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["macbook",{"_index":1200,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["machin",{"_index":829,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"13":{},"15":{},"16":{}},"component":{},"keyword":{}}],["machine_nam",{"_index":375,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["made",{"_index":1604,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"16":{},"17":{}},"component":{},"keyword":{}}],["mail",{"_index":376,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["main",{"_index":565,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["main/liberty/config/server.xml",{"_index":1228,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["maintain",{"_index":242,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["mainten",{"_index":1368,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["maintenancemessag",{"_index":1751,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["maintenancemod",{"_index":1724,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["make",{"_index":506,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["malform",{"_index":2578,"title":{"19-37":{}},"name":{},"text":{},"component":{},"keyword":{}}],["manag",{"_index":139,"title":{"12-17":{},"12-20":{},"12-23":{},"14-17":{},"17-21":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["mani",{"_index":695,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["manipul",{"_index":1385,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["manner",{"_index":263,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"17":{}},"component":{},"keyword":{}}],["manual",{"_index":1400,"title":{"18-24":{},"18-27":{}},"name":{},"text":{"12":{},"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["map",{"_index":748,"title":{"19-30":{},"19-32":{}},"name":{},"text":{"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"19":{},"20":{}},"component":{},"keyword":{}}],["map(obj",{"_index":2323,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["map<str",{"_index":1762,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["mapper",{"_index":2803,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mapping(orm",{"_index":1468,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mark",{"_index":1939,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{},"keyword":{}}],["markdown",{"_index":16,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["markup",{"_index":1500,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["master",{"_index":315,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{},"keyword":{}}],["match",{"_index":2675,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["math.random",{"_index":2200,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["matrix",{"_index":2791,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["matrixparam",{"_index":2790,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["matter",{"_index":2143,"title":{"17-45":{}},"name":{},"text":{},"component":{},"keyword":{}}],["maven",{"_index":806,"title":{"4-5":{},"4-6":{},"5-3":{},"8-2":{},"11-5":{},"11-6":{},"11-22":{},"11-34":{},"20-5":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"13":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["maven.compiler.source>17</maven.compiler.sourc",{"_index":1048,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["maven.compiler.target>17</maven.compiler.target",{"_index":1049,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["maven’",{"_index":928,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["maxdur",{"_index":2177,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["maximum",{"_index":1984,"title":{},"name":{},"text":{"15":{},"16":{},"17":{}},"component":{},"keyword":{}}],["maxmemori",{"_index":1982,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["maxretri",{"_index":2176,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["mean",{"_index":348,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["meaning",{"_index":2045,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["meaningfulli",{"_index":2046,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["meanwhil",{"_index":2798,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["measur",{"_index":767,"title":{},"name":{},"text":{"3":{},"16":{},"18":{}},"component":{},"keyword":{}}],["mechan",{"_index":734,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"9":{},"11":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["media",{"_index":1207,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["mediatype.application_form_urlencod",{"_index":1509,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.application_json",{"_index":1488,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.application_json).build",{"_index":1824,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["mediatype.application_octet_stream",{"_index":1503,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.application_xml",{"_index":1490,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.multipart_form_data",{"_index":1512,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.text_html",{"_index":1499,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.text_plain",{"_index":1496,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["mediatype.text_xml",{"_index":1492,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["meet",{"_index":514,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"14":{},"16":{}},"component":{},"keyword":{}}],["member",{"_index":425,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["memori",{"_index":960,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["mention",{"_index":1891,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["menu",{"_index":361,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["merg",{"_index":1464,"title":{},"name":{},"text":{"12":{},"13":{}},"component":{},"keyword":{}}],["messag",{"_index":625,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["message\\\":\\\"pay",{"_index":1822,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["meta",{"_index":1701,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["metadata",{"_index":1024,"title":{},"name":{},"text":{"5":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["method",{"_index":755,"title":{"12-21":{}},"name":{},"text":{"3":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["method=getproduct",{"_index":2113,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["method’",{"_index":2109,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["meticul",{"_index":1790,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["metric",{"_index":122,"title":{"16":{},"16-3":{},"16-4":{},"16-5":{},"16-6":{},"16-7":{},"16-8":{},"16-9":{},"16-10":{},"16-11":{},"16-14":{},"18-34":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["metricregistri",{"_index":2105,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metricregistry.type.appl",{"_index":2106,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metricregistry.type.bas",{"_index":2107,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metricregistry.type.vendor",{"_index":2108,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?name=<nam",{"_index":2137,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?name=io_microprofile_tutorial_store_product_resource_productresource_productcatalogs",{"_index":2136,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?scope=<scope>&name=<nam",{"_index":2138,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?scope=appl",{"_index":2102,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?scope=bas",{"_index":2100,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["metrics?scope=vendor",{"_index":2103,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["micro",{"_index":629,"title":{"4-16":{},"11-16":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{}},"component":{},"keyword":{}}],["microprofi",{"_index":1059,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["microprofil",{"_index":11,"title":{"2":{},"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"3-3":{},"3-4":{},"3-5":{},"3-6":{},"3-8":{},"3-10":{},"4-13":{},"4-20":{},"5-1":{},"6-1":{},"6-2":{},"6-3":{},"11-13":{},"11-20":{},"11-23":{},"11-24":{},"13-4":{},"13-5":{},"13-7":{},"14-2":{},"14-7":{},"14-16":{},"14-19":{},"15-3":{},"16-3":{},"16-6":{},"16-11":{},"17-12":{},"17-19":{},"17-41":{},"18-2":{},"18-9":{},"19-5":{},"19-19":{},"19-20":{},"19-22":{},"20-2":{},"20-3":{},"20-4":{},"20-7":{},"20-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"keyword":{}}],["microprofile’",{"_index":460,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["microservic",{"_index":111,"title":{"7-6":{},"8-1":{},"11-29":{},"14-3":{},"16-4":{},"16-11":{},"19-14":{},"19-23":{},"19-42":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["microservice’",{"_index":1921,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["microsoft",{"_index":457,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"13":{}},"component":{},"keyword":{}}],["middlewar",{"_index":962,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["millisecond",{"_index":2178,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["mind",{"_index":2524,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["minim",{"_index":704,"title":{"18-41":{}},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["minimum",{"_index":2234,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["minut",{"_index":2720,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mirror",{"_index":1313,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["mismatch",{"_index":2726,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["miss",{"_index":1893,"title":{"19-39":{},"19-40":{}},"name":{},"text":{"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["misus",{"_index":2543,"title":{},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["mitig",{"_index":2561,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["mix",{"_index":848,"title":{},"name":{},"text":{"4":{},"11":{},"12":{}},"component":{},"keyword":{}}],["mkole7uqrg6nsxtlx6mqwt0orbhvakewndyvpiaez72dehxz3rojdxqyhxx0wkam",{"_index":2622,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mm/yi",{"_index":1803,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["mock",{"_index":1598,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["mode",{"_index":849,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["model",{"_index":532,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"9":{},"11":{},"12":{},"13":{},"14":{}},"component":{},"keyword":{}}],["modelversion>4.0.0</modelvers",{"_index":1036,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["modern",{"_index":302,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["modif",{"_index":2482,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["modifi",{"_index":1087,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["modul",{"_index":824,"title":{"6-1":{}},"name":{},"text":{"4":{},"6":{},"11":{}},"component":{},"keyword":{}}],["modular",{"_index":640,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["moment",{"_index":2088,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["monitor",{"_index":243,"title":{"18-44":{}},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["monolith",{"_index":487,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["monospac",{"_index":363,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["more",{"_index":492,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["moreov",{"_index":2061,"title":{},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["move",{"_index":716,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["mp",{"_index":967,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"15":{}},"component":{},"keyword":{}}],["mp.jwt.verify.audi",{"_index":2668,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.audiences=ord",{"_index":2664,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.issu",{"_index":2667,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.issuer=https://auth.example.com",{"_index":2663,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.publickey.loc",{"_index":2666,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.publickey.location=meta",{"_index":2661,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.rol",{"_index":2703,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.roles=group",{"_index":2641,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.jwt.verify.roles=rol",{"_index":2705,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["mp.openapi.scan=tru",{"_index":1631,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["mpconfig",{"_index":1834,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["multi",{"_index":2461,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["multipart",{"_index":1513,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["multipart/form",{"_index":1511,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["multipl",{"_index":161,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"13":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["multivaluedmap<string,object",{"_index":2808,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["mvn",{"_index":880,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"8":{},"11":{}},"component":{},"keyword":{}}],["mvnw",{"_index":876,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["myapplic",{"_index":1750,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["myenvironmentconfigsourc",{"_index":1848,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["myimage:v1",{"_index":2033,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["mysql",{"_index":2457,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["name",{"_index":106,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["name\":\"iphon",{"_index":1535,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["name(str",{"_index":1956,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["namedqueri",{"_index":1427,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["namedquery(nam",{"_index":1418,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["nativ",{"_index":127,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"12":{},"14":{},"15":{},"18":{},"20":{}},"component":{},"keyword":{}}],["natur",{"_index":685,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["navig",{"_index":38,"title":{},"name":{},"text":{"1":{},"8":{},"11":{}},"component":{},"keyword":{}}],["nbf",{"_index":2631,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["necessari",{"_index":342,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["necessarili",{"_index":624,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["necessit",{"_index":500,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["need",{"_index":395,"title":{"3-4":{},"16-4":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["net",{"_index":2652,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["netbean",{"_index":811,"title":{"4-11":{},"11-11":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["network",{"_index":683,"title":{},"name":{},"text":{"3":{},"6":{},"10":{},"11":{},"17":{},"18":{}},"component":{},"keyword":{}}],["neutral",{"_index":430,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["never",{"_index":2467,"title":{},"name":{},"text":{"18":{},"19":{}},"component":{},"keyword":{}}],["new",{"_index":285,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["newbuild",{"_index":2845,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["newli",{"_index":1217,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["next",{"_index":1008,"title":{"8-3":{},"11-35":{}},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["nich",{"_index":606,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["noargsconstructor",{"_index":1159,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["node",{"_index":2384,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["node.j",{"_index":2653,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["non",{"_index":550,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["none",{"_index":2134,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["noqx7n7zymmpudkr",{"_index":2617,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["normal",{"_index":1739,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["note",{"_index":1269,"title":{},"name":{},"text":{"7":{},"11":{},"16":{},"20":{}},"component":{},"keyword":{}}],["notes.html",{"_index":909,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["noth",{"_index":622,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["notic",{"_index":64,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["notif",{"_index":1862,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["notifi",{"_index":1866,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["notnul",{"_index":1423,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["now",{"_index":432,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["nowaday",{"_index":1145,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["null",{"_index":1172,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["number",{"_index":651,"title":{"16-13":{}},"name":{},"text":{"3":{},"7":{},"11":{},"13":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["numer",{"_index":1959,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["oa",{"_index":1582,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["oauth",{"_index":2704,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["obj",{"_index":2324,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["object",{"_index":49,"title":{"2-9":{}},"name":{},"text":{"3":{},"5":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["observ",{"_index":327,"title":{},"name":{},"text":{"2":{},"3":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["obtain",{"_index":78,"title":{},"name":{},"text":{"2":{},"19":{}},"component":{},"keyword":{}}],["occu",{"_index":248,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["occur",{"_index":1688,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["occurr",{"_index":2076,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["offer",{"_index":438,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["offici",{"_index":833,"title":{},"name":{},"text":{"4":{},"8":{},"11":{},"20":{}},"component":{},"keyword":{}}],["offload",{"_index":2253,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["oidc",{"_index":578,"title":{},"name":{},"text":{"3":{},"19":{}},"component":{},"keyword":{}}],["ok",{"_index":1641,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["old",{"_index":1165,"title":{},"name":{},"text":{"7":{},"11":{},"14":{}},"component":{},"keyword":{}}],["older",{"_index":2542,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["omit",{"_index":2841,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["on",{"_index":173,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["onc",{"_index":1377,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"18":{},"19":{}},"component":{},"keyword":{}}],["one:latest",{"_index":2480,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["onfabipjazm0haa415sv3aeubwnd8j",{"_index":2611,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["onlin",{"_index":277,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["open",{"_index":36,"title":{"4-14":{},"11-14":{},"13-7":{},"14-16":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"11":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["openapi",{"_index":588,"title":{"13":{},"13-3":{},"13-4":{},"13-5":{},"13-6":{}},"name":{},"text":{"3":{},"6":{},"11":{},"13":{},"14":{}},"component":{},"keyword":{}}],["openapidefinit",{"_index":1656,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["openid",{"_index":576,"title":{},"name":{},"text":{"3":{},"19":{}},"component":{},"keyword":{}}],["openj9",{"_index":860,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["openjdk",{"_index":834,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["opentelementri",{"_index":2410,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["opentelemetri",{"_index":1128,"title":{"18-15":{}},"name":{},"text":{"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["opentelemetry’",{"_index":2487,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["opentrac",{"_index":326,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["oper",{"_index":323,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["operation(summari",{"_index":1613,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["operation’",{"_index":1662,"title":{},"name":{},"text":{"13":{},"18":{}},"component":{},"keyword":{}}],["opportun",{"_index":2519,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["opt",{"_index":927,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["optim",{"_index":255,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["option",{"_index":955,"title":{"7-8":{},"11-31":{}},"name":{},"text":{"4":{},"5":{},"7":{},"11":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["optional<map<str",{"_index":1947,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["oracl",{"_index":100,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["orchestr",{"_index":2022,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["order",{"_index":212,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["order.id",{"_index":2426,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["order_id",{"_index":2643,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["orderid",{"_index":2414,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["orderresourc",{"_index":2693,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["orders/chapter10",{"_index":2702,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["orderservic",{"_index":1319,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["orderservicecli",{"_index":2782,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["orderserviceclient.getorders(\"bear",{"_index":2786,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ordin",{"_index":1758,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.config.inject.configproperti",{"_index":1720,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.config.spi.configsourc",{"_index":1773,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.config:microprofil",{"_index":1712,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.asynchron",{"_index":2255,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.bulkhead",{"_index":2254,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.executioncontext",{"_index":2311,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.fallback",{"_index":2302,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.fallbackhandl",{"_index":2310,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.retri",{"_index":2189,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.faulttolerance.timeout",{"_index":2279,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health",{"_index":1941,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health.healthcheck",{"_index":1967,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health.healthcheckrespons",{"_index":1968,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health.healthcheckresponsebuild",{"_index":1978,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health.l",{"_index":1979,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health.readi",{"_index":1969,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.health:microprofil",{"_index":1962,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.jwt:microprofil",{"_index":2656,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.metrics.annotation.gaug",{"_index":2130,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.metrics.annotation.tim",{"_index":2110,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.metrics.metr",{"_index":2124,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.metrics:microprofil",{"_index":2093,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.openapi.annot",{"_index":1669,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.openapi.annotations.media.cont",{"_index":1611,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.openapi.annotations.media.schema",{"_index":1612,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.openapi.annotations.oper",{"_index":1609,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.openapi.annotations.responses.apirespons",{"_index":1610,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.rest.client.annotation.registerprovid",{"_index":2813,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.rest.client.ext.responseexceptionmapp",{"_index":2817,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.rest.client.inject.registerrestcli",{"_index":2752,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.rest.client.restclientbuild",{"_index":2827,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile.rest.client:microprofil",{"_index":2749,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["org.eclipse.microprofile:microprofile:6.1",{"_index":1091,"title":{},"name":{},"text":{"6":{},"11":{},"20":{}},"component":{},"keyword":{}}],["org.junit.jupiter.api.aftereach",{"_index":1281,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["org.junit.jupiter.api.assertions.assertequ",{"_index":1279,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["org.junit.jupiter.api.assertions.assertnotnul",{"_index":1280,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["org.junit.jupiter.api.beforeeach",{"_index":1282,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["org.junit.jupiter.api.test",{"_index":1283,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["organ",{"_index":792,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["orient",{"_index":798,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["origin",{"_index":2095,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["orm",{"_index":1314,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["os",{"_index":892,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["otel.exporter.jaeger.endpoint=https://secur",{"_index":2536,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.exporter.otlp.endpoint=http://localhost:4317",{"_index":2464,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.exporter.otlp.endpoint=https://secur",{"_index":2538,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.sdk.disabled=fals",{"_index":2486,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.service.name=pay",{"_index":2465,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.traces.exporter=otlp",{"_index":2463,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.traces.sampler.traceidratio=0.1",{"_index":2546,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.traces.sampler=parentbased_always_on",{"_index":2468,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["otel.traces.sampler=traceidratio",{"_index":2545,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["other",{"_index":778,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["otherwis",{"_index":1738,"title":{},"name":{},"text":{"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["other’",{"_index":1146,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["otlp",{"_index":2462,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["out",{"_index":948,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"12":{},"13":{},"15":{},"18":{}},"component":{},"keyword":{}}],["outag",{"_index":2152,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["outcom",{"_index":238,"title":{},"name":{},"text":{"2":{},"8":{},"11":{},"15":{},"18":{}},"component":{},"keyword":{}}],["outgo",{"_index":2485,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["outlier",{"_index":2082,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["outlin",{"_index":2053,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{},"keyword":{}}],["output",{"_index":771,"title":{},"name":{},"text":{"3":{},"4":{},"8":{},"11":{},"12":{}},"component":{},"keyword":{}}],["outsid",{"_index":398,"title":{"3-7":{}},"name":{},"text":{},"component":{},"keyword":{}}],["over",{"_index":597,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"9":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["overal",{"_index":636,"title":{},"name":{},"text":{"3":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["overhead",{"_index":641,"title":{},"name":{},"text":{"3":{},"12":{},"15":{},"18":{}},"component":{},"keyword":{}}],["overli",{"_index":2298,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["overload",{"_index":2271,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["overrid",{"_index":1780,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["overview",{"_index":0,"title":{"1-1":{},"15-3":{},"20-17":{}},"name":{},"text":{"2":{},"3":{},"4":{},"9":{},"11":{},"12":{},"15":{},"16":{}},"component":{},"keyword":{}}],["overwhelm",{"_index":2225,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["owner",{"_index":108,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["ownership",{"_index":71,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["p",{"_index":739,"title":{},"name":{},"text":{"3":{},"12":{},"18":{},"20":{}},"component":{},"keyword":{}}],["p.id",{"_index":1421,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["pace",{"_index":511,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["packag",{"_index":964,"title":{"9-1":{}},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"20":{}},"component":{},"keyword":{}}],["packaging>war</packag",{"_index":1040,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["page",{"_index":879,"title":{},"name":{},"text":{"4":{},"11":{},"18":{},"19":{}},"component":{},"keyword":{}}],["page=2&size=20",{"_index":2780,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pagin",{"_index":2774,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pair",{"_index":1708,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["paradigm",{"_index":797,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["paragraph",{"_index":367,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["parallel",{"_index":2327,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["param",{"_index":2283,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paramet",{"_index":1526,"title":{"17-18":{},"17-25":{},"20-10":{},"20-11":{},"20-13":{},"20-15":{}},"name":{},"text":{"12":{},"13":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["parent",{"_index":2399,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["pars",{"_index":740,"title":{},"name":{},"text":{"3":{},"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["part",{"_index":777,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["parti",{"_index":1586,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["particip",{"_index":330,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["particular",{"_index":384,"title":{},"name":{},"text":{"2":{},"14":{},"16":{}},"component":{},"keyword":{}}],["particularli",{"_index":17,"title":{},"name":{},"text":{"1":{},"3":{},"12":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["partit",{"_index":2341,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["pass",{"_index":1808,"title":{},"name":{},"text":{"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["password",{"_index":1878,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["patch",{"_index":2797,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["path",{"_index":1215,"title":{"20-11":{}},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["path(\"/author",{"_index":1812,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["path(\"/count",{"_index":2131,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["path(\"/custom",{"_index":2496,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["path(\"/ord",{"_index":2692,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["path(\"/product",{"_index":1189,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["path(\"/trac",{"_index":2494,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["path(\"/us",{"_index":2680,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["path(\"/{id",{"_index":2694,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["path(\"products/{id",{"_index":1559,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["path(/product",{"_index":2758,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pathparam",{"_index":1565,"title":{"20-11":{},"20-12":{}},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["pathparam(\"id",{"_index":2761,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["pattern",{"_index":527,"title":{},"name":{},"text":{"3":{},"6":{},"9":{},"11":{},"12":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["pay",{"_index":725,"title":{},"name":{},"text":{"3":{},"14":{},"18":{}},"component":{},"keyword":{}}],["payara",{"_index":456,"title":{"4-16":{},"11-16":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{}},"component":{},"keyword":{}}],["payload",{"_index":1539,"title":{},"name":{},"text":{"12":{},"14":{},"19":{}},"component":{},"keyword":{}}],["payment",{"_index":227,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["payment.amount",{"_index":2427,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["payment.bulkhead.valu",{"_index":2346,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["payment.gateway.apikey",{"_index":1814,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["payment.gateway.endpoint",{"_index":1816,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["payment.process",{"_index":2425,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["payment.simulateddelay",{"_index":2344,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["payment.statu",{"_index":2428,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["payment/api/author",{"_index":1825,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["paymentdetail",{"_index":1799,"title":{"17-16":{}},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["paymentdetails.getamount",{"_index":2198,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paymentdetails.tostr",{"_index":1819,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["paymentfailedexcept",{"_index":1327,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["paymentmethod",{"_index":2502,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["paymentprocessingexcept",{"_index":2197,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paymentprocessingexception(\"temporari",{"_index":2202,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paymentprocessingexception(str",{"_index":2209,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paymentprocessingexception.class",{"_index":2193,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["paymentservic",{"_index":1794,"title":{"17-15":{},"18-27":{}},"name":{},"text":{"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["paymentserviceconfigsourc",{"_index":1768,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["payrol",{"_index":2647,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["pem",{"_index":2660,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["penetr",{"_index":1699,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["per",{"_index":1210,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["percentag",{"_index":2544,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["percentil",{"_index":2086,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["perform",{"_index":480,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["period",{"_index":1703,"title":{},"name":{},"text":{"14":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["periodsecond",{"_index":2038,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["permiss",{"_index":98,"title":{"19-40":{}},"name":{},"text":{"2":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["permital",{"_index":2716,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["persist",{"_index":730,"title":{},"name":{},"text":{"3":{},"7":{},"9":{},"11":{},"12":{}},"component":{},"keyword":{}}],["persistencecontext",{"_index":1459,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{},"keyword":{}}],["persistencecontext(unitnam",{"_index":1438,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["persistenceunit",{"_index":2016,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["person",{"_index":220,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"18":{},"19":{}},"component":{},"keyword":{}}],["personnel",{"_index":1885,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["phase",{"_index":1137,"title":{},"name":{},"text":{"6":{},"8":{},"11":{}},"component":{},"keyword":{}}],["philosophi",{"_index":400,"title":{"3-9":{}},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["pictur",{"_index":2517,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["piec",{"_index":761,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["pii",{"_index":2527,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["pinpoint",{"_index":2068,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["pipelin",{"_index":1853,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["pivot",{"_index":714,"title":{},"name":{},"text":{"3":{},"12":{},"16":{}},"component":{},"keyword":{}}],["place",{"_index":253,"title":{},"name":{},"text":{"2":{},"3":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["placehold",{"_index":381,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["plain",{"_index":1164,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["plan",{"_index":2336,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["platform",{"_index":110,"title":{"3-6":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["platform’",{"_index":1883,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["play",{"_index":208,"title":{},"name":{},"text":{"2":{},"3":{},"12":{}},"component":{},"keyword":{}}],["player",{"_index":646,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["pleas",{"_index":1268,"title":{},"name":{},"text":{"7":{},"11":{},"14":{},"15":{}},"component":{},"keyword":{}}],["plugin",{"_index":868,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["plugin</artifactid",{"_index":1250,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["pod",{"_index":2026,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["point",{"_index":1323,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["poject",{"_index":1022,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["pojo",{"_index":1166,"title":{"14-12":{}},"name":{},"text":{"7":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["polici",{"_index":2024,"title":{"17-14":{},"17-20":{}},"name":{},"text":{"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["poll",{"_index":1859,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["polyglot",{"_index":2387,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["pom.xml",{"_index":901,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["pool",{"_index":2145,"title":{"17-49":{}},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["popul",{"_index":1527,"title":{},"name":{},"text":{"12":{},"19":{}},"component":{},"keyword":{}}],["popular",{"_index":866,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"12":{},"18":{}},"component":{},"keyword":{}}],["port",{"_index":1223,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"15":{},"16":{}},"component":{},"keyword":{}}],["portabl",{"_index":694,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["portal",{"_index":1596,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["posit",{"_index":713,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["possibl",{"_index":1624,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["post",{"_index":266,"title":{"12-25":{}},"name":{},"text":{"2":{},"12":{},"13":{},"14":{},"20":{}},"component":{},"keyword":{}}],["postman",{"_index":1530,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["postpon",{"_index":1923,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["potenti",{"_index":1096,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["power",{"_index":950,"title":{},"name":{},"text":{"4":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["practic",{"_index":167,"title":{"14-19":{},"15-22":{},"17-20":{},"17-27":{},"17-32":{},"17-36":{},"17-42":{},"17-51":{},"18-35":{},"19-41":{},"19-42":{}},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["pre",{"_index":1927,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["preced",{"_index":1760,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["precis",{"_index":2424,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["predefin",{"_index":784,"title":{},"name":{},"text":{"3":{},"13":{},"15":{},"19":{}},"component":{},"keyword":{}}],["predict",{"_index":2340,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["prefac",{"_index":42,"title":{"2-2":{}},"name":{},"text":{},"component":{},"keyword":{}}],["prefer",{"_index":954,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"19":{}},"component":{},"keyword":{}}],["prefix",{"_index":1837,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["prematur",{"_index":1926,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["prepar",{"_index":345,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"12":{}},"component":{},"keyword":{}}],["prerequisit",{"_index":47,"title":{"2-8":{}},"name":{},"text":{},"component":{},"keyword":{}}],["present",{"_index":146,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"15":{}},"component":{},"keyword":{}}],["pressur",{"_index":802,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["prevent",{"_index":256,"title":{"17-23":{}},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["previou",{"_index":1575,"title":{},"name":{},"text":{"13":{},"16":{}},"component":{},"keyword":{}}],["previous",{"_index":1412,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["price",{"_index":183,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"13":{},"17":{}},"component":{},"keyword":{}}],["price\":\"749",{"_index":1557,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["price\":\"799.99",{"_index":1537,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["price).getresultlist",{"_index":1458,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["primari",{"_index":417,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["primarili",{"_index":1493,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["primeton",{"_index":455,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["primit",{"_index":1171,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["princip",{"_index":2629,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["principl",{"_index":737,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"10":{},"11":{},"12":{},"17":{}},"component":{},"keyword":{}}],["priorit",{"_index":2802,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["prioriti",{"_index":1782,"title":{},"name":{},"text":{"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["privaci",{"_index":2548,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["privat",{"_index":1161,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["privileg",{"_index":2715,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["pro\",\"id\":1,\"name\":\"iphon",{"_index":1747,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["pro\",\"price\":999.0",{"_index":1748,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["proactiv",{"_index":2563,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["probe",{"_index":1898,"title":{"15-21":{}},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["problem",{"_index":2217,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["problemat",{"_index":2513,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["procedur",{"_index":1906,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["proceed",{"_index":1741,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["process",{"_index":21,"title":{"12-11":{},"12-12":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["processpay",{"_index":1826,"title":{},"name":{},"text":{"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["processpayment(paymentdetail",{"_index":1817,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["processpayment(str",{"_index":2413,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["prod.database.url",{"_index":1840,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["produc",{"_index":1204,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"20":{}},"component":{},"keyword":{}}],["produces(\"application/json",{"_index":2799,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["produces(mediatype.application_json",{"_index":1203,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["produces(mediatype.application_xml",{"_index":1483,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["product",{"_index":175,"title":{"12-23":{},"12-24":{},"12-26":{},"12-28":{},"20-23":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["product(long.valueof(1l",{"_index":1194,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["product(long.valueof(2l",{"_index":1199,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["product.class",{"_index":1454,"title":{},"name":{},"text":{"12":{},"13":{}},"component":{},"keyword":{}}],["product.class).getresultlist",{"_index":1449,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["product.findallproduct",{"_index":1419,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["product.findproductbyid",{"_index":1420,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["product.java",{"_index":1014,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["product.maintenancemessag",{"_index":1754,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["product.maintenancemod",{"_index":1735,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["product.maintenancemode=fals",{"_index":1717,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["product.service.timeout",{"_index":2328,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["product;color=blue;size=larg",{"_index":2792,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["product`",{"_index":1627,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["productaccesscount",{"_index":2126,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productaccesscount_tot",{"_index":2127,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productaccesscount_total{mp_scope=\"appl",{"_index":2128,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productapiuri",{"_index":2831,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productcach",{"_index":2317,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["productcache.getall().stream",{"_index":2322,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["productcatalogs",{"_index":2133,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productcli",{"_index":2833,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productclient.getproductbyid(productid",{"_index":2840,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productid",{"_index":2117,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{},"keyword":{}}],["productlookuptim",{"_index":2112,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productlookuptime_seconds_max",{"_index":2121,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productlookuptime_seconds_max{method=\"getproduct\",mp_scope=\"appl",{"_index":2122,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productnotfoundexcept",{"_index":1326,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{},"keyword":{}}],["productnotfoundexception(\"product",{"_index":2821,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productrepositori",{"_index":1317,"title":{},"name":{},"text":{"9":{},"11":{},"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["productrepository.createproduct(product",{"_index":1522,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["productrepository.deleteproduct(product",{"_index":1563,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["productrepository.findallproduct",{"_index":1476,"title":{},"name":{},"text":{"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["productrepository.findproductbyid(id",{"_index":1562,"title":{},"name":{},"text":{"12":{},"17":{}},"component":{},"keyword":{}}],["productrepository.updateproduct(product",{"_index":1547,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["productresourc",{"_index":1177,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["productresource.getproduct",{"_index":1289,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["productresource.java",{"_index":1179,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["productresourcetest",{"_index":1276,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["productresourcetest.java",{"_index":1277,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["productrestappl",{"_index":1209,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["productrestapplication.java",{"_index":1016,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["products.add(new",{"_index":1193,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["products.isempti",{"_index":1729,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["products.s",{"_index":1292,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["products/1",{"_index":2772,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["products/12345",{"_index":2438,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["products?category=electron",{"_index":2778,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productservic",{"_index":1294,"title":{},"name":{},"text":{"8":{},"9":{},"11":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["productservice.getproduct(productid",{"_index":2118,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["productservice.java",{"_index":1015,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["productservicecli",{"_index":2755,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productserviceclient.getproductbyid(1l",{"_index":2771,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productserviceclient.getproductsbycategory(\"electron",{"_index":2777,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productservicehealthcheck",{"_index":1970,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["productservicelivenesscheck",{"_index":1980,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["productserviceresponseexceptionmapp",{"_index":2816,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["productservicestartupcheck",{"_index":2015,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["productservicetest.java",{"_index":1017,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["product’",{"_index":1153,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["produdt",{"_index":1626,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["profession",{"_index":134,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["profil",{"_index":599,"title":{"12":{},"12-3":{},"12-4":{}},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"19":{}},"component":{},"keyword":{}}],["profile’",{"_index":1408,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["program",{"_index":283,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"10":{},"11":{},"12":{},"17":{},"18":{}},"component":{},"keyword":{}}],["programm",{"_index":1339,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{},"keyword":{}}],["programmat",{"_index":1841,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["project",{"_index":44,"title":{"2-6":{},"5-1":{},"13-7":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["project.build.sourceencoding>utf",{"_index":1044,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["project.reporting.outputencoding>utf",{"_index":1046,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["project’",{"_index":428,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"11":{}},"component":{},"keyword":{}}],["prometheu",{"_index":2062,"title":{},"name":{},"text":{"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["promot",{"_index":207,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["prompt",{"_index":1006,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"14":{}},"component":{},"keyword":{}}],["prone",{"_index":1367,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["propag",{"_index":609,"title":{"18-6":{},"19-23":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["proper",{"_index":2383,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["properli",{"_index":1919,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{},"keyword":{}}],["properti",{"_index":1043,"title":{"14-8":{},"14-9":{}},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["properties.get(propertynam",{"_index":1781,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["properties.keyset",{"_index":1785,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["properties.put(\"payment.gateway.apikey",{"_index":1776,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["properties.put(\"payment.gateway.endpoint",{"_index":1778,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["propertynam",{"_index":1765,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["proport",{"_index":2233,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["propos",{"_index":1331,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["protect",{"_index":1884,"title":{},"name":{},"text":{"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["protocol",{"_index":721,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["provid",{"_index":129,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["providedcompil",{"_index":2092,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["proxi",{"_index":2740,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["prudent",{"_index":1099,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["public",{"_index":1160,"title":{"19-21":{}},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["publish",{"_index":1584,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["pull",{"_index":1788,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["purchas",{"_index":267,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["purg",{"_index":2541,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["purpos",{"_index":163,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["put",{"_index":1347,"title":{"12-27":{}},"name":{},"text":{"12":{},"13":{},"20":{}},"component":{},"keyword":{}}],["python",{"_index":2388,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["python3",{"_index":32,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["python’",{"_index":26,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["p’",{"_index":1401,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["q&a",{"_index":331,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["qa",{"_index":1691,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["qr1owv2ug2wypbnbqrrarteek9kdo2w8qdcjihnsjflsdv1inqhwxakh4mqakqtm",{"_index":2610,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["qualifi",{"_index":1661,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["qualiti",{"_index":1566,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["quantiti",{"_index":1154,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["quarku",{"_index":633,"title":{"4-15":{},"11-15":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{},"19":{}},"component":{},"keyword":{}}],["quartu",{"_index":961,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["queri",{"_index":742,"title":{"20-13":{}},"name":{},"text":{"3":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["queryparam",{"_index":2729,"title":{"20-13":{},"20-14":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["queu",{"_index":2352,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["queue",{"_index":2081,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{},"keyword":{}}],["quick",{"_index":949,"title":{},"name":{},"text":{"4":{},"11":{},"18":{}},"component":{},"keyword":{}}],["quickli",{"_index":546,"title":{},"name":{},"text":{"3":{},"13":{},"16":{},"17":{}},"component":{},"keyword":{}}],["quickstart",{"_index":998,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["random",{"_index":2213,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["rang",{"_index":671,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"13":{},"16":{},"18":{}},"component":{},"keyword":{}}],["rapid",{"_index":510,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["rapidli",{"_index":545,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["rate",{"_index":2060,"title":{},"name":{},"text":{"16":{},"18":{}},"component":{},"keyword":{}}],["ratio",{"_index":2237,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["rbac",{"_index":790,"title":{"19-29":{},"19-33":{}},"name":{},"text":{"3":{},"18":{},"19":{}},"component":{},"keyword":{}}],["re",{"_index":2640,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["reach",{"_index":2343,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["react",{"_index":1868,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["reactiv",{"_index":549,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["read",{"_index":386,"title":{"14-9":{}},"name":{},"text":{"2":{},"12":{},"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["readabl",{"_index":1359,"title":{},"name":{},"text":{"12":{},"13":{},"15":{},"20":{}},"component":{},"keyword":{}}],["reader",{"_index":340,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{},"keyword":{}}],["readi",{"_index":584,"title":{"15-8":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{}},"component":{},"keyword":{}}],["readili",{"_index":1672,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["readinessprob",{"_index":2028,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["readm",{"_index":4,"title":{"1":{}},"name":{"1":{}},"text":{},"component":{},"keyword":{}}],["readme.md",{"_index":1010,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["readtimeout",{"_index":2848,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["readtimeout(5",{"_index":2838,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["real",{"_index":143,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["realist",{"_index":2252,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["reason",{"_index":2334,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["reattempt",{"_index":2364,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["receiv",{"_index":235,"title":{},"name":{},"text":{"2":{},"14":{},"15":{},"18":{},"19":{}},"component":{},"keyword":{}}],["recipi",{"_index":2630,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["recogn",{"_index":1593,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["recommend",{"_index":854,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["recompil",{"_index":1682,"title":{},"name":{},"text":{"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["record",{"_index":2430,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["recov",{"_index":766,"title":{},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{},"keyword":{}}],["recover",{"_index":2207,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["recoveri",{"_index":587,"title":{},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{},"keyword":{}}],["red",{"_index":453,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["redeploy",{"_index":1683,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["redirect",{"_index":2742,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["reduc",{"_index":524,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["ref",{"_index":1642,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["refer",{"_index":945,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["referenc",{"_index":1663,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["reflect",{"_index":252,"title":{},"name":{},"text":{"2":{},"14":{},"15":{}},"component":{},"keyword":{}}],["refresh",{"_index":1855,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["regard",{"_index":70,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{},"keyword":{}}],["region",{"_index":2635,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["regist",{"_index":102,"title":{"14-14":{}},"name":{},"text":{"2":{},"7":{},"11":{},"14":{},"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["registerprovid",{"_index":2815,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["registerprovider(productserviceresponseexceptionmapper.class",{"_index":2814,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["registerrestcli",{"_index":2728,"title":{"20-8":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["registerrestclient(configkey",{"_index":2754,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["registr",{"_index":215,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["registri",{"_index":2054,"title":{"16-9":{},"16-10":{}},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["regul",{"_index":2378,"title":{"18-42":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["regular",{"_index":1744,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{},"keyword":{}}],["regularli",{"_index":1887,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["reinvent",{"_index":529,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["reject",{"_index":2342,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["relat",{"_index":181,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["relationship",{"_index":304,"title":{"3-11":{}},"name":{},"text":{"2":{},"3":{},"18":{}},"component":{},"keyword":{}}],["releas",{"_index":905,"title":{},"name":{},"text":{"4":{},"11":{},"20":{}},"component":{},"keyword":{}}],["relev",{"_index":765,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"11":{},"12":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["reli",{"_index":2824,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["reliabl",{"_index":623,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["reload",{"_index":1870,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["remain",{"_index":1892,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["rememb",{"_index":1077,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["remot",{"_index":1704,"title":{},"name":{},"text":{"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["remov",{"_index":196,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"12":{},"14":{},"20":{}},"component":{},"keyword":{}}],["render",{"_index":1501,"title":{},"name":{},"text":{"12":{},"13":{},"15":{}},"component":{},"keyword":{}}],["renown",{"_index":871,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["reorder",{"_index":1379,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["repackag",{"_index":1105,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["repeat",{"_index":1342,"title":{},"name":{},"text":{"10":{},"11":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["replac",{"_index":1222,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["replic",{"_index":2335,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["repo",{"_index":5,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{},"keyword":{}}],["report",{"_index":1109,"title":{},"name":{},"text":{"6":{},"11":{},"15":{},"16":{}},"component":{},"keyword":{}}],["repositori",{"_index":180,"title":{"12-19":{}},"name":{},"text":{"2":{},"4":{},"8":{},"9":{},"11":{},"12":{},"14":{},"16":{},"20":{}},"component":{},"keyword":{}}],["repres",{"_index":443,"title":{},"name":{},"text":{"3":{},"5":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["represent",{"_index":1147,"title":{},"name":{},"text":{"7":{},"10":{},"11":{},"12":{}},"component":{},"keyword":{}}],["request",{"_index":620,"title":{"12-25":{},"12-27":{},"19-22":{},"20-18":{}},"name":{},"text":{"3":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["requestbodi",{"_index":1644,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["requestscop",{"_index":1437,"title":{},"name":{},"text":{"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["requestvolumethreshold",{"_index":2185,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["requir",{"_index":82,"title":{"14-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["rerout",{"_index":1902,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["rerun",{"_index":1304,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["resili",{"_index":125,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["resolv",{"_index":1305,"title":{},"name":{},"text":{"8":{},"11":{},"17":{}},"component":{},"keyword":{}}],["resourc",{"_index":754,"title":{"7-3":{},"7-4":{},"8-4":{},"11-26":{},"11-27":{},"11-36":{},"12-21":{},"17-44":{},"17-45":{},"17-46":{},"17-51":{}},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["respect",{"_index":107,"title":{},"name":{},"text":{"2":{},"15":{},"20":{}},"component":{},"keyword":{}}],["respond",{"_index":1827,"title":{},"name":{},"text":{"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["respons",{"_index":213,"title":{"15-11":{},"16-12":{},"20-18":{}},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["response.getstatu",{"_index":2820,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["response.ok(\"ord",{"_index":2698,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["response.ok(\"{\\\"status\\\":\\\"fail",{"_index":2307,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["response.ok(\"{\\\"status\\\":\\\"success",{"_index":2203,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["response.ok(result",{"_index":1823,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["response.status(response.status.cr",{"_index":1523,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["response.status(response.status.not_found",{"_index":1551,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["response.status(response.status.ok",{"_index":1548,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["responsebuild",{"_index":1998,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["responsebuilder.build",{"_index":2007,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["responsebuilder.down",{"_index":2006,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["responsebuilder.up",{"_index":2005,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["responsecod",{"_index":1616,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["responseexceptionmapp",{"_index":2731,"title":{"20-21":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["responseexceptionmapper<throw",{"_index":2819,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["rest",{"_index":117,"title":{"20":{},"7-1":{},"12-15":{},"12-16":{},"12-22":{},"12-23":{},"20-2":{},"20-3":{},"20-4":{},"20-7":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"18":{},"20":{}},"component":{},"keyword":{}}],["rest/followredirects=tru",{"_index":2769,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["rest/url=http://localhost:8080/api/product",{"_index":2768,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["restart",{"_index":1901,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["restclient",{"_index":2739,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["restclientbuild",{"_index":2732,"title":{"20-22":{}},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["restclientbuilder.newbuild",{"_index":2834,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["restock",{"_index":249,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["restrict",{"_index":791,"title":{},"name":{},"text":{"3":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["result",{"_index":1298,"title":{},"name":{},"text":{"8":{},"11":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["resum",{"_index":2172,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["retain",{"_index":2540,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["retent",{"_index":2376,"title":{"18-39":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["retri",{"_index":573,"title":{"17-6":{},"17-14":{},"17-15":{},"17-18":{},"17-20":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["retriev",{"_index":1175,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["retryon",{"_index":2192,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["return",{"_index":1152,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["reus",{"_index":1378,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["reusabl",{"_index":1376,"title":{},"name":{},"text":{"12":{},"13":{},"17":{}},"component":{},"keyword":{}}],["revalid",{"_index":2655,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["revenu",{"_index":2394,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["revers",{"_index":977,"title":{},"name":{},"text":{"4":{},"5":{},"11":{}},"component":{},"keyword":{}}],["review",{"_index":1220,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"14":{}},"component":{},"keyword":{}}],["revis",{"_index":913,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["revolution",{"_index":711,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["rfc",{"_index":2586,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rich",{"_index":934,"title":{},"name":{},"text":{"4":{},"11":{},"13":{},"15":{}},"component":{},"keyword":{}}],["right",{"_index":823,"title":{"6-1":{}},"name":{},"text":{"4":{},"6":{},"11":{},"16":{}},"component":{},"keyword":{}}],["rigor",{"_index":1693,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["rise",{"_index":499,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["risk",{"_index":665,"title":{},"name":{},"text":{"3":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["rm",{"_index":392,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["robust",{"_index":274,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["role",{"_index":265,"title":{"19-10":{},"19-29":{},"19-30":{},"19-32":{},"19-40":{}},"name":{},"text":{"2":{},"3":{},"12":{},"15":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["rolesallow",{"_index":2583,"title":{"19-40":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rolesallowed(\"admin",{"_index":2700,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rolesallowed(\"us",{"_index":2695,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["roll",{"_index":2235,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["root",{"_index":1216,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["rotat",{"_index":2725,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rs",{"_index":751,"title":{},"name":{},"text":{"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["rs256",{"_index":2595,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rsa",{"_index":2596,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["rule",{"_index":2658,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["run",{"_index":1,"title":{"1-2":{},"7-9":{},"8-2":{},"11-32":{},"11-34":{},"18-21":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["runnabl",{"_index":965,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["runner",{"_index":938,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["runtim",{"_index":602,"title":{"4-13":{},"11-13":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["runtime.freememori",{"_index":1989,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["runtime.getruntim",{"_index":1981,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["runtime.maxmemori",{"_index":1983,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["runtime.totalmemori",{"_index":1986,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["runtimeexcept",{"_index":2812,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["runtimeexception(\"error",{"_index":2266,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["runtimeexception(\"servic",{"_index":2305,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["runtimeexception(\"simul",{"_index":2246,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["runtimeexception.class",{"_index":2244,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["runtime’",{"_index":985,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"16":{}},"component":{},"keyword":{}}],["safe",{"_index":595,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"17":{},"20":{}},"component":{},"keyword":{}}],["safeguard",{"_index":222,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{},"keyword":{}}],["safeti",{"_index":1403,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["sale",{"_index":247,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["same",{"_index":1553,"title":{},"name":{},"text":{"12":{},"19":{}},"component":{},"keyword":{}}],["sampl",{"_index":155,"title":{"18-41":{}},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"11":{},"18":{}},"component":{},"keyword":{}}],["sanit",{"_index":1695,"title":{},"name":{},"text":{"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["save",{"_index":391,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["saw",{"_index":1576,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{},"keyword":{}}],["scalabl",{"_index":124,"title":{"19-15":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"11":{},"12":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["scale",{"_index":793,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["scan",{"_index":1602,"title":{},"name":{},"text":{"13":{},"20":{}},"component":{},"keyword":{}}],["scenario",{"_index":311,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["schedul",{"_index":1860,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["schema",{"_index":1619,"title":{},"name":{},"text":{"13":{},"19":{}},"component":{},"keyword":{}}],["schema(implement",{"_index":1620,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["schematype.array",{"_index":1621,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["scheme",{"_index":1665,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["scope",{"_index":1371,"title":{},"name":{},"text":{"12":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["scope>import</scop",{"_index":1135,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["scope>provided</scop",{"_index":1054,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"18":{},"19":{}},"component":{},"keyword":{}}],["scope>test</scop",{"_index":1069,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["screen",{"_index":370,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["screenshot",{"_index":1654,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["script",{"_index":869,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["sd8onqrnjvwn_hxv1bnmhzujpyywesrhdhzjad26ima",{"_index":2615,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["sdk",{"_index":1587,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["se",{"_index":728,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"11":{}},"component":{},"keyword":{}}],["seamless",{"_index":228,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"13":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["seamlessli",{"_index":1404,"title":{},"name":{},"text":{"12":{},"14":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["search",{"_index":2159,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["second",{"_index":2119,"title":{},"name":{},"text":{"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["secret",{"_index":1851,"title":{},"name":{},"text":{"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["secret_api_key",{"_index":1777,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["section",{"_index":149,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"11":{},"12":{},"14":{},"17":{},"19":{}},"component":{},"keyword":{}}],["secur",{"_index":217,"title":{"14-19":{},"18-36":{},"19-18":{},"19-31":{},"19-34":{},"19-42":{}},"name":{},"text":{"2":{},"3":{},"6":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["securitycod",{"_index":1804,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["securitycontext",{"_index":2576,"title":{"19-28":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["securitycontext.getuserprincip",{"_index":2688,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["securityrequir",{"_index":1664,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["see",{"_index":63,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"11":{},"13":{},"14":{},"16":{},"19":{}},"component":{},"keyword":{}}],["seen",{"_index":486,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["segement",{"_index":2759,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["segment",{"_index":2501,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["segreg",{"_index":1432,"title":{},"name":{},"text":{"12":{},"17":{}},"component":{},"keyword":{}}],["select",{"_index":953,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"12":{}},"component":{},"keyword":{}}],["self",{"_index":2585,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["semant",{"_index":2484,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["semaphor",{"_index":2144,"title":{"17-48":{}},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["send",{"_index":1532,"title":{},"name":{},"text":{"12":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["senior",{"_index":136,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["sensit",{"_index":1696,"title":{"18-37":{}},"name":{},"text":{"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["sent",{"_index":1528,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["separ",{"_index":731,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["sequenc",{"_index":2511,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["seri",{"_index":2063,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["serial",{"_index":746,"title":{},"name":{},"text":{"3":{},"12":{},"20":{}},"component":{},"keyword":{}}],["serv",{"_index":25,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"14":{},"15":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["server",{"_index":29,"title":{},"name":{},"text":{"1":{},"4":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["server.xml",{"_index":1832,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["serverless",{"_index":1093,"title":{},"name":{},"text":{"6":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["servername>productserver</servernam",{"_index":1255,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["servic",{"_index":177,"title":{"7-1":{},"12-15":{},"12-16":{},"18-33":{},"19-24":{},"19-25":{},"20-23":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["service(",{"_index":2676,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["service,pay",{"_index":2665,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["service/mp",{"_index":2767,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["services(jakarta",{"_index":1407,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["service’",{"_index":2044,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["session",{"_index":332,"title":{},"name":{},"text":{"2":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["set",{"_index":406,"title":{"4-13":{},"11-13":{},"17-34":{},"19-19":{},"19-34":{},"20-4":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["set<str",{"_index":1784,"title":{},"name":{},"text":{"14":{},"19":{}},"component":{},"keyword":{}}],["setamount(doubl",{"_index":2205,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["setparameter(\"descript",{"_index":1456,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["setparameter(\"nam",{"_index":1455,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["setparameter(\"pric",{"_index":1457,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["setter",{"_index":1073,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["setup",{"_index":803,"title":{"4-3":{},"11-3":{},"19-21":{}},"name":{},"text":{"4":{},"5":{},"8":{},"11":{},"12":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["sever",{"_index":470,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"14":{},"18":{}},"component":{},"keyword":{}}],["sha256",{"_index":2597,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["share",{"_index":850,"title":{},"name":{},"text":{"4":{},"9":{},"11":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["shift",{"_index":467,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["shine",{"_index":2638,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["ship",{"_index":225,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{},"keyword":{}}],["shipment",{"_index":1330,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["shop",{"_index":187,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["shoppingcartresourc",{"_index":1324,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{},"keyword":{}}],["short",{"_index":2299,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["show",{"_index":1484,"title":{},"name":{},"text":{"12":{},"13":{},"16":{},"18":{}},"component":{},"keyword":{}}],["showcas",{"_index":1467,"title":{},"name":{},"text":{"12":{},"16":{}},"component":{},"keyword":{}}],["sibmr",{"_index":2625,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["side",{"_index":1930,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["sign",{"_index":2571,"title":{"19-13":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["sign/verifi",{"_index":2723,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["signal",{"_index":2043,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["signatur",{"_index":2579,"title":{"19-37":{}},"name":{},"text":{"19":{},"20":{}},"component":{},"keyword":{}}],["signific",{"_index":1466,"title":{},"name":{},"text":{"12":{},"15":{},"18":{}},"component":{},"keyword":{}}],["significantli",{"_index":941,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["similar",{"_index":15,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"11":{},"14":{}},"component":{},"keyword":{}}],["similarli",{"_index":2040,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["simpl",{"_index":521,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"7":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["simpler",{"_index":2853,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["simplest",{"_index":2469,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["simplic",{"_index":520,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["simplif",{"_index":1076,"title":{},"name":{},"text":{"5":{},"11":{},"12":{}},"component":{},"keyword":{}}],["simplifi",{"_index":419,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"8":{},"11":{},"12":{},"13":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["simul",{"_index":2199,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["simulated_delay_m",{"_index":2258,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["simulateddelay",{"_index":2345,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["simulatedelay",{"_index":2261,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["simulatepaymentprocess",{"_index":2361,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["singl",{"_index":647,"title":{"19-13":{}},"name":{},"text":{"3":{},"4":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["sit",{"_index":1398,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["site",{"_index":2,"title":{"1-2":{}},"name":{},"text":{"1":{},"4":{},"11":{}},"component":{},"keyword":{}}],["situat",{"_index":788,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["size",{"_index":1092,"title":{},"name":{},"text":{"6":{},"11":{},"16":{}},"component":{},"keyword":{}}],["skill",{"_index":341,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["sla",{"_index":2296,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["slow",{"_index":2166,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["slowli",{"_index":489,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["small",{"_index":675,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["smaller",{"_index":1354,"title":{},"name":{},"text":{"12":{},"17":{}},"component":{},"keyword":{}}],["smooth",{"_index":1352,"title":{},"name":{},"text":{"12":{},"14":{},"16":{}},"component":{},"keyword":{}}],["smoother",{"_index":2520,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["snapshot",{"_index":2089,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["snapshot</vers",{"_index":1042,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["snippet",{"_index":1544,"title":{},"name":{},"text":{"12":{},"14":{},"15":{}},"component":{},"keyword":{}}],["social",{"_index":2529,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["socket",{"_index":2744,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["softwar",{"_index":87,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"10":{},"11":{}},"component":{},"keyword":{}}],["solid",{"_index":301,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{},"keyword":{}}],["solut",{"_index":789,"title":{},"name":{},"text":{"3":{},"6":{},"11":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["solv",{"_index":567,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["someth",{"_index":1935,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["sometim",{"_index":1321,"title":{},"name":{},"text":{"9":{},"11":{},"14":{}},"component":{},"keyword":{}}],["sophist",{"_index":1571,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["sort",{"_index":2804,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sotsgruobpygoqcxuwfdn7moxprfde8",{"_index":2616,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["sourc",{"_index":7,"title":{"14-4":{},"14-5":{},"14-6":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["span",{"_index":2365,"title":{"18-4":{},"18-11":{},"18-12":{},"18-13":{},"18-26":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span\").startspan",{"_index":2433,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.end",{"_index":2422,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.recordexception(",{"_index":2421,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"credit.card.last4",{"_index":2532,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"custom.key",{"_index":2499,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"error",{"_index":2441,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"http.method",{"_index":2436,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"http.url",{"_index":2437,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"order.id",{"_index":2416,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"payment.amount",{"_index":2417,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"payment.method",{"_index":2503,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"payment.statu",{"_index":2418,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["span.setattribute(\"user.id",{"_index":2439,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["spanbuild",{"_index":2374,"title":{"18-26":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["spanbuilder(\"mi",{"_index":2434,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["spanid",{"_index":2406,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["spec",{"_index":2032,"title":{},"name":{},"text":{"15":{},"19":{}},"component":{},"keyword":{}}],["special",{"_index":1937,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["specif",{"_index":95,"title":{"3-5":{},"3-6":{},"3-7":{},"3-11":{},"6-3":{},"11-24":{},"12-4":{},"13-3":{},"13-5":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["specifi",{"_index":722,"title":{"14-10":{}},"name":{},"text":{"3":{},"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["specifications—such",{"_index":2851,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["speed",{"_index":288,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["spend",{"_index":286,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["spent",{"_index":2115,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["spike",{"_index":2557,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["split",{"_index":2673,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["spread",{"_index":2337,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["spring",{"_index":944,"title":{},"name":{},"text":{"4":{},"11":{},"19":{}},"component":{},"keyword":{}}],["src",{"_index":1011,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["src/main/java",{"_index":1019,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["src/main/liberty/config/server.xml",{"_index":1833,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["src/main/resources/meta",{"_index":1628,"title":{},"name":{},"text":{"13":{},"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["src/main/resources/microprofil",{"_index":2659,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["src/main/webapp/meta",{"_index":2764,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["src/test/java",{"_index":1020,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["ssl",{"_index":2745,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["ssl/tl",{"_index":2746,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["sso",{"_index":2572,"title":{"19-13":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["stabil",{"_index":929,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"20":{}},"component":{},"keyword":{}}],["stack",{"_index":2515,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["stage",{"_index":407,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{},"keyword":{}}],["stakehold",{"_index":1581,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["stanc",{"_index":431,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["stand",{"_index":2568,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["standalon",{"_index":397,"title":{"3-7":{}},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["standard",{"_index":502,"title":{"15-12":{},"19-6":{}},"name":{},"text":{"3":{},"5":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["start",{"_index":290,"title":{"4":{},"11":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["starter",{"_index":814,"title":{"4-20":{},"11-20":{}},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["startspan",{"_index":2435,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["startup",{"_index":958,"title":{"15-9":{}},"name":{},"text":{"4":{},"6":{},"11":{},"14":{},"15":{},"18":{}},"component":{},"keyword":{}}],["startupprob",{"_index":2029,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["state",{"_index":769,"title":{},"name":{},"text":{"3":{},"7":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["stateless",{"_index":2573,"title":{"19-15":{}},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["statement",{"_index":1955,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{},"keyword":{}}],["static",{"_index":1278,"title":{},"name":{},"text":{"8":{},"11":{},"13":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["statist",{"_index":2098,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["statu",{"_index":55,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["status",{"_index":1933,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["status(boolean",{"_index":1960,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["status(response.status.not_found",{"_index":1732,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["status(response.status.ok",{"_index":1730,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["status(response.status.service_unavail",{"_index":1726,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["status\\\":\\\"failur",{"_index":2290,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["status\\\":\\\"success",{"_index":1821,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["stay",{"_index":336,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{},"keyword":{}}],["step",{"_index":831,"title":{"8-3":{},"11-35":{},"15-17":{},"18-9":{},"18-10":{},"18-11":{},"18-12":{},"18-13":{}},"name":{},"text":{"4":{},"7":{},"8":{},"11":{},"14":{},"15":{},"18":{},"19":{}},"component":{},"keyword":{}}],["still",{"_index":1890,"title":{},"name":{},"text":{"14":{},"15":{},"20":{}},"component":{},"keyword":{}}],["stock",{"_index":254,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["stockout",{"_index":257,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["stop",{"_index":2025,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["storag",{"_index":202,"title":{},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"18":{},"19":{}},"component":{},"keyword":{}}],["store",{"_index":360,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["store.war",{"_index":1241,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["store/api/product",{"_index":1267,"title":{},"name":{},"text":{"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["store</artifactid",{"_index":1227,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["store</liberty.var.app.context.root",{"_index":1246,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["straightforward",{"_index":1365,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{},"keyword":{}}],["strateg",{"_index":703,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["strategi",{"_index":325,"title":{"14-18":{},"17-3":{},"17-23":{},"17-33":{},"17-40":{},"17-43":{},"18-41":{}},"name":{},"text":{"2":{},"14":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["stream",{"_index":548,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["streamlin",{"_index":493,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"14":{}},"component":{},"keyword":{}}],["strength",{"_index":701,"title":{},"name":{},"text":{"3":{},"18":{}},"component":{},"keyword":{}}],["stress",{"_index":1700,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["strict",{"_index":2528,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["string",{"_index":1162,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["string.class",{"_index":1845,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["stringent",{"_index":1094,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["strong",{"_index":669,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["strongli",{"_index":1410,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["structur",{"_index":972,"title":{"9-1":{},"19-4":{}},"name":{},"text":{"4":{},"5":{},"9":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["studi",{"_index":169,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["studio",{"_index":813,"title":{"4-12":{},"11-12":{}},"name":{},"text":{"4":{},"10":{},"11":{}},"component":{},"keyword":{}}],["style",{"_index":654,"title":{"17-48":{},"17-49":{}},"name":{},"text":{"3":{},"12":{},"17":{}},"component":{},"keyword":{}}],["sub",{"_index":2601,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["subject",{"_index":2628,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["submit",{"_index":1510,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["subnet",{"_index":2552,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["subscrib",{"_index":1863,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["subsequ",{"_index":408,"title":{},"name":{},"text":{"3":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["subset",{"_index":676,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["succe",{"_index":2170,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["success",{"_index":1542,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["successfulli",{"_index":852,"title":{},"name":{},"text":{"4":{},"8":{},"11":{},"12":{},"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["successthreshold",{"_index":2239,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["succinctli",{"_index":1807,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["such",{"_index":115,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["suffer",{"_index":2381,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["suffici",{"_index":2230,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["suggest",{"_index":1912,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["suit",{"_index":18,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["suitabl",{"_index":1391,"title":{},"name":{},"text":{"12":{},"18":{}},"component":{},"keyword":{}}],["summari",{"_index":1297,"title":{"12-29":{},"13-11":{},"14-20":{},"15-23":{},"16-15":{},"17-52":{}},"name":{},"text":{"8":{},"11":{},"13":{}},"component":{},"keyword":{}}],["super(messag",{"_index":2210,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["superclass",{"_index":2810,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["superior",{"_index":872,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["supplement",{"_index":697,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["suppli",{"_index":383,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["support",{"_index":513,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["surfac",{"_index":1101,"title":{},"name":{},"text":{"6":{},"11":{},"19":{}},"component":{},"keyword":{}}],["surround",{"_index":2564,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["swagger",{"_index":1572,"title":{"13-9":{}},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["switch",{"_index":1795,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["synchron",{"_index":2087,"title":{},"name":{},"text":{"16":{},"17":{}},"component":{},"keyword":{}}],["syntax",{"_index":1395,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["system",{"_index":552,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["system.err.println(\"databas",{"_index":1976,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["system.out.println(\"cal",{"_index":1820,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["system.out.println(\"cr",{"_index":1521,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["system.out.println(\"delet",{"_index":1561,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["system.out.println(\"fetch",{"_index":2321,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["system.out.println(\"pay",{"_index":2357,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["system.out.println(\"process",{"_index":1818,"title":{},"name":{},"text":{"14":{},"17":{},"18":{}},"component":{},"keyword":{}}],["system.out.println(\"upd",{"_index":1545,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["system.out.println(“process",{"_index":2504,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["systempropertyvari",{"_index":1258,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["system’",{"_index":2065,"title":{},"name":{},"text":{"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["tabl",{"_index":568,"title":{},"name":{},"text":{"3":{},"9":{},"11":{},"12":{},"13":{},"16":{}},"component":{},"keyword":{}}],["table(nam",{"_index":1417,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["tag",{"_index":1226,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"16":{},"18":{}},"component":{},"keyword":{}}],["tailor",{"_index":439,"title":{},"name":{},"text":{"3":{},"4":{},"9":{},"11":{},"12":{},"15":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["take",{"_index":1374,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["takeaway",{"_index":2733,"title":{"20-26":{}},"name":{},"text":{},"component":{},"keyword":{}}],["tamper",{"_index":1889,"title":{},"name":{},"text":{"14":{},"19":{}},"component":{},"keyword":{}}],["target",{"_index":696,"title":{},"name":{},"text":{"3":{},"5":{},"11":{},"19":{},"20":{}},"component":{},"keyword":{}}],["task",{"_index":615,"title":{},"name":{},"text":{"3":{},"12":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["tasks.thes",{"_index":1928,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["team",{"_index":1698,"title":{},"name":{},"text":{"14":{},"18":{}},"component":{},"keyword":{}}],["teardown",{"_index":1287,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["technic",{"_index":1583,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["techniqu",{"_index":316,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["technolog",{"_index":416,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"16":{}},"component":{},"keyword":{}}],["telemetri",{"_index":590,"title":{"18":{},"18-2":{},"18-8":{},"18-9":{},"18-22":{}},"name":{},"text":{"3":{},"6":{},"11":{},"18":{}},"component":{},"keyword":{}}],["tell",{"_index":1205,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["templat",{"_index":973,"title":{},"name":{},"text":{"4":{},"5":{},"11":{}},"component":{},"keyword":{}}],["tempo",{"_index":2372,"title":{"18-18":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["temporari",{"_index":2161,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["temporarili",{"_index":774,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["tempo’",{"_index":2459,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tenant",{"_index":2636,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["tenant_id",{"_index":2679,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["term",{"_index":352,"title":{},"name":{},"text":{"2":{},"13":{},"16":{}},"component":{},"keyword":{}}],["termin",{"_index":838,"title":{"5-3":{},"11-22":{}},"name":{},"text":{"4":{},"5":{},"7":{},"8":{},"11":{},"17":{}},"component":{},"keyword":{}}],["test",{"_index":153,"title":{"8-1":{},"8-2":{},"11-34":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"17":{}},"component":{},"keyword":{}}],["test.database.url",{"_index":1839,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["testabl",{"_index":760,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["testgetproduct",{"_index":1288,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{},"keyword":{}}],["text",{"_index":354,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{},"keyword":{}}],["text/html",{"_index":1498,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["text/plain",{"_index":1495,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["text/xml",{"_index":1491,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["thank",{"_index":2855,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["themselv",{"_index":2101,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["thenrun",{"_index":2358,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["therebi",{"_index":258,"title":{},"name":{},"text":{"2":{},"3":{},"13":{}},"component":{},"keyword":{}}],["therefor",{"_index":2153,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{},"keyword":{}}],["there’",{"_index":540,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["third",{"_index":1585,"title":{},"name":{},"text":{"13":{},"14":{},"18":{}},"component":{},"keyword":{}}],["this.amount",{"_index":2206,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["this.nam",{"_index":1957,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["thorough",{"_index":2140,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["thoroughli",{"_index":152,"title":{},"name":{},"text":{"2":{},"14":{},"16":{}},"component":{},"keyword":{}}],["those",{"_index":800,"title":{},"name":{},"text":{"3":{},"5":{},"6":{},"11":{},"12":{},"14":{},"17":{}},"component":{},"keyword":{}}],["thread",{"_index":611,"title":{"17-49":{}},"name":{},"text":{"3":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["thread.currentthread().interrupt",{"_index":2265,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["thread.sleep(1000",{"_index":2359,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["thread.sleep(2000",{"_index":2291,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["thread.sleep(simulated_delay_m",{"_index":2263,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["thread.sleep(simulateddelay",{"_index":2351,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["three",{"_index":1911,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["threshold",{"_index":1993,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["through",{"_index":312,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["throughout",{"_index":1429,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["throughput",{"_index":2059,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["throw",{"_index":2196,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{},"keyword":{}}],["throwabl",{"_index":2801,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["thrown",{"_index":2182,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{},"keyword":{}}],["thu",{"_index":1743,"title":{},"name":{},"text":{"14":{},"15":{}},"component":{},"keyword":{}}],["thunder",{"_index":2215,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["tight",{"_index":2229,"title":{},"name":{},"text":{"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["tightli",{"_index":2226,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["time",{"_index":246,"title":{"16-12":{},"19-34":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["timed(nam",{"_index":2111,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["timelin",{"_index":2447,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["timeout",{"_index":574,"title":{"17-5":{},"17-31":{},"17-34":{},"17-35":{},"17-36":{},"17-41":{}},"name":{},"text":{"3":{},"6":{},"11":{},"17":{},"20":{}},"component":{},"keyword":{}}],["timeout(1000",{"_index":2293,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeout(2000",{"_index":2319,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeout(timeout_m",{"_index":2284,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeout(valu",{"_index":2330,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeout_m",{"_index":2280,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeoutexcept",{"_index":2294,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timeoutsecond",{"_index":2037,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["timeoutvalu",{"_index":2329,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["timer",{"_index":2074,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["timeunit.second",{"_index":2837,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["tip",{"_index":2522,"title":{},"name":{},"text":{"18":{},"20":{}},"component":{},"keyword":{}}],["titl",{"_index":379,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{},"keyword":{}}],["tknd09xyjorj_chagopj",{"_index":2614,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["tl",{"_index":2535,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["todo",{"_index":279,"title":{},"name":{},"text":{"2":{},"9":{},"11":{}},"component":{},"keyword":{}}],["togeth",{"_index":272,"title":{},"name":{},"text":{"2":{},"12":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["token",{"_index":218,"title":{"19-3":{},"19-8":{},"19-26":{},"19-27":{},"19-34":{},"19-35":{},"19-37":{},"19-38":{},"19-39":{}},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["tokens(jwt",{"_index":579,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["token’",{"_index":2608,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["toler",{"_index":121,"title":{"17":{},"17-2":{},"17-3":{},"17-10":{},"17-11":{},"17-12":{},"17-33":{},"17-40":{},"17-43":{},"17-44":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"11":{},"12":{},"17":{},"19":{},"20":{}},"component":{},"keyword":{}}],["tolerance</groupid",{"_index":1117,"title":{},"name":{},"text":{"6":{},"11":{},"17":{}},"component":{},"keyword":{}}],["tomcat",{"_index":969,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["tome",{"_index":630,"title":{"4-19":{},"11-19":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{}},"component":{},"keyword":{}}],["tomitrib",{"_index":458,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["took",{"_index":2398,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tool",{"_index":24,"title":{"4-5":{},"11-5":{},"18-14":{}},"name":{},"text":{"1":{},"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["top",{"_index":618,"title":{},"name":{},"text":{"3":{},"12":{}},"component":{},"keyword":{}}],["topic",{"_index":292,"title":{"3-2":{},"4-2":{},"11-2":{},"12-2":{},"13-2":{},"14-1":{},"15-2":{},"16-2":{},"17-1":{},"18-1":{},"19-1":{},"20-1":{}},"name":{},"text":{"2":{},"15":{},"18":{}},"component":{},"keyword":{}}],["total",{"_index":205,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["tothrowable(respons",{"_index":2809,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["touch",{"_index":2051,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["toward",{"_index":468,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["trace",{"_index":324,"title":{"18-3":{},"18-5":{},"18-14":{},"18-19":{},"18-20":{},"18-27":{},"18-29":{},"18-30":{},"18-34":{},"18-35":{},"18-36":{},"18-38":{},"18-39":{},"18-43":{},"18-44":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"11":{},"14":{},"18":{}},"component":{},"keyword":{}}],["traceabl",{"_index":2431,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["traceid",{"_index":2405,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tracer",{"_index":2367,"title":{"18-10":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tracer.spanbuild",{"_index":2505,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tracer.spanbuilder(\"custom",{"_index":2498,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tracer.spanbuilder(\"mi",{"_index":2432,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tracer.spanbuilder(\"payment.process\").startspan",{"_index":2415,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["traceresourc",{"_index":2495,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["track",{"_index":244,"title":{"16-12":{},"16-13":{}},"name":{},"text":{"2":{},"3":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["trademark",{"_index":103,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["tradit",{"_index":485,"title":{},"name":{},"text":{"3":{},"4":{},"11":{}},"component":{},"keyword":{}}],["traffic",{"_index":1903,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["transact",{"_index":234,"title":{},"name":{},"text":{"2":{},"3":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["transfer",{"_index":1148,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"11":{},"12":{},"20":{}},"component":{},"keyword":{}}],["transform",{"_index":741,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["transient",{"_index":2156,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["transit",{"_index":229,"title":{},"name":{},"text":{"2":{},"3":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["transmiss",{"_index":2534,"title":{},"name":{},"text":{"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["transmit",{"_index":1505,"title":{},"name":{},"text":{"12":{},"18":{},"19":{}},"component":{},"keyword":{}}],["transpar",{"_index":1471,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["travel",{"_index":2403,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["travers",{"_index":2392,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["tree",{"_index":1387,"title":{},"name":{},"text":{"12":{},"18":{}},"component":{},"keyword":{}}],["trend",{"_index":338,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{},"keyword":{}}],["tri",{"_index":1728,"title":{},"name":{},"text":{"14":{},"15":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["trigger",{"_index":1857,"title":{},"name":{},"text":{"14":{},"17":{}},"component":{},"keyword":{}}],["trivial",{"_index":2048,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["troubleshoot",{"_index":1944,"title":{},"name":{},"text":{"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["true",{"_index":1646,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"16":{},"18":{},"20":{}},"component":{},"keyword":{}}],["trust",{"_index":2396,"title":{},"name":{},"text":{"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["tune",{"_index":2066,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["tutori",{"_index":12,"title":{"2":{},"2-3":{},"2-4":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"11":{},"12":{},"14":{},"20":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"keyword":{}}],["two",{"_index":564,"title":{},"name":{},"text":{"3":{},"8":{},"11":{},"13":{},"16":{},"17":{},"19":{}},"component":{},"keyword":{}}],["typ",{"_index":2598,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["type",{"_index":350,"title":{"14-6":{},"14-11":{},"15-6":{},"16-5":{},"16-10":{},"17-47":{},"18-22":{},"19-5":{}},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["type>pom</typ",{"_index":1063,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["typic",{"_index":642,"title":{},"name":{},"text":{"3":{},"5":{},"9":{},"11":{},"12":{},"14":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["uber",{"_index":2446,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["ui",{"_index":1573,"title":{"13-9":{}},"name":{},"text":{"13":{},"18":{}},"component":{},"keyword":{}}],["ui7ah6cwafs3zwwfkdfuuswhsk",{"_index":2612,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["umbrella",{"_index":399,"title":{"3-7":{}},"name":{},"text":{},"component":{},"keyword":{}}],["unaffect",{"_index":2167,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["unauthor",{"_index":1791,"title":{},"name":{},"text":{"14":{},"18":{},"19":{}},"component":{},"keyword":{}}],["unavail",{"_index":1725,"title":{},"name":{},"text":{"14":{},"17":{},"20":{}},"component":{},"keyword":{}}],["unavailable.\\\"}\").build",{"_index":2308,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["unbound",{"_index":2227,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["uncheck",{"_index":2811,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["uncov",{"_index":2455,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["under",{"_index":73,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"11":{},"14":{},"16":{},"17":{}},"component":{},"keyword":{}}],["undergo",{"_index":1742,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["underli",{"_index":585,"title":{},"name":{},"text":{"3":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["underscor",{"_index":1409,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["understand",{"_index":297,"title":{"12-3":{},"14-2":{},"17-18":{},"18-33":{}},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["unexpect",{"_index":2154,"title":{},"name":{},"text":{"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["unhealthi",{"_index":1905,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["unifi",{"_index":591,"title":{},"name":{},"text":{"3":{},"12":{},"13":{},"18":{}},"component":{},"keyword":{}}],["uniform",{"_index":1150,"title":{},"name":{},"text":{"7":{},"11":{},"13":{}},"component":{},"keyword":{}}],["uniqu",{"_index":663,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"11":{},"12":{},"14":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["unit",{"_index":1004,"title":{"8-2":{},"11-34":{}},"name":{},"text":{"5":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"18":{}},"component":{},"keyword":{}}],["univers",{"_index":2099,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["unix",{"_index":900,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["unknown",{"_index":2558,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["unless",{"_index":81,"title":{},"name":{},"text":{"2":{},"14":{},"19":{}},"component":{},"keyword":{}}],["unlik",{"_index":2149,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["unnecessari",{"_index":639,"title":{},"name":{},"text":{"3":{},"17":{}},"component":{},"keyword":{}}],["unrespons",{"_index":1916,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{},"keyword":{}}],["unstructur",{"_index":1497,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["unsuccess",{"_index":1623,"title":{},"name":{},"text":{"13":{},"17":{}},"component":{},"keyword":{}}],["unsur",{"_index":1084,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["until",{"_index":1924,"title":{},"name":{},"text":{"15":{},"18":{}},"component":{},"keyword":{}}],["unus",{"_index":1098,"title":{},"name":{},"text":{"6":{},"11":{},"14":{}},"component":{},"keyword":{}}],["unusu",{"_index":2556,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["unzip",{"_index":989,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["up",{"_index":199,"title":{"4-13":{},"11-13":{},"19-19":{},"20-4":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["up/down",{"_index":2011,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{},"keyword":{}}],["upcom",{"_index":1568,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["updat",{"_index":154,"title":{"12-26":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["updated\").build",{"_index":1550,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["updatedproduct",{"_index":1546,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["updateproduct",{"_index":1461,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["updateproduct(product",{"_index":1443,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["upload",{"_index":1514,"title":{},"name":{},"text":{"12":{}},"component":{},"keyword":{}}],["upon",{"_index":1541,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"16":{}},"component":{},"keyword":{}}],["upstream",{"_index":2165,"title":{},"name":{},"text":{"17":{},"18":{}},"component":{},"keyword":{}}],["uri",{"_index":1479,"title":{},"name":{},"text":{"12":{},"14":{},"20":{}},"component":{},"keyword":{}}],["uri.cr",{"_index":2844,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["uri.create(\"http://localhost:8080/api",{"_index":2832,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["url",{"_index":368,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["urlencod",{"_index":1508,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["us",{"_index":9,"title":{"5-2":{},"5-3":{},"6-2":{},"6-3":{},"11-21":{},"11-22":{},"11-23":{},"11-24":{},"13-7":{},"13-9":{},"16-12":{},"16-13":{},"17-28":{},"17-29":{},"17-32":{},"17-35":{},"17-38":{},"17-39":{},"17-41":{},"17-46":{},"18-25":{},"18-26":{},"19-8":{},"19-14":{},"20-11":{},"20-12":{},"20-13":{},"20-14":{},"20-15":{},"20-16":{},"20-21":{},"20-22":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["usabl",{"_index":1674,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["usag",{"_index":1097,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{}},"component":{},"keyword":{}}],["usedmemori",{"_index":1991,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["user",{"_index":19,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"9":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["user1",{"_index":2602,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["user123",{"_index":2691,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["user_id",{"_index":2644,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["userid",{"_index":2684,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["users/{id",{"_index":2736,"title":{},"name":{},"text":{"20":{}},"component":{},"keyword":{}}],["user’",{"_index":389,"title":{},"name":{},"text":{"2":{},"19":{}},"component":{},"keyword":{}}],["usr/lib/jvm/msopenjdk",{"_index":886,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["usr/local/sdkman/candidates/maven/curr",{"_index":885,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["usual",{"_index":281,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{}},"component":{},"keyword":{}}],["utc",{"_index":912,"title":{},"name":{},"text":{"4":{},"11":{},"19":{}},"component":{},"keyword":{}}],["utf",{"_index":890,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["util",{"_index":142,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{}},"component":{},"keyword":{}}],["v",{"_index":881,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["v1",{"_index":2031,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["v3",{"_index":1594,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["valid",{"_index":1078,"title":{"19-20":{},"19-27":{},"19-38":{}},"name":{},"text":{"5":{},"11":{},"12":{},"14":{},"19":{},"20":{}},"component":{},"keyword":{}}],["valu",{"_index":385,"title":{"14-10":{}},"name":{},"text":{"2":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["valuabl",{"_index":1472,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"17":{},"18":{}},"component":{},"keyword":{}}],["vari",{"_index":680,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"14":{},"16":{}},"component":{},"keyword":{}}],["variabl",{"_index":382,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["variat",{"_index":2214,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["varieti",{"_index":1082,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{}},"component":{},"keyword":{}}],["variou",{"_index":483,"title":{"14-4":{}},"name":{},"text":{"3":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["vault",{"_index":1880,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["vendor",{"_index":429,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["verbos",{"_index":1690,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["veri",{"_index":1144,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["verif",{"_index":2674,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["verifi",{"_index":836,"title":{"12-25":{},"12-27":{},"18-20":{}},"name":{},"text":{"4":{},"8":{},"11":{},"12":{},"15":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["versa",{"_index":745,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["versatil",{"_index":702,"title":{},"name":{},"text":{"3":{},"19":{}},"component":{},"keyword":{}}],["version",{"_index":53,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"11":{},"13":{},"14":{},"16":{},"17":{}},"component":{},"keyword":{}}],["version=\"1.0",{"_index":1028,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["version>1.0",{"_index":1041,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["version>1.18.26</vers",{"_index":1053,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["version>1.1</vers",{"_index":2409,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["version>1.29.0</vers",{"_index":1134,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["version>10.0.0</vers",{"_index":1058,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["version>2.1</vers",{"_index":1121,"title":{},"name":{},"text":{"6":{},"11":{},"19":{}},"component":{},"keyword":{}}],["version>3.0.0</vers",{"_index":1257,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["version>3.0</vers",{"_index":1127,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["version>3.1.1</vers",{"_index":1124,"title":{},"name":{},"text":{"6":{},"11":{},"13":{}},"component":{},"keyword":{}}],["version>3.1</vers",{"_index":1108,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["version>3.3.2</vers",{"_index":1251,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["version>3.8.2</vers",{"_index":1254,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["version>4.0.1</vers",{"_index":1111,"title":{},"name":{},"text":{"6":{},"11":{},"15":{}},"component":{},"keyword":{}}],["version>4.0.2</vers",{"_index":1118,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["version>4.1.1</vers",{"_index":2175,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["version>5.1.0</vers",{"_index":1113,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["version>5.1.1</vers",{"_index":2091,"title":{},"name":{},"text":{"16":{}},"component":{},"keyword":{}}],["version>5.8.2</vers",{"_index":1068,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["version>6.1</vers",{"_index":1062,"title":{},"name":{},"text":{"5":{},"6":{},"11":{}},"component":{},"keyword":{}}],["via",{"_index":626,"title":{"19-28":{},"20-9":{}},"name":{},"text":{"3":{},"5":{},"7":{},"11":{},"12":{},"14":{},"15":{},"16":{},"19":{},"20":{}},"component":{},"keyword":{}}],["vice",{"_index":744,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["view",{"_index":40,"title":{"13-8":{}},"name":{},"text":{"1":{},"13":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["viewer",{"_index":2523,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["virtual",{"_index":828,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"14":{},"16":{}},"component":{},"keyword":{}}],["visibl",{"_index":2385,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["visit",{"_index":832,"title":{},"name":{},"text":{"4":{},"11":{},"12":{},"13":{},"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["visual",{"_index":812,"title":{"4-12":{},"11-12":{},"18-30":{}},"name":{},"text":{"4":{},"10":{},"11":{},"13":{},"15":{},"16":{},"18":{}},"component":{},"keyword":{}}],["vital",{"_index":189,"title":{},"name":{},"text":{"2":{},"18":{}},"component":{},"keyword":{}}],["vm",{"_index":847,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["void",{"_index":1285,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"17":{},"18":{}},"component":{},"keyword":{}}],["volum",{"_index":656,"title":{},"name":{},"text":{"3":{},"12":{},"18":{}},"component":{},"keyword":{}}],["vpn",{"_index":2554,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["vs",{"_index":952,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["vulner",{"_index":1103,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{},"keyword":{}}],["wait",{"_index":786,"title":{},"name":{},"text":{"3":{},"15":{},"17":{}},"component":{},"keyword":{}}],["waitingtaskqueu",{"_index":2354,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["want",{"_index":982,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"13":{},"16":{}},"component":{},"keyword":{}}],["war",{"_index":1002,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{},"keyword":{}}],["war.name>${liberty.var.app.context.root}</war.nam",{"_index":1260,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["warranti",{"_index":90,"title":{},"name":{},"text":{"2":{}},"component":{},"keyword":{}}],["way",{"_index":610,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{}},"component":{},"keyword":{}}],["web",{"_index":298,"title":{"4-9":{},"7-1":{},"11-9":{},"12-15":{},"12-16":{},"19-3":{},"19-8":{}},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["webappl",{"_index":1239,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{},"keyword":{}}],["webhook",{"_index":1869,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["webservic",{"_index":1149,"title":{},"name":{},"text":{"7":{},"11":{},"13":{}},"component":{},"keyword":{}}],["websit",{"_index":835,"title":{},"name":{},"text":{"4":{},"8":{},"11":{}},"component":{},"keyword":{}}],["welcom",{"_index":903,"title":{},"name":{},"text":{"4":{},"11":{},"19":{}},"component":{},"keyword":{}}],["well",{"_index":479,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"11":{},"12":{},"13":{},"15":{},"18":{}},"component":{},"keyword":{}}],["we’ll",{"_index":1711,"title":{},"name":{},"text":{"14":{}},"component":{},"keyword":{}}],["we’r",{"_index":1753,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{},"keyword":{}}],["wheel",{"_index":530,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["whenev",{"_index":2491,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["wherea",{"_index":1879,"title":{},"name":{},"text":{"14":{},"19":{}},"component":{},"keyword":{}}],["whether",{"_index":674,"title":{},"name":{},"text":{"3":{},"4":{},"11":{},"13":{},"14":{},"15":{},"16":{},"20":{}},"component":{},"keyword":{}}],["wide",{"_index":670,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"11":{},"12":{},"13":{},"16":{},"18":{},"19":{}},"component":{},"keyword":{}}],["widespread",{"_index":2151,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["wildfli",{"_index":634,"title":{"4-17":{},"11-17":{}},"name":{},"text":{"3":{},"4":{},"7":{},"11":{},"13":{},"15":{}},"component":{},"keyword":{}}],["window",{"_index":2236,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["withdata(\"allocatedmemori",{"_index":2002,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(\"availablememori",{"_index":2004,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(\"freememori",{"_index":2000,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(\"maxmemori",{"_index":2001,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(\"usedmemori",{"_index":2003,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(key",{"_index":2009,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["withdata(str",{"_index":1958,"title":{},"name":{},"text":{"15":{}},"component":{},"keyword":{}}],["within",{"_index":366,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["without",{"_index":89,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"11":{},"12":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["withspan",{"_index":2373,"title":{"18-25":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["withstand",{"_index":682,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["work",{"_index":67,"title":{"14-4":{},"19-33":{}},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{},"keyword":{}}],["workflow",{"_index":2270,"title":{},"name":{},"text":{"17":{},"18":{},"20":{}},"component":{},"keyword":{}}],["workspac",{"_index":827,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["world",{"_index":144,"title":{},"name":{},"text":{"2":{},"3":{},"17":{}},"component":{},"keyword":{}}],["worsen",{"_index":2219,"title":{},"name":{},"text":{"17":{}},"component":{},"keyword":{}}],["wrapper",{"_index":875,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["write",{"_index":86,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"10":{},"11":{},"14":{},"20":{}},"component":{},"keyword":{}}],["written",{"_index":282,"title":{},"name":{},"text":{"2":{},"20":{}},"component":{},"keyword":{}}],["www",{"_index":1507,"title":{},"name":{},"text":{"12":{},"19":{},"20":{}},"component":{},"keyword":{}}],["x",{"_index":1538,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{},"keyword":{}}],["xml",{"_index":1027,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{}},"component":{},"keyword":{}}],["xmlns:xsi=\"http://www.w3.org/2001/xmlschema",{"_index":1034,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["xmlns=\"http://maven.apache.org/pom/4.0.0",{"_index":1033,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["xsi:schemalocation=\"http://maven.apache.org/pom/4.0.0",{"_index":1030,"title":{},"name":{},"text":{"5":{},"11":{}},"component":{},"keyword":{}}],["yaml",{"_index":1601,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["ycitxoqvpzjbl7wbub7aohdbozodz24wln1lvieh8v1k4krb8xgkvru8kgfren_a",{"_index":2619,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["year",{"_index":427,"title":{},"name":{},"text":{"3":{}},"component":{},"keyword":{}}],["yfia",{"_index":2626,"title":{},"name":{},"text":{"19":{}},"component":{},"keyword":{}}],["you’ll",{"_index":817,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}],["you’r",{"_index":284,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"16":{}},"component":{},"keyword":{}}],["zipkin",{"_index":2370,"title":{"18-17":{}},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["zipkin’",{"_index":2452,"title":{},"name":{},"text":{"18":{}},"component":{},"keyword":{}}],["zulu",{"_index":859,"title":{},"name":{},"text":{"4":{},"11":{}},"component":{},"keyword":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"This repo contains the source files that are used to build the MicroProfile Tutorial. The source files are authored in AsciiDoc. AsciiDoc is similar to markdown but is particularly suited for user documentation. The source files are processed and integrated into the MicroProfile Tutorial site using Antora, which is a tool for building documentation sites. After building the site, you can serve it locally using Python’s built-in HTTP server: cd build/site python3 -m http.server 8080 Then open your browser and navigate to http://localhost:8080 to view the site.","title":"README","component":"microprofile-tutorial","version":"6.1","name":"README","url":"/microprofile-tutorial/6.1/README.html","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Running the Site Locally","hash":"running-the-site-locally","id":2}]},"2":{"id":2,"text":"MicroProfile API Tutorial Version: 6.1 Status: Draft Copyright (c) 2024 Contributors to the Eclipse Foundation See the NOTICE file(s) distributed with this work for additional information regarding copyright ownership. Licensed under the Apache License, Version 2.0 (the \"License\"); You may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners. In this tutorial, you will learn how to use the features of the MicroProfile Platform by building a microservices-based e-commerce application named \"MicroProfile e-Commerce\". The tutorial will cover using MicroProfile APIs such as Config, REST Client, JWT, Fault Tolerance, and Metrics to build efficient, scalable, and resilient microservices for cloud-native applications. We aim to provide a comprehensive overview and hands-on knowledge about using MicroProfile APIs. This tutorial caters to software professionals, from beginners to senior developers, engineering managers, and architects, to adeptly utilize MicroProfile in real-world projects. First, an overview of the MicroProfile project is presented, followed by detailed sections on each specification, complete with thoroughly tested and updated code samples. In this tutorial, you will learn to build a microservices-based e-commerce application called \"MicroProfile e-Commerce\". The app will demonstrate the use of MicroProfile APIs for developing an application based on microservices and cloud-native architecture. It would include multiple microservices, each serving a different purpose and highlighting different aspects of MicroProfile. Java developers can use this adaptation as a practical case study to implement MicroProfile APIs in real-world applications. The MicroProfile e-Commerce application compirses of multiple microservices, among the key ones are as below: Product Catalog: This service acts as the central repository for all product-related information, including detailed descriptions, pricing, and inventory levels. It provides APIs for fetching product details efficiently for the other microservices, such as the Shopping Cart. This microservice is vital for updating product data, ensuring data consistency and accuracy across the e-Commerce platform. The Shopping Cart: This service allows users to add or remove products from their shopping cart. It communicates with the Product Catalog Microservice to access up-to-date product information. It handles the storage and management of cart items for each user, including the calculation of cart totals with applicable discounts or promotions. This microservice plays interfaces with the Checkout microservice to initiate the order processing. User Management: This service is responsible for user account management, handles registration, login, and account updates securely using JWT tokens. It is essential for personalizing the user experience and safeguarding user information. Order Processing: This service manages the entire order process, from collecting shipping information and confirming order details to initiating payment processing. This microservice ensures a seamless transition from shopping to order completion. Payment: Dedicated to processing payments, this microservice interacts with external payment gateways to securely handle transactions. It receives payment instructions from the Checkout microservice, executes the payment process, and confirms transaction outcomes. This microservice is crucial for ensuring financial transactions are conducted securely and efficiently, maintaining the integrity of the payment process. Inventory: This service is dedicated to monitoring and managing inventory levels. It tracks product availability, updates inventory in real-time as sales occu, and provides restocking alerts. By integrating with the Product Catalog and Checkout microservices, it ensures that product availability is accurately reflected on the platform and that orders are only placed for in-stock items. This microservice is crucial for maintaining optimal inventory levels and preventing stockouts, thereby enhancing the customer shopping experience. Shipping: This microservice is responsible for managing the logistics of order delivery. It receives order details and shipping information from the Order Processing Microservice, ensuring that orders are shipped to customers in a timely and efficient manner. The Shipping Microservice plays a critical role in the post-purchase customer experience, managing expectations and communication regarding order delivery. Figure 1. MicroProfile e-Commerce Application As you can see in the above figure, together these microservices form a robust and flexible e-Commerce application architecture, enabling scalable, efficient, and secure online shopping experiences. The code examples in this tutorial are available at this repo (TODO: to be changed). MicroProfile use the Java Platform, and are usually written in the Java programming language. All the examples in this tutorial are written in Java. If you’re new to Java, spend some time getting up to speed on the language and platform; a good place to start is dev.java/learn. Each topic in this tutorial provides some background information, but in general, we assume you have a basic understanding of RESTful Web Services. Understanding MicroProfile and Its Ecosystem: Gain a solid understanding of what MicroProfile is and its role in modern cloud-native application development. Learn about the evolution of MicroProfile and its relationship with Jakarta EE. Understand how MicroProfile facilitates building microservices. Hands-On Experience with Key MicroProfile APIs: Learn to implement Config, Health, Metrics, JWT Authentication, Fault Tolerance, Rest Client, and other MicroProfile APIs. Understand how to apply these APIs in practical scenarios through the Duke’s Forest application case study. Building Resilient and Scalable Services: Master techniques for developing resilient services using fault tolerance and health checks. Securing Microservices: Learn the intricacies of securing microservices using MicroProfile JWT and Security API. Effective Data Management in Microservices: Understand the role of JPA and JSON-B in MicroProfile for handling data operations in microservices. Monitoring and Tracing: Implement monitoring strategies using MicroProfile Metrics. Learn to trace microservice interactions with OpenTracing for enhanced observability. Collaborative Learning and Community Engagement: Participate in Q&A sessions, forums, and interactive discussions. Engage with the MicroProfile community for continuous learning and staying updated with the latest trends. By the end of this tutorial readers will gain the knowledge and skills necessary to design, develop, and deploy robust microservices using MicroProfile, preparing them for advanced roles in software development and architecture in cloud-native environments. Convention Meaning Example Boldface Boldface type indicates a term defined in text or graphical user interface elements associated with an action. A cache is a copy stored locally. From the File menu, choose Open Project. Monospace Monospace type indicates the names of files and directories, commands within a paragraph, URLs, code in examples, text that appears on the screen, or text that you enter. Edit your .login file. Use ls -a to list all files. machine_name% you have mail. Italic Italic type indicates book titles, emphasis, or placeholder variables for which you supply particular values. Read Chapter 6 in the User’s Guide. Do not save the file. The command to remove a file is rm filename.","title":"MicroProfile API Tutorial","component":"microprofile-tutorial","version":"6.1","name":"index","url":"/microprofile-tutorial/6.1/index.html","titles":[{"text":"Legal","hash":"legal","id":1},{"text":"Preface","hash":"preface","id":2},{"text":"About this Tutorial","hash":"about-this-tutorial","id":3},{"text":"Who is this Tutorial for","hash":"who-is-this-tutorial-for","id":4},{"text":"What will be Covered","hash":"what-will-be-covered","id":5},{"text":"Project","hash":"project","id":6},{"text":"Downloading the Code","hash":"downloading-the-code","id":7},{"text":"Prerequisites","hash":"prerequisites","id":8},{"text":"Learning Objectives","hash":"learning-objectives","id":9},{"text":"Conventions","hash":"conventions","id":10}]},"3":{"id":3,"text":"This introductory chapter provides a comprehensive overview of the MicroProfile platform, setting the stage for subsequent chapters in this tutorial. It aims to familiarize you with the fundamentals of the MicroProfile platform, its need, and benefits. Finally, we will discuss its place in the broader context of enterprise Java development. What is MicroProfile Need for MicroProfile MicroProfile Specifications Current MicroProfile Implementations Architecture Philosophy Benefits of MicroProfile Relationship with Jakarta EE specification MicroProfile is an open-source specification that enhances enterprise Java technologies for microservices development. It provides a set of APIs and specifications for building modern, scalable, resilient, and efficient microservices-based applications. The primary goal of MicroProfile is to simplify the development for Java developers, enabling them to create applications optimized for cloud-native-development. MicroProfile was initiated in June 2016 by a collaboration of industry leaders, Java community members, and individual contributors. In the following year, the project was transitioned to the Eclipse Foundation to enhance the project’s openness and vendor-neutral stance. Now, MicroProfile has become a key framework for extending Java in the cloud-computing domain, offering a comprehensive suite of APIs tailored for developing microservices in a cloud-native ecosystem. The MicroProfile Working Group currently comprises of the following members: Committer Representative (Year 2024) Emerson Castañeda Java user groups Atlanta Java User Group (AJUG) Association of the German Java User Groups (iJUG) Corporate Members IBM Fujitsu Red Hat Primeton Payara Microsoft Tomitribe Oracle This collective effort demonstrates MicroProfile’s commitment to evolving Java enterprise development for the modern cloud environment, leveraging the expertise of its community. The MicroProfile Specification was developed to address the following requirements: Microservices Architecture Adoption: The industry shift towards microservices architecture has brought several advantages, including improved flexibility, scalability, and speed of deployment. However, it also introduced several new challenges for developers due to the added complexities. These include ensuring seamless integration between microservices, securing each microservice individually as well as interactions between them, managing performance and efficiency, designing microservices to be fault-tolerant and resilient to failures, ensuring data consistency across services, managing configurations across multiple environments and managing various independently deployable components. To address these challenges, MicroProfile provides a simplified and optimized set of APIs designed to build and deploy Java-based microservices applications. Limitations of Traditional Enterprise Java: Traditional enterprise Java frameworks, like Java EE (now Jakarta EE), were often seen as too monolithic and heavyweight for microservices while evolving too slowly. It led to a demand for a more streamlined and microservices-focused framework. MicroProfile fills this gap by providing a lightweight alternative optimized for microservices development. Cloud-Native Application Development: The rise of cloud-native applications necessitated new features such as external configuration, health checks, and fault tolerance, which existing Java standards did not adequately address. MicroProfile bridges these gaps left, making it easier for developers to create resilient, scalable, and manageable microservices for cloud-native application development using Java. Community-Driven Innovation: The rapid pace of technological change in microservices necessitated a collaborative platform for innovation. MicroProfile, backed by community and vendor support, promotes rapid evolution to meet these demands. Vendor Neutrality and Interoperability: There was a need for a framework that could provide standardization across different implementations and environments, ensuring compatibility and avoiding vendor lock-in. Focus on Simplicity and Productivity: Developers needed a simple, easy-to-understand framework that increased productivity by reducing boilerplate code and focusing on essential microservice functionalities. Well-defined standards and patterns eliminate the need to reinvent the wheel, allowing developers to focus on microservices logic. Support for familiar programming model: MicroProfile was founded with support for Jakarta JSON Processing, Jakarta JSON Binding, Jakarta RESTful Web Services, and Jakarta Contexts and Dependency Injection (CDI) to define the core programming model and accelerate adoption. Lightweight and Resilient Services: With the microservices architecture, there’s a need for frameworks that support the development of lightweight, resilient, and independently deployable services, which are essential for microservices. Rapid Adaptation to New Trends: The technology landscape, especially around microservices, is constantly evolving. A framework like MicroProfile, which is community-driven and rapidly evolving, can adapt quickly to these changes, continually incorporating new practices and technologies, including: Streaming APIs and Reactive Programming Model: To facilitate non-blocking communication and data processing, enhancing system responsiveness and scalability. API-First Development (Open API): Emphasizing the design and documentation of microservices with an API-first approach, promoting interoperability and clear service contracts. Eventual Consistency and Long Running Actions (LRA): Addressing the challenges of data consistency in distributed systems without compromising system performance. Enhanced Observability and Monitoring: Microservices architectures complicate application monitoring and observability. A framework with built-in support for these capabilities simplifies the management of distributed services. MicroProfile specifications are divided into two main categories: Platform and Standalone. Figure 1. MicroProfile Specifications The MicroProfile Platform Specification is the core set of MicroProfile specifications designed to provide the foundational functionalities needed for microservices development. These specifications solve specific microservices challenges, including configuration, fault tolerance, health checks, metrics, and security. The table below provides a list of platform specifications of MicroProfile along with their descriptions: Specification Description Config Provides an easy-to-use and flexible system for application configuration. Fault Tolerance Implements patterns like Circuit Breaker, Bulkhead, Retry, Timeout, and Fallback for building resilient applications. JWT Authentication Defines a standard for using OpenID Connect (OIDC) based JSON Web Tokens(JWT) for role-based access control(RBAC) of microservices endpoints for secure communication. Metrics Define custom application metrics and expose platform metrics on a standard endpoint using a standard format to external monitoring systems. Health Allows applications to expose their health and readiness to perform operations to the underlying platform, which is crucial for automated recovery in cloud environments. Open API Facilitates the generation of OpenAPI documentation for RESTful services, making API discovery and understanding easier. Telemetry Provides a unified set of APIs, libraries, and tools for collecting, processing, and exporting telemetry data (metrics, traces, and logs) from cloud-native applications and services. Rest Client Defines a type-safe approach to invoke RESTful services over HTTP(S), simplifying the development of Rest clients. Jakarta EE Core Profile 10 An optimized Jakarta EE platform designed specifically for developing microservices and cloud-native Java applications with a reduced set of specifications for a lighter runtime footprint. Standalone specifications address more advanced needs that every microservices application may not require. They allow for innovation and experimentation in areas that are evolving or where there’s a need to address niche concerns without burdening the core platform with additional complexity. The table below provides a list of standalone specifications of MicroProfile along with their descriptions: Specification Description Context Propagation Defines a way to propagate context between threads and managed executor services. Ensure that the context is consistent during executing asynchronous tasks or across different services. GraphQL Provides a layer on top of Jakarta EE that allows the creation of GraphQL services. This specification makes it easier to build APIs, enabling clients to request exactly the data they need and nothing more. Long Running Actions (LRA) Focuses on providing a model for developing services that participate in long-running processes, ensuring consistency and reliability without necessarily locking data. Reactive Messaging Aims to facilitate building applications that communicate via reactive streams, enabling the development of event-driven, responsive, and resilient microservices. Reactive Streams Operators Provides a way to process data streams in a reactive manner, allowing for non-blocking system design and improving the efficiency of data processing in microservices. Open Tracing Integrates distributed tracing by defining a way for services to trace requests across service boundaries, improving observability. Below is the list of MicroProfile Implementations, each offering a platform for building and running microservices-based applications: Payara Micro Apache TomEE Open Liberty Launcher Quarkus WildFly Helidon The overall goal of MicroProfile architecture is to provide a lightweight enterprise-grade framework tailored for building cloud-native applications and enabling developers to build and deploy microservices with Java easily: Simplicity: MicroProfile APIs are designed to be simple and easy to use. They avoid unnecessary complexity and focus on providing the essential functionality for building microservices. Modularity: Its modular approach allows developers to use only what they need, reducing the overhead typically associated with enterprise frameworks. Standards-based: MicroProfile is based on open standards and specifications, ensuring compatibility and consistency across different implementations. Community-driven: It encourages active participation from the Java community for continuous evolution. Vendor-Neutral: MicroProfile is vendor-neutral. It’s supported by several industry players, ensuring that no single company controls its direction. Focus on Cloud-Native Applications: The architecture is specifically tailored for cloud environments. MicroProfile integrates with a number of cloud-native technologies, such as Kubernetes and Istio. This makes it easy to deploy and manage MicroProfile applications in cloud environments. Reactive programming: MicroProfile supports reactive programming, which is a style of programming that is well-suited for building microservices. Reactive applications are responsive and scalable, and they can handle high volumes of concurrent requests. Figure 2. Architecture Philosophy of MicroProfile MicroProfile offers several benefits, making it a compelling choice for developing microservices, especially in Java-centric environments. These benefits include: Optimized for Microservices: MicroProfile is designed explicitly for creating microservices, offering APIs that cater to the unique challenges of this architectural style. Cloud-Native Focus: The framework includes features such as externalized configuration, health checks, and metrics, which are essential for building and operating cloud-native applications effectively. MicroProfile is inherently designed for cloud-native applications. Open Source and Standards-Based: As an open-source framework based on open standards, MicroProfile facilitates interoperability and reduces the risk of vendor lock-in. Enhanced Productivity, Rapid Development and Deployment: MicroProfile simplifies microservices development with a set of standard APIs. With its focus on simplicity and productivity, MicroProfile helps speed up the development and deployment of microservices by providing essential functionalities and reducing boilerplate code. Community-Driven Innovation: Being community-driven, MicroProfile evolves quickly, incorporating new trends and best practices in microservices development. MicroProfile is backed by a strong Java community, ensuring continuous improvement and support. Vendor Neutrality: Being vendor-neutral, MicroProfile is supported by a wide range of industry players, which ensures a broad choice of tools and platforms for developers. Compatibility with Jakarta EE: MicroProfile is complementary to Jakarta EE, whether using MicroProfile implementations that support a small subset of Jakarta EE (such as Core Profile) or implementations that extend the full Jakarta EE Platform implementations with MicroProfile. Lightweight and Modular: It provides a lightweight model compared to traditional enterprise Java frameworks. Its modularity allows developers to use only the necessary components, reducing the application’s footprint and overhead. Scalability: The framework supports the development of scalable applications, essential for microservices that handle varying loads efficiently. Enhanced Resilience: MicroProfile includes specifications for fault tolerance patterns like retries, circuit breakers, timeouts, and bulkheads, which are crucial for building resilient services that can withstand network and service failures. Security Features: MicroProfile’s JWT Authentication provides a standardized way to secure microservices, making it easier to implement authentication and authorization. Ease of Testing: With its lightweight nature and support for advanced features like Rest Client, MicroProfile simplifies the testing of microservices, both in isolation and in integration scenarios. Jakarta EE is an open specification with more than 40 component specifications to address a wide array of needs of enterprise Java development. MicroProfile complements this by providing a baseline platform definition that optimizes enterprise Java for microservices architecture and delivers application portability across multiple compatible runtimes. Many Jakarta EE implementations that target a broad array of applications supplement Jakarta EE with MicroProfile to better support microservices. Their coexistence allows developers to harness the strength of both platforms, thereby facilitating a more versatile and adaptive approach to modern enterprise and cloud-native application development. MicroProfile strategically leverages Java EE developers' existing skill sets, enabling them to transition and adapt to microservices development with minimal learning curve. This ensures that developers can easily design and implement microservices architecture, enhancing productivity and facilitating the creation of cloud-native applications. Later in this tutorial, we will explore how MicroProfile API extends Jakarta EE’s capability to address microservices-specific challenges. MicroProfile and Jakarta EE are complementary technologies. Both platforms enable developers to stay at the forefront of cloud-native application development. In this section, we explored the MicroProfile platform in detail, laying the foundation for understanding how it revolutionizes the development of microservices using Java. We started by defining MicroProfile, emphasizing its role as an open-source specification tailored for microservices development. Key contributions from industry leaders and community members have positioned MicroProfile as a pivotal technology in the Java ecosystem, especially for cloud-native application development. We delved into the essential specifications of MicroProfile, each playing a critical role in addressing specific challenges in microservices development, from configuration management to service resilience. As we move forward in this tutorial, we will delve deeper into each specification and discover how to implement MicroProfile in real-world Java applications effectively. Microservices An architectural style for building applications as a collection of small, independent services. Each service focuses on a specific business capability and communicates with other services through well-defined APIs. APIs (Application Programming Interfaces) A set of definitions and protocols that specify how software components interact with each other. Cloud-native development An approach to building and running applications that are specifically designed for the cloud environment. It involves using technologies and practices that leverage the benefits of cloud platforms, such as scalability, elasticity, and pay-as-you-go pricing. Eclipse Foundation Working Group A collaborative group of industry leaders and Java community members who actively contribute to the of development of Eclipse projects like MicroProfile within the Eclipse Foundation framework. Jakarta EE Jakarta EE (formerly Java Platform, Enterprise Edition, or Java EE) is a set of specifications, extending Java Platform, Standard Edition, or Java SE with specifications for enterprise features such as web services, database persistence, asynchronous messaging and more. External Configuration A technique in application development where configuration data is separated from the application code, allowing the application’s behavior to be adjusted without changing the code, especially useful in cloud-native and microservices architectures. Health Checks Mechanisms used in microservices architectures to continuously check the status of an application or service to ensure it is functioning correctly and available to users. Fault Tolerance The ability of a system to continue operating in the event of the failure of some of its components. This feature is critical for maintaining high availability and reliability in microservices architectures. Vendor Neutrality The principle of designing software products and standards not controlled by any single vendor, promoting user interoperability and choice. Interoperability The ability of a software to exchange and make use of information across different platforms and services. JSON-P (JSON Processing) A Jakarta EE (formerly Java EE) API that enables parsing, generating, transforming, and querying JSON data. It facilitates the processing of JSON data within the Java programming environment. Currently it is known as Jakarta JSON Processing. JSON-B (JSON Binding) A Jakarta EE (formerly Java EE) API for binding Java objects to JSON messages and vice versa, streamlining the serialization and deserialization process. It allows custom mappings to handle complex conversion scenarios efficiently. Currently it is known as Jakarta JSON Binding. JAX-RS (Java API for RESTful Web Services) A Jakarta EE API for creating web services according to the REST architectural pattern in Java, using annotations to simplify development. It enables the easy creation and management of resources via standard HTTP methods. It is currently known as Jakarta RESTful Web Services. CDI (Contexts and Dependency Injection) A Jakarta EE API for enterprise-grade dependency injection, offering type-safe mechanisms, context lifecycle management, and a framework for decoupling application components. It enhances modularity and facilitates the development of loosely coupled, easily testable applications. Boilerplate Code A piece of code that must be included in many places with little or no alteration. Lightweight Services Services designed to consume minimal computing resources, enhancing performance and efficiency, particularly relevant in a microservices architecture. Resilient Services Services built to recover quickly from failures and continue operating. It is critical for maintaining the reliability of microservices-based applications. Observability The ability to measure the internal state of a system by examining its outputs, crucial for understanding the performance and behavior of microservices. Monitoring The practice of tracking and logging the performance and status of applications and infrastructure, essential for maintaining system health in microservices environments. Circuit Breaker A fault tolerance mechanism that prevents a failure in one service from causing system-wide failure, by temporarily disabling failing services. Bulkhead A pattern that isolates failures in one part of a system from the others, ensuring that parts of an application can continue functioning despite issues elsewhere. Retry A simple fault tolerance mechanism where an operation is attempted again if it fails initially, based on predefined criteria. Timeout A mechanism to limit the time waiting for a response from a service, helping to avoid resource deadlock situations in distributed systems. Fallback A fault tolerance mechanism that provides an alternative solution or response when a primary method fails. Role-Based Access Control (RBAC) A method of restricting system access to authorized users based on their roles within an organization. Kubernetes An open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts. Istio An open platform to connect, manage, and secure microservices, providing an easy way to create a network of deployed services with load balancing, service-to-service authentication, and monitoring. Reactive Programming A programming paradigm oriented around data flows and the propagation of change, enabling the development of responsive and resilient systems. Distributed Tracing A method for monitoring applications, especially those built using a microservices architecture, by tracking the flow of requests and responses across services. Long Running Actions (LRA) A model for managing long-duration, distributed transactions across microservices without locking resources. Reactive Streams An initiative to provide a standard for asynchronous stream processing with non-blocking back pressure.","title":"Chapter 1: Introduction to MicroProfile","component":"microprofile-tutorial","version":"6.1","name":"chapter01","url":"/microprofile-tutorial/6.1/chapter01/chapter01.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":2},{"text":"What is MicroProfile","hash":"what-is-microprofile","id":3},{"text":"Need for MicroProfile","hash":"need-for-microprofile","id":4},{"text":"MicroProfile Specifications","hash":"microprofile-specifications","id":5},{"text":"MicroProfile Platform Component Specifications","hash":"microprofile-platform-component-specifications","id":6},{"text":"Standalone (Outside Umbrella) Specifications","hash":"standalone-outside-umbrella-specifications","id":7},{"text":"MicroProfile Implementations","hash":"microprofile-implementations","id":8},{"text":"Architecture Philosophy","hash":"architecture-philosophy","id":9},{"text":"Benefits of MicroProfile","hash":"benefits-of-microprofile","id":10},{"text":"Relationship with Jakarta EE specification","hash":"relationship-with-jakarta-ee-specification","id":11},{"text":"Conclusion","hash":"conclusion","id":12},{"text":"Glossary","hash":"glossary","id":13}]},"4":{"id":4,"text":"In this chapter, you’ll embark on your MicroProfile journey! We will guide you through creating your first microservice, equipping you with the essential understanding to leverage this robust framework for building modern, cloud-native applications. This journey begins with setting up your development environment, then diving into creating a microservice. Development Environment Setup Configuring Build Tools Initializing a New MicroProfile Project Choosing Right Modules for your Application Building a RESTful service Deployment Testing your microservices Exploring Further with MicroProfile Let’s begin by preparing your workspace for MicroProfile development: MicroProfile, a Java framework, runs on the Java Virtual Machine (JVM), making the Java Development Kit (JDK) an essential component of your development environment. To install JDK, follow the steps below: Download: Visit the official OpenJDK website and download the JDK version compatible with your operating system. Install: Follow the installation instructions provided on this official OpenJDK Installation guide. Verify: After Installation, run the following command in your command line or terminal to verify the Installation: java -version You should an output similar to the one below: openjdk 17.0.10 2024-01-16 LTS OpenJDK Runtime Environment Microsoft-8902769 (build 17.0.10+7-LTS) OpenJDK 64-Bit Server VM Microsoft-8902769 (build 17.0.10+7-LTS, mixed mode, sharing) This confirms that JDK 17 has been successfully installed on your system. For most MicroProfile implementations, JDK 11 or later is recommended. In this tutorial, we will be using JDK 17. While OpenJDK is used here, other JDK providers such as Oracle JDK, Amazon Corretto, Azul Zulu, OpenJ9 also offer compatible JDK distributions. Build tools like Apache Maven or Gradle are commonly used for managing project dependencies and building Java applications. You can install the one that best fits your project needs. Here’s a brief overview to help you decide: Apache Maven: Known for its convention-over-configuration approach, Maven is a popular choice due to its simple project setup and extensive plugin repository. Gradle: Offers a flexible, script-based build configuration, allowing for highly customized build processes. Gradle is renowned for its superior performance, due to its incremental builds and caching mechanisms. It’s a great choice for complex projects requiring customization. If your existing project’s build uses Maven wrapper (mvnw) or Gradle wrapper (gradlew), you don’t have to install any of these build tools. These wrappers help ensure a consistent build environment without requiring the build tools to be installed on your system. To install Maven follow the steps below: Visit the Installing Apache Maven web page to download the latest version. Follow the installation instructions provided on the site. Verify the Maven installation by running this command in your terminal or command line. mvn -v You should see output similar to: Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /usr/local/sdkman/candidates/maven/current Java version: 17.0.10, vendor: Microsoft, runtime: /usr/lib/jvm/msopenjdk-current Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.2.0-1019-azure\", arch: \"amd64\", family: \"unix\" After Maven is installed, you can configure the pom.xml file in your project to include the MicroProfile dependencies. To install Gradle follow the step below: Visit the Gradle | Installation web page to download the latest version. Follow the installation instructions provided on the site. Verify the installation by running this command in your terminal or command line. gradle -version You should see output similar to: Welcome to Gradle 8.6! Here are the highlights of this release: - Configurable encryption key for configuration cache - Build init improvements - Build authoring improvements For more details see https://docs.gradle.org/8.6/release-notes.html ------------------------------------------------------------ Gradle 8.6 ------------------------------------------------------------ Build time: 2024-02-02 16:47:16 UTC Revision: d55c486870a0dc6f6278f53d21381396d0741c6e Kotlin: 1.9.20 Groovy: 3.0.17 Ant: Apache Ant(TM) version 1.10.13 compiled on January 4 2023 JVM: 17.0.10 (Microsoft 17.0.10+7-LTS) OS: Linux 6.2.0-1019-azure amd64 After Gradle is installed, you can configure the build.gradle file in your project to include the MicroProfile dependencies. Whether you opt for Maven’s stability and convention or Gradle’s flexibility and performance, understanding how to configure and use your chosen build tool is important for MicroProfile development. Integrated Development Environments (IDEs) enhance developer productivity by providing a rich set of features and extensions such as project boostraping, dependency management, intelligent code completion, configuration assistance, test runners, build, hot deployment and debugging tools. For MicroProfile development, the choice of IDE can significantly affect your development speed and efficiency. Below is a list of popular IDEs and their key features related to Java and MicroProfile development: Overview: Eclipse for Enterprise Java and Web Developers is a widely used IDE for Java development, offering extensive support for Java EE, Jakarta EE, and MicroProfile, among other technologies. Getting Started: The official Eclipse documentation containing instructions about creating Java projects - Creating your first Java Project Overview: IntelliJ IDEA by JetBrains supports a wide range of programming languages and frameworks, including Java, Kotlin, and frameworks like Spring, Jakarta EE, and MicroProfile. Getting Started: Refer to this IntelliJ IDEA guide on Creating a Java Project Using IntelliJ IDEA 2024.1. Overview: NetBeans is an open-source IDE that supports Java development, including Java SE, Java EE, JavaFX, and more. Getting Started: Check out this NetBeans Java Quick Start Tutorial for a tutorial on creating a Java application. Overview: Visual Studio Code is a lightweight, powerful source code editor that supports Java development through extensions. Getting Started: To start with Java in VS Code, follow this Getting Started with Java in VS Code documentation. Selecting an IDE should be based on personal preference, as the best choice varies depending on individual needs, familiarity, and the specific features that enhance your productivity. Each IDE offers unique advantages for MicroProfile development. MicroProfile applications need a runtime that supports MicroProfile specifications or a MicroProfile-compatible server to run your applications. Below are some popular options, each with unique features tailored to different needs: Open Liberty is a flexible server framework from IBM that supports MicroProfile, allowing developers to build microservices and cloud-native applications with ease. Open Liberty is known for its dynamic updates and lightweight design, which enhances developer productivity and application performance. Downloading Open Liberty page provides access to its latest releases and documentation to help you set up your environment. Quarkus is known for its container-first approach, offering fast startup times and low memory footprint. It aims to optimize Java for Kubernetes and cloud environments This Getting Started with Quarkus page will guide you through creating your first Quartus project and exploring its cloud-native capabilities. Payara Micro is a lightweight middleware platform suited for containerized Jakarta EE and MicroProfile applications. The Payara Platform Community Edition enables easy packaging of applications into a single, runnable JAR file, simplifying deployment and scaling in cloud environments. This site about Payara Platform Community Edition offers downloads and documentation to get started. WildFly is a flexible, lightweight, managed application runtime that offers full Jakarta EE and MicroProfile support. WildFly is designed for scalability and flexibility in both traditional and cloud-native environments. WildFly Downloads page offers the latest versions and documentation to get you started. Developed by Oracle, Helidon MP implements MicroProfile specifications. It provides a familiar programming model for Jakarta EE developers and enables efficient microservice development. Helidon Documentation provides comprehensive resources to help developers get started with the framework, understand its core concepts, and develop microservices efficiently. Apache TomEE integrates several Apache projects with Apache Tomcat to provide a Jakarta EE environment. It offers support for MicroProfile, allowing developers to build and deploy microservices using the well-known Jakarta EE technologies with additional MicroProfile capabilities. TomEE Downloads and TomEE MicroProfile Documentation page provide the necessary resources to get started with TomEE for MicroProfile development. To kickstart your MicroProfile project, use the MicroProfile Starter to generate a sample project with your chosen server and specifications. This tool provides a customizable project structure and generates necessary boilerplate code and configuration. Visit the MicroProfile Starter page - the official website for generating the MicroProfile project templates. Provide a groupId for your project, it’s an identifier for your project and should be unique to avoid conflicts with other libraries or projects. Its recommended convention is to start your groupId with the reverse domain name of your organization (for example, io.microprofile). Enter the 'artifactID', which is the name of your project (e.g., 'mp-ecomm-store'). Select the Java SE version your project will use. Select the MicroProfile version you want to use. Ideally, you should choose the latest version for the most up-to-date features but also consider the runtime’s support. Select the specifications you want to include in your project. These could be Config, Fault Tolerance, JWT Auth, Metrics, Health, Open API, Open Tracing, Rest Client. Choose what is relevant to your application. Click the Download button. Unzip the generated project and import it into your IDE. This completes the development environment setup. Now we are all set to begin development using MicroProfile. At the time of writing this tutorial, the latest MicroProfile released version was 6.1. The MicroProfile Starter does not currently support this version. Hence, we will not be using MicroProfile Starter to generate the project structure.","title":"Chapter 2: Getting Started with MicroProfile","component":"microprofile-tutorial","version":"6.1","name":"chapter02-00","url":"/microprofile-tutorial/6.1/chapter02/chapter02-00.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics Covered","hash":"topics-covered","id":2},{"text":"Development Environment Setup","hash":"development-environment-setup","id":3},{"text":"Java Development Kit (JDK)","hash":"java-development-kit-jdk","id":4},{"text":"Build Tools (Maven or Gradle)","hash":"build-tools-maven-or-gradle","id":5},{"text":"Installing Apache Maven","hash":"installing-apache-maven","id":6},{"text":"Gradle","hash":"gradle","id":7},{"text":"Integrated Development Environments","hash":"integrated-development-environments","id":8},{"text":"Eclipse for Enterprise Java and Web Developers","hash":"eclipse-for-enterprise-java-and-web-developers","id":9},{"text":"IntelliJ IDEA","hash":"intellij-idea","id":10},{"text":"Apache NetBeans","hash":"apache-netbeans","id":11},{"text":"Visual Studio Code","hash":"visual-studio-code","id":12},{"text":"Setting up MicroProfile Runtime","hash":"setting-up-microprofile-runtime","id":13},{"text":"Open Liberty","hash":"open-liberty","id":14},{"text":"Quarkus","hash":"quarkus","id":15},{"text":"Payara Micro","hash":"payara-micro","id":16},{"text":"WildFly","hash":"wildfly","id":17},{"text":"Helidon","hash":"helidon","id":18},{"text":"Apache TomEE","hash":"apache-tomee","id":19},{"text":"MicroProfile Starter","hash":"microprofile-starter","id":20}]},"5":{"id":5,"text":"Most modern IDEs have built-in support for creating Java and Maven projects. Depending on your chosen IDE, look for options like \"New Project\", or \"New Maven Project\" to get started. These options typically guide you through the setup process, including specifying the project’s group Id, artifact Id, and dependencies. For developers who prefer using the command line or for those setting up projects in environments without an IDE, Maven can generate the base structure of a Java project through its archetype mechanism. To create a project using Maven, open your terminal or command line and run the following command: mvn archetype:generate -DgroupId=io.microprofile.tutorial -DartifactId=store -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false The above command creates a new Maven project based on the maven-archetype-quickstart archetype, setting the groupId as io.microprofile.tutorial and the artifactID as store. Explanation: mvn archetype:generate goal in this command initializes the project creation process and instructs Maven to generate a new project based on an archetype template. -DgroupId=io.microprofile.tutorial Specifies the groupId for the project. The groupId is a unique identifier for your project and is usually based on the domain name of your organization in reverse. In this case, io.microprofile.tutorial represent a project related to MicroProfile tutorial. -DartifactId=store: Sets the artifactId for the project. The artifactId is the name of the project and is used as the base name for the project’s artifacts (e.g., WAR files). Here, store is used as the project name to indicate this project is related an e-commerce store application. -DarchetypeArtifactId=maven-archetype-quickstart: Indicates which archetype to use for generating the project. The maven-archetype-quickstart is a basic template for a Java application, providing a simple project structure that includes a sample application (App.java) and a unit test (AppTest.java). -DinteractiveMode=false: This option disables interactive mode, meaning Maven will not prompt you for input during the project generation process. All necessary information is provided via the command-line options, allowing the command to execute without further user interaction. Next, using your file explorer or command line, create the following folder structure: . ├── pom.xml ├── readme.md └── src └── main │ └── java │ └── io │ └── microprofile │ └── tutorial │ └── store │ └── product │ │ ├── entity │ │ │ └── Product.java │ │ └── service │ │ └── ProductService.java │ └── ProductRestApplication.java └── test └── java └── io └── microprofile └── tutorial └── store └── product └── ProductServiceTest.java The standard location for your Java source code is this folder: src/main/java And, the standard location for your test code is this folder: src/test/java You can delete App.java and AppTest.java files from the poject as these are not required in MicroProfile development. The heart of your Maven project is pom.xml (Project Object Model) file. It defines project metadata, dependencies, build configurations and plugins. The content for the pom.xml file should look as below, ensure MicroProfile depencency is added: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <modelVersion>4.0.0</modelVersion> <groupId>io.microprofile.tutorial</groupId> <artifactId>mp-ecomm</artifactId> <packaging>war</packaging> <version>1.0-SNAPSHOT</version> <!-- Setting the source and target of the Java Compiler !> <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> </properties> ... ... <!-- Add Lombok dependency --> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <version>1.18.26</version> <scope>provided</scope> </dependency> <!-- Adding Jakarta EE dependencies --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>10.0.0</version> <scope>provided</scope> </dependency> <!-- Adding MicroProfie dependency --> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>6.1</version> <type>pom</type> <scope>provided</scope> </dependency> <!-- JUnit Jupiter API for writing tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.8.2</version> <scope>test</scope> </dependency> <!-- JUnit Jupiter Engine for running tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-engine</artifactId> <version>5.8.2</version> <scope>test</scope> </dependency> ... Below is the list of essential dependencies you need to add to your Maven pom.xml for a MicroProfile project: Lombok Dependency - Simplifies your model by auto-generating getters, setters, constructors, and other boilerplate code. Jakarta EE API Dependency - Provides the APIs for Jakarta EE, which are often used alongside MicroProfile for enterprise Java applications. MicroProfile Dependency - This is the core MicroProfile dependency that allows you to use MicroProfile specifications in your project. JUnit Jupiter API for Writing Tests - Essential for writing unit tests for your MicroProfile services. JUnit Jupiter Engine for Running Tests - Enables the execution of JUnit tests. These dependencies provide a foundation for building MicroProfile applications, including aspects like model simplification with Lombok, the application of Jakarta EE APIs for building robust enterprise applications, and testing with JUnit. Remember to adjust the versions based on your project requirements and the compatibility with your MicroProfile runtime​​. Execute the $ mvn validate command. This checks the pom.xml file for correctness, ensuring that all necessary configuration is present and valid.","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-01","url":"/microprofile-tutorial/6.1/chapter02/chapter02-01.html","titles":[{"text":"Creating a Java Project for MicroProfile Development","hash":"creating-a-java-project-for-microprofile-development","id":1},{"text":"Using Your IDE","hash":"using-your-ide","id":2},{"text":"Using Maven from Command Line (Terminal)","hash":"using-maven-from-command-line-terminal","id":3}]},"6":{"id":6,"text":"Choosing the right modules for your MicroProfile application is crucial for ensuring that your application is lean, maintainable, and only includes the necessary functionalities to meet its requirements. Before diving into MicroProfile modules, it’s essential to have a clear understanding of your application’s requirements. Consider aspects such as configuration needs, security, health checks, data metrics, fault tolerance, and the need for distributed tracing. Mapping out these requirements will guide you in selecting the most relevant MicroProfile specifications. MicroProfile provides a selection of APIs that you can choose from based on the specific needs of your application. However, with the variety of specifications available, it’s important to understand which ones best fit your project’s needs. This section aims to help you make informed decisions about which MicroProfile modules to use. If you’re beginning a new MicroProfile-based project and are unsure which specifications you will need, starting with the entire MicroProfile dependency can give you immediate access to the full suite of MicroProfile APIs. This approach allows you to explore and experiment with different specifications without modifying your pom.xml to add or remove dependencies frequently. For projects that aim to leverage a wide range of MicroProfile specifications, including advanced features like telemetry, metrics, and fault tolerance, including the entire MicroProfile 6.1 dependency ensures that you have all the necessary APIs at your disposal. This approach simplifies dependency management, especially for complex applications. Maven <!-- MicroProfile 6.1 API --> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>6.1</version> <type>pom</type> <scope>provided</scope> </dependency> Gradle dependencies { compileOnly 'org.eclipse.microprofile:microprofile:6.1' } For applications where size and startup time are critical (e.g., serverless functions, microservices with stringent resource constraints), including only the necessary MicroProfile specifications can help minimize the application’s footprint. This selective approach ensures that your application includes only what it needs, potentially reducing memory usage and startup time. To prevent potential conflicts or security issues associated with unused dependencies, it’s prudent to include only the specifications your application directly uses. This practice follows the principle of minimalism in software design, reducing the surface area for bugs and vulnerabilities. The list below is provided to help you select the appropriate modules for your MicroProfile application: MicroProfile Config provides a way to fetch configurations from various sources dynamically. You should use this dependency in your microservices if they require external configuration or need to be run in different environments without requiring repackaging. Maven <dependency> <groupId>org.eclipse.microprofile.config</groupId> <artifactId>microprofile-config-api</artifactId> <version>3.1</version> </dependency> MicroProfile Health allows you to define health endpoints easily. If you’re deploying your application in a environment where the service needs to report its health status. Maven <dependency> <groupId>org.eclipse.microprofile.health</groupId> <artifactId>microprofile-health-api</artifactId> <version>4.0.1</version> </dependency> MicroProfile Metrics offers a way to generate various metrics from your application, which can be consumed by monitoring tools. You should use this dependency in your microservices if you need to monitor the performance of your application. Maven <dependency> <groupId>org.eclipse.microprofile.metrics</groupId> <artifactId>microprofile-metrics-api</artifactId> <version>5.1.0</version> </dependency> MicroProfile Fault Tolerance helps applications in implementing patterns like timeout, retry, bulkhead, circuit breaker, and fallback. Applications requiring resilience and reliability, especially those facing network latency or failure in microservices environments, will benefit from it. <dependency> <groupId>org.eclipse.microprofile.fault-tolerance</groupId> <artifactId>microprofile-fault-tolerance-api</artifactId> <version>4.0.2</version> </dependency> MicroProfile JWT Authentication provides a method for using JWT tokens for securing your microservices, especially where propagation of identity and authentication information is needed across services. <dependency> <groupId>org.eclipse.microprofile.jwt</groupId> <artifactId>microprofile-jwt-auth-api</artifactId> <version>2.1</version> </dependency> MicroProfile OpenAPI offers tools for generating OpenAPI descriptions of your endpoints automatically for documenting your REST APIs. Maven <dependency> <groupId>org.eclipse.microprofile.openapi</groupId> <artifactId>microprofile-openapi-api</artifactId> <version>3.1.1</version> </dependency> MicroProfile Rest Client simplifies calling RESTful services over HTTP for type-safe invocations of HTTP services for type-safe invocations of HTTP services. Maven <dependency> <groupId>org.eclipse.microprofile.rest.client</groupId> <artifactId>microprofile-rest-client-api</artifactId> <version>3.0</version> </dependency> MicroProfile Telemetry integrates OpenTelemetry for distributed tracing For applications that need to trace requests across microservices to diagnose and monitor. Maven <project> <dependencyManagement> <dependencies> <dependency> <groupId>io.opentelemetry</groupId> <artifactId>opentelemetry-bom</artifactId> <version>1.29.0</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> <dependencies> <dependency> <groupId>io.opentelemetry</groupId> <artifactId>opentelemetry-api</artifactId> </dependency> </dependencies> </project> Jakarta EE Core Profile dependency provides the API set included in the Jakarta EE 10 Core Profile, which is optimized for developing microservices and cloud-native Java applications with a reduced set of specifications for a lighter runtime footprint. Maven <dependencies> <!-- Jakarta EE 10 Core Profile --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>10.0.0</version> <scope>provided</scope> </dependency> </dependencies> For rapidly evolving projects or those in the exploratory phase, starting with the full MicroProfile dependency might be advantageous. However, for production applications with well-defined requirements, opting for individual specifications can lead to more efficient and maintainable solutions. When choosing MicroProfile modules, start with the minimal set that meets your application’s core requirements. You can always integrate additional specifications as your application evolves. This approach keeps your application lightweight and focused on its primary functionalities, improving maintainability and performance. Always consider the compatibility between different versions of MicroProfile and your runtime environment to ensure seamless integration and deployment.","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-02","url":"/microprofile-tutorial/6.1/chapter02/chapter02-02.html","titles":[{"text":"Choosing Right Modules for Your MicroProfile Application","hash":"choosing-right-modules-for-your-microprofile-application","id":1},{"text":"Use the Entire MicroProfile Dependency","hash":"use-the-entire-microprofile-dependency","id":2},{"text":"Use Individual MicroProfile Specification Dependencies","hash":"use-individual-microprofile-specification-dependencies","id":3}]},"7":{"id":7,"text":"Web Services are very popular nowadays because they allow for building decoupled systems – services can communicate with each other without the knowledge of each other’s implementation details. There are many different ways to design and implement web services. One popular way is to use the Representational State Transfer (REST) architecture. A Jakarta RESTful Webservice is a web service that uses the Representational State Transfer (REST) architecture. This type of web service makes it easy to build modern, scalable web applications. The REST architecture is based on the principle that all data and functionality should be accessed through a uniform interface. This makes it easy to develop, test, and deploy web applications. To understand this better, let’s create a simple RESTful service to manage a list of products for our sample application, the MicroProfile ecommerce store. This RESTful API will allow client applications to access the product information stored as resources on the server. For example, let’s say you have a product catalog that you want to make available as a web service. With REST, you would create a URL that represents the resources (products) in your catalog. When a client (such as a web browser) requests this URL, the server would return a list of products in JSON format. An Entity class represents a specific object, in our case a product. It contains the product’s details id and name, and other properties like price, and quantity. To implement an entity class first, you need to create a Product class, as below: // Product.java package io.microprofile.tutorial.store.product.entity; import lombok.AllArgsConstructor; import lombok.Data; @Data @AllArgsConstructor @NoArgsConstructor public class Product { private Long id; private String name; private String description; private Double price; } Explanation: The Product class is a Plain Old Java Object (POJO). It has an id, name, description and price property. The id property is of type Long, The name and description properties are of type String. The price property is of type Double. @Data annotation will generate constructors, getters, and setters for all fields. By doing this, you enable the Jackson library to convert your Java objects to JSON and vice versa. All properties must be of Object type as well. Jackson cannot work with primitive types because they cannot be null. @AllArgsConstructor generates a constructor with one argument for each field in the class. This is useful for instantiating objects with all their fields initialized. @NoArgsConstructor generates a default constructor for the class. A resource class represents a collection of related resources. It includes methods for creating, updating, deleting, and retrieving (CRUD) operations on the resources. Let us now create a ProductResource class with a getProducts() method to return a list of Product objects. // ProductResource.java package io.microprofile.tutorial.store.product.resource; import java.util.ArrayList; import java.util.List; import io.microprofile.tutorial.store.product.entity.Product; import jakarta.enterprise.context.ApplicationScoped; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.Produces; import jakarta.ws.rs.core.MediaType; @Path(\"/products\") @ApplicationScoped public class ProductResource { private List<Product> products; public ProductResource() { products = new ArrayList<>(); products.add(new Product(Long.valueOf(1L), \"iPhone\", \"Apple iPhone 15\", Double.valueOf(999.99))); products.add(new Product(Long.valueOf(2L), \"MacBook\", \"Apple MacBook Air\", Double.valueOf(1299.99))); } @GET @Produces(MediaType.APPLICATION_JSON) public List<Product> getProducts() { // Return a list of products return products; } } Explanation: The ProductResource is annotated with @ApplicationScoped. This will ensure that only one instance of this class available when the application is running. The ProductResource class has a getProducts() method, which returns a list of products. This method is annotated with the @GET annotation, which maps this method to the GET HTTP method. The @Produces annotation tells the server that this method produces JSON content. This will return the following JSON response when we make a GET request to the /api/products endpoint. RESTful web services can produce and consume many different media types, including JSON, XML, and HTML. Annotations specify the media type that a method can consume or produce. For example, if a method is annotated with @Produces(MediaType.APPLICATION_JSON) it can produce JSON. Create a class named ProductRestApplication as per the code below: // ProductRestApplication.java package io.microprofile.tutorial.store.product; import jakarta.ws.rs.ApplicationPath; import jakarta.ws.rs.core.Application; @ApplicationPath(\"/api\") public class ProductRestApplication extends Application{ } Explanation: The annotation @ApplicationPath(\"/api\") specifies that any RESTful resources registered within this application will be accessed under the base path /api. For example, if you have a resource class named ProductResource mapped to the path /products, it would be accessible at /api/products. You may build the application using the following commands from your project’s root directory: $ mvn compile The above command will compile your project’s source code. $ mvn test The above command will run the test using a unit testing framework. These test should not require the code to be packaged and deployed. $mvn package The above command will create a deployment package. This section guides you through deploying your newly created product microservice to a runtime environment. Below are some of the general considerations: Runtime Compatibility: Ensure your chosen runtime supports the MicroProfile version used in your project. Packaging: Decide on a packaging format (e.g., WAR file, Docker image). Configuration: Review and adjust any runtime configuration necessary for your service. Deployment Tools: Leverage runtime-specific tools or commands for deployment. You can then deploy this application on a MicroProfile compatible server and access the web service at http://localhost:<port>/<contextRoot>/api/products. Replace <port> with the port number on which the web server or application server is listening. The <contextRoot> is a placeholder for the context root of the web application. The context root is part of the URL path that identifies the base path for the application on the web server. Below are the steps for popular options. Specific steps will depend on your chosen runtime. Open Liberty Package your application as a WAR file using Maven or Gradle by adding the packaging tag in pom.xml. <groupId>io.microprofile.tutorial</groupId> <artifactId>mp-ecomm-store</artifactId> <version>1.0-SNAPSHOT</version> <packaging>war</packaging> Add a server configuration file at the location /main/liberty/config/server.xml with the content as below: <server description=\"MicroProfile Tutorial Liberty Server\"> <featureManager> <feature>restfulWS-3.1</feature> <feature>jsonb-3.0</feature> </featureManager> <httpEndpoint httpPort=\"${default.http.port}\" httpsPort=\"${default.https.port}\" id=\"defaultHttpEndpoint\" host=\"*\" /> <webApplication location=\"mp-ecomm-store.war\" contextRoot=\"${app.context.root}\"/> </server> Add the Open Liberty configuration in the pom.xml as below: <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> <!-- Liberty configuration --> <liberty.var.default.http.port>9080</liberty.var.default.http.port> <liberty.var.default.https.port>9443</liberty.var.default.https.port> <liberty.var.app.context.root>mp-ecomm-store</liberty.var.app.context.root> </properties> Add the Open Liberty build plugin in the pom.xml as below: <build> <finalName>${project.artifactId}</finalName> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> <version>3.3.2</version> </plugin> <plugin> <groupId>io.openliberty.tools</groupId> <artifactId>liberty-maven-plugin</artifactId> <version>3.8.2</version> <configuration> <serverName>productServer</serverName> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>3.0.0</version> <configuration> <systemPropertyVariables> <http.port>${liberty.var.default.http.port}</http.port> <war.name>${liberty.var.app.context.root}</war.name> </systemPropertyVariables> </configuration> </plugin> </plugins> </build> Refer to your runtime’s documentation for instructions on running your MicroProfile application. For example, Consult the Open Liberty documentation for detailed instructions: MicroProfile - Open Liberty Docs Finally, use the following command from the command line or terminal to run the application on Liberty server. $ mvn liberty:run You can also run the following command to start the liberty server in development mode. $ mvn liberty:dev Assuming your server is running on http://localhost:9080/, you can access your service at: http://localhost:9080/mp-ecomm-store/api/products. To call this RESTful web service, you can enter the URL in your browser. The response is an array of JSON objects. Each object has an id, name, description and price property. Please note only GET methods can be tested with browsers. The response should be [{\"description\":\"Apple iPhone 15\",\"id\":1,\"name\":\"iPhone\",\"price\":999.99},{\"description\":\"Apple MacBook Air\",\"id\":2,\"name\":\"MacBook\",\"price\":1299.99}] This uses an in-memory list; In the next chapter, in a real application you should integrate a database (via Jakarta Persistence API). We will be learning about this in the next chapter. Quarkus Build your application as a native executable or Docker image. Run the generated executable or deploy the Docker image to a container platform. Refer to the Quarkus documentation for deployment guides: Creating your first application - Quarkus Payara Micro Package your application as a WAR file. Deploy the WAR to a Payara Micro server instance. See the Payara Micro documentation for specific instructions: Getting Started with Payara Micro WildFly Package your application as a WAR file. Deploy the WAR to a WildFly server instance. Refer to the WildFly documentation for deployment details: WildFly Developer Guide Helidon Choose between Helidon SE (native packaging) or Helidon MP (WAR packaging). Build your application using Gradle. Follow the relevant Helidon documentation for deployment steps: Helidon - Getting Started TomEE Package your application as a WAR file. Deploy the WAR file to the TomEE server instance. Refer to the TomEE documentation for instructions: Serverless TomEE MicroProfile Containerization: Consider using containerization technologies like Docker and Kubernetes for portability and scalability. Cloud Deployment: Explore cloud platforms like AWS, Azure, or GCP.","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-03","url":"/microprofile-tutorial/6.1/chapter02/chapter02-03.html","titles":[{"text":"Developing a RESTful Web Service","hash":"developing-a-restful-web-service","id":1},{"text":"Creating an Entity class","hash":"creating-an-entity-class","id":2},{"text":"Creating a Resource class","hash":"creating-a-resource-class","id":3},{"text":"Creating a Resource class","hash":"creating-a-resource-class-2","id":4},{"text":"Building Your Application","hash":"building-your-application","id":5},{"text":"Deploying your microservices","hash":"deploying-your-microservices","id":6},{"text":"General Considerations:","hash":"general-considerations","id":7},{"text":"Deployment Options","hash":"deployment-options","id":8},{"text":"Running Your Application","hash":"running-your-application","id":9},{"text":"Additional Considerations:","hash":"additional-considerations","id":10}]},"8":{"id":8,"text":"Testing your microservice is critical for ensuring the reliability and robustness of your microservice. Maven, being a powerful project build management tool, simplifies this process by automating the test execution. To create tests for your microservice, start by creating a class called ProductResourceTest, which contains unit tests for the ProductResource class as below: // ProductResourceTest.java package io.microprofile.tutorial.store.product.resource; import static org.junit.jupiter.api.Assertions.assertEquals; import static org.junit.jupiter.api.Assertions.assertNotNull; import java.util.List; import org.junit.jupiter.api.AfterEach; import org.junit.jupiter.api.BeforeEach; import org.junit.jupiter.api.Test; import io.microprofile.tutorial.store.product.entity.Product; public class ProductResourceTest { private ProductResource productResource; @BeforeEach void setUp() { productResource = new ProductResource(); } @AfterEach void tearDown() { productResource = null; } @Test void testGetProducts() { List<Product> products = productResource.getProducts(); assertNotNull(products); assertEquals(2, products.size()); } } Explanation: Below are the assertions to test the getProducts() method of ProductService: * The assertNotNull(products); assertion checks that products are not null. It ensures the method returns a list, even if it’s empty. * The assertEquals(2, products.size()); assertion verifies that the list contains two products. To run the unit tests defined in ProductResourceTest, follow these steps: Open a Terminal or Command Prompt: Navigate to the root directory of your project where the pom.xml file is located. This file contains the Maven project definition, including dependencies and test configurations. Execute the Maven Test Command: Enter the following command to initiate the execution of the unit tests: $ mvn test This command tells Maven to execute the test phase of the build lifecycle. Maven will compile the test source code, execute the test cases, and provide a summary of the test execution results. Review Test Results: After running the tests, Maven displays the results in the terminal. Look for the Tests run:, Failures:, and Errors: summaries to assess the outcome. For the ProductResourceTest class, ensure that the test methods execute successfully and meet the expected assertions: Addressing Failures: If any tests fail, Maven will highlight these failures in the output. Use this information to identify and fix issues in your code. Review the failing tests' output for details on the assertion failures and adjust your microservice implementation accordingly. Rerun Tests: After making any necessary changes to your microservice code, rerun the tests using the mvn test command to verify that all issues have been resolved and that your microservice behaves as expected. By following these steps, you can leverage Maven to efficiently run and manage unit tests for your microservice, ensuring its functionality and reliability before deployment. Now that you have a basic MicroProfile service, consider exploring further: Adding configuration with MicroProfile Config Implementing health checks using MicroProfile Health Enhancing your service with MicroProfile Fault Tolerance MicroProfile Official Website: https://microprofile.io/ MicroProfile GitHub Repository: https://github.com/eclipse/microprofile MicroProfile Documentation and Guides: MicroProfile Official documentation After completing this chapter, you should have a basic understanding of MicroProfile and how to start building microservices with it. Continue exploring the specifications and capabilities of MicroProfile to fully leverage its power in your microservices architecture.","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-04","url":"/microprofile-tutorial/6.1/chapter02/chapter02-04.html","titles":[{"text":"Testing your microservice","hash":"testing-your-microservice","id":1},{"text":"Running Unit Tests with Maven","hash":"running-unit-tests-with-maven","id":2},{"text":"Next Steps","hash":"next-steps","id":3},{"text":"Resources","hash":"resources","id":4}]},"9":{"id":9,"text":"The Table below provides an overview of the package structure and their purposes within a typical Java-based microservices architecture. Package Description dto Data Transfer Objects (DTOs) are used to transfer data between processes, such as from your service to a REST endpoint. They often mirror entity classes but can be tailored to the needs of the client to avoid over-fetching or under-fetching data. entity Entity classes represent the domain model and are typically mapped to database tables. These are the core classes that represent the business data and are often used with ORM tools like JPA. repository Interfaces in this package abstract the data layer, making it easier to perform CRUD operations without dealing with database intricacies directly. This follows the Repository pattern. Data access layer, interacting with databases or other storage mechanisms (e.g., ProductRepository, CustomerRepository). service Service classes contain the core business logic. They interact with repositories to fetch and persist data and perform operations specific to the business requirements. (e.g., ProductService, OrderService, InventoryService). resource REST resource classes (sometimes called controllers in other frameworks) are the entry points for HTTP requests. They interact with service classes to process these requests. Interfaces defining endpoints for REST services (e.g., ProductResource, ShoppingCartResource). common This package contains classes and interfaces that are shared across different microservices, such as utility classes, common configuration, exception handling, and security-related classes. client For microservices to communicate with each other, they often use HTTP clients. This package contains interfaces or classes annotated for use with MicroProfile Rest Client or similar, facilitating easy communication between your services. config Configuration classes for MicroProfile Config. exception Custom exceptions for error handling (e.g., ProductNotFoundException, PaymentFailedException). util Helper and utility classes. Base Package: io.microprofile.tutorial.store io.microprofile.tutorial.store ├── product │ ├── resource │ ├── config │ ├── exception │ ├── entity │ ├── repository │ ├── service │ └── util ├── cart │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── client │ ├── exception │ └── util ├── user │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── inventory │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── order │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── payment │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util └── shipment ├── resource ├── entity ├── service ├── repository ├── exception └── util ---- TODO: Current package structure is just a proposal will update after completing the source code for all chapters","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-05","url":"/microprofile-tutorial/6.1/chapter02/chapter02-05.html","titles":[{"text":"Package Structure","hash":"package-structure","id":1}]},"10":{"id":10,"text":"Java Development Kit (JDK) A software development environment used for developing Java applications. It includes the Java Runtime Environment (JRE), an interpreter/loader (Java), a compiler (javac), an archiver (jar), a documentation generator (Javadoc), and other tools needed in Java development. Integrated Development Environment (IDE) A software application that provides comprehensive facilities to computer programmers for software development. Examples include Eclipse, IntelliJ IDEA, NetBeans, and Visual Studio Code. RESTful Service A web service implementing REST (Representational State Transfer) principles, providing interoperability between computer systems on the internet. Runtime Environment The environment in which programs are executed. It includes everything your application needs to run in production, such as an operating system, a runtime (like JVM for Java applications), libraries, and environment variables. JUnit A unit testing framework for Java, used to write and run repeatable tests. Containerization A lightweight alternative to full machine virtualization that involves encapsulating an application in a container with its own operating environment. Cloud Deployment Deploying applications in cloud environments, leveraging cloud resources like compute instances, storage, and networking capabilities.","title":"","component":"microprofile-tutorial","version":"6.1","name":"chapter02-06","url":"/microprofile-tutorial/6.1/chapter02/chapter02-06.html","titles":[{"text":"Glossary","hash":"glossary","id":1}]},"11":{"id":11,"text":"In this chapter, you’ll embark on your MicroProfile journey! We will guide you through creating your first microservice, equipping you with the essential understanding to leverage this robust framework for building modern, cloud-native applications. This journey begins with setting up your development environment, then diving into creating a microservice. Development Environment Setup Configuring Build Tools Initializing a New MicroProfile Project Choosing Right Modules for your Application Building a RESTful service Deployment Testing your microservices Exploring Further with MicroProfile Let’s begin by preparing your workspace for MicroProfile development: MicroProfile, a Java framework, runs on the Java Virtual Machine (JVM), making the Java Development Kit (JDK) an essential component of your development environment. To install JDK, follow the steps below: Download: Visit the official OpenJDK website and download the JDK version compatible with your operating system. Install: Follow the installation instructions provided on this official OpenJDK Installation guide. Verify: After Installation, run the following command in your command line or terminal to verify the Installation: java -version You should an output similar to the one below: openjdk 17.0.10 2024-01-16 LTS OpenJDK Runtime Environment Microsoft-8902769 (build 17.0.10+7-LTS) OpenJDK 64-Bit Server VM Microsoft-8902769 (build 17.0.10+7-LTS, mixed mode, sharing) This confirms that JDK 17 has been successfully installed on your system. For most MicroProfile implementations, JDK 11 or later is recommended. In this tutorial, we will be using JDK 17. While OpenJDK is used here, other JDK providers such as Oracle JDK, Amazon Corretto, Azul Zulu, OpenJ9 also offer compatible JDK distributions. Build tools like Apache Maven or Gradle are commonly used for managing project dependencies and building Java applications. You can install the one that best fits your project needs. Here’s a brief overview to help you decide: Apache Maven: Known for its convention-over-configuration approach, Maven is a popular choice due to its simple project setup and extensive plugin repository. Gradle: Offers a flexible, script-based build configuration, allowing for highly customized build processes. Gradle is renowned for its superior performance, due to its incremental builds and caching mechanisms. It’s a great choice for complex projects requiring customization. If your existing project’s build uses Maven wrapper (mvnw) or Gradle wrapper (gradlew), you don’t have to install any of these build tools. These wrappers help ensure a consistent build environment without requiring the build tools to be installed on your system. To install Maven follow the steps below: Visit the Installing Apache Maven web page to download the latest version. Follow the installation instructions provided on the site. Verify the Maven installation by running this command in your terminal or command line. mvn -v You should see output similar to: Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /usr/local/sdkman/candidates/maven/current Java version: 17.0.10, vendor: Microsoft, runtime: /usr/lib/jvm/msopenjdk-current Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.2.0-1019-azure\", arch: \"amd64\", family: \"unix\" After Maven is installed, you can configure the pom.xml file in your project to include the MicroProfile dependencies. To install Gradle follow the step below: Visit the Gradle | Installation web page to download the latest version. Follow the installation instructions provided on the site. Verify the installation by running this command in your terminal or command line. gradle -version You should see output similar to: Welcome to Gradle 8.6! Here are the highlights of this release: - Configurable encryption key for configuration cache - Build init improvements - Build authoring improvements For more details see https://docs.gradle.org/8.6/release-notes.html ------------------------------------------------------------ Gradle 8.6 ------------------------------------------------------------ Build time: 2024-02-02 16:47:16 UTC Revision: d55c486870a0dc6f6278f53d21381396d0741c6e Kotlin: 1.9.20 Groovy: 3.0.17 Ant: Apache Ant(TM) version 1.10.13 compiled on January 4 2023 JVM: 17.0.10 (Microsoft 17.0.10+7-LTS) OS: Linux 6.2.0-1019-azure amd64 After Gradle is installed, you can configure the build.gradle file in your project to include the MicroProfile dependencies. Whether you opt for Maven’s stability and convention or Gradle’s flexibility and performance, understanding how to configure and use your chosen build tool is important for MicroProfile development. Integrated Development Environments (IDEs) enhance developer productivity by providing a rich set of features and extensions such as project boostraping, dependency management, intelligent code completion, configuration assistance, test runners, build, hot deployment and debugging tools. For MicroProfile development, the choice of IDE can significantly affect your development speed and efficiency. Below is a list of popular IDEs and their key features related to Java and MicroProfile development: Overview: Eclipse for Enterprise Java and Web Developers is a widely used IDE for Java development, offering extensive support for Java EE, Jakarta EE, and MicroProfile, among other technologies. Getting Started: The official Eclipse documentation containing instructions about creating Java projects - Creating your first Java Project Overview: IntelliJ IDEA by JetBrains supports a wide range of programming languages and frameworks, including Java, Kotlin, and frameworks like Spring, Jakarta EE, and MicroProfile. Getting Started: Refer to this IntelliJ IDEA guide on Creating a Java Project Using IntelliJ IDEA 2024.1. Overview: NetBeans is an open-source IDE that supports Java development, including Java SE, Java EE, JavaFX, and more. Getting Started: Check out this NetBeans Java Quick Start Tutorial for a tutorial on creating a Java application. Overview: Visual Studio Code is a lightweight, powerful source code editor that supports Java development through extensions. Getting Started: To start with Java in VS Code, follow this Getting Started with Java in VS Code documentation. Selecting an IDE should be based on personal preference, as the best choice varies depending on individual needs, familiarity, and the specific features that enhance your productivity. Each IDE offers unique advantages for MicroProfile development. MicroProfile applications need a runtime that supports MicroProfile specifications or a MicroProfile-compatible server to run your applications. Below are some popular options, each with unique features tailored to different needs: Open Liberty is a flexible server framework from IBM that supports MicroProfile, allowing developers to build microservices and cloud-native applications with ease. Open Liberty is known for its dynamic updates and lightweight design, which enhances developer productivity and application performance. Downloading Open Liberty page provides access to its latest releases and documentation to help you set up your environment. Quarkus is known for its container-first approach, offering fast startup times and low memory footprint. It aims to optimize Java for Kubernetes and cloud environments This Getting Started with Quarkus page will guide you through creating your first Quartus project and exploring its cloud-native capabilities. Payara Micro is a lightweight middleware platform suited for containerized Jakarta EE and MicroProfile applications. The Payara Platform Community Edition enables easy packaging of applications into a single, runnable JAR file, simplifying deployment and scaling in cloud environments. This site about Payara Platform Community Edition offers downloads and documentation to get started. WildFly is a flexible, lightweight, managed application runtime that offers full Jakarta EE and MicroProfile support. WildFly is designed for scalability and flexibility in both traditional and cloud-native environments. WildFly Downloads page offers the latest versions and documentation to get you started. Developed by Oracle, Helidon MP implements MicroProfile specifications. It provides a familiar programming model for Jakarta EE developers and enables efficient microservice development. Helidon Documentation provides comprehensive resources to help developers get started with the framework, understand its core concepts, and develop microservices efficiently. Apache TomEE integrates several Apache projects with Apache Tomcat to provide a Jakarta EE environment. It offers support for MicroProfile, allowing developers to build and deploy microservices using the well-known Jakarta EE technologies with additional MicroProfile capabilities. TomEE Downloads and TomEE MicroProfile Documentation page provide the necessary resources to get started with TomEE for MicroProfile development. To kickstart your MicroProfile project, use the MicroProfile Starter to generate a sample project with your chosen server and specifications. This tool provides a customizable project structure and generates necessary boilerplate code and configuration. Visit the MicroProfile Starter page - the official website for generating the MicroProfile project templates. Provide a groupId for your project, it’s an identifier for your project and should be unique to avoid conflicts with other libraries or projects. Its recommended convention is to start your groupId with the reverse domain name of your organization (for example, io.microprofile). Enter the 'artifactID', which is the name of your project (e.g., 'mp-ecomm-store'). Select the Java SE version your project will use. Select the MicroProfile version you want to use. Ideally, you should choose the latest version for the most up-to-date features but also consider the runtime’s support. Select the specifications you want to include in your project. These could be Config, Fault Tolerance, JWT Auth, Metrics, Health, Open API, Open Tracing, Rest Client. Choose what is relevant to your application. Click the Download button. Unzip the generated project and import it into your IDE. This completes the development environment setup. Now we are all set to begin development using MicroProfile. At the time of writing this tutorial, the latest MicroProfile released version was 6.1. The MicroProfile Starter does not currently support this version. Hence, we will not be using MicroProfile Starter to generate the project structure. == Creating a Java Project for MicroProfile Development Most modern IDEs have built-in support for creating Java and Maven projects. Depending on your chosen IDE, look for options like \"New Project\", or \"New Maven Project\" to get started. These options typically guide you through the setup process, including specifying the project’s group Id, artifact Id, and dependencies. For developers who prefer using the command line or for those setting up projects in environments without an IDE, Maven can generate the base structure of a Java project through its archetype mechanism. To create a project using Maven, open your terminal or command line and run the following command: mvn archetype:generate -DgroupId=io.microprofile.tutorial -DartifactId=store -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false The above command creates a new Maven project based on the maven-archetype-quickstart archetype, setting the groupId as io.microprofile.tutorial and the artifactID as store. Explanation: mvn archetype:generate goal in this command initializes the project creation process and instructs Maven to generate a new project based on an archetype template. -DgroupId=io.microprofile.tutorial Specifies the groupId for the project. The groupId is a unique identifier for your project and is usually based on the domain name of your organization in reverse. In this case, io.microprofile.tutorial represent a project related to MicroProfile tutorial. -DartifactId=store: Sets the artifactId for the project. The artifactId is the name of the project and is used as the base name for the project’s artifacts (e.g., WAR files). Here, store is used as the project name to indicate this project is related an e-commerce store application. -DarchetypeArtifactId=maven-archetype-quickstart: Indicates which archetype to use for generating the project. The maven-archetype-quickstart is a basic template for a Java application, providing a simple project structure that includes a sample application (App.java) and a unit test (AppTest.java). -DinteractiveMode=false: This option disables interactive mode, meaning Maven will not prompt you for input during the project generation process. All necessary information is provided via the command-line options, allowing the command to execute without further user interaction. Next, using your file explorer or command line, create the following folder structure: . ├── pom.xml ├── readme.md └── src └── main │ └── java │ └── io │ └── microprofile │ └── tutorial │ └── store │ └── product │ │ ├── entity │ │ │ └── Product.java │ │ └── service │ │ └── ProductService.java │ └── ProductRestApplication.java └── test └── java └── io └── microprofile └── tutorial └── store └── product └── ProductServiceTest.java The standard location for your Java source code is this folder: src/main/java And, the standard location for your test code is this folder: src/test/java You can delete App.java and AppTest.java files from the poject as these are not required in MicroProfile development. The heart of your Maven project is pom.xml (Project Object Model) file. It defines project metadata, dependencies, build configurations and plugins. The content for the pom.xml file should look as below, ensure MicroProfile depencency is added: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <modelVersion>4.0.0</modelVersion> <groupId>io.microprofile.tutorial</groupId> <artifactId>mp-ecomm</artifactId> <packaging>war</packaging> <version>1.0-SNAPSHOT</version> <!-- Setting the source and target of the Java Compiler !> <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> </properties> ... ... <!-- Add Lombok dependency --> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <version>1.18.26</version> <scope>provided</scope> </dependency> <!-- Adding Jakarta EE dependencies --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>10.0.0</version> <scope>provided</scope> </dependency> <!-- Adding MicroProfie dependency --> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>6.1</version> <type>pom</type> <scope>provided</scope> </dependency> <!-- JUnit Jupiter API for writing tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-api</artifactId> <version>5.8.2</version> <scope>test</scope> </dependency> <!-- JUnit Jupiter Engine for running tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter-engine</artifactId> <version>5.8.2</version> <scope>test</scope> </dependency> ... Below is the list of essential dependencies you need to add to your Maven pom.xml for a MicroProfile project: Lombok Dependency - Simplifies your model by auto-generating getters, setters, constructors, and other boilerplate code. Jakarta EE API Dependency - Provides the APIs for Jakarta EE, which are often used alongside MicroProfile for enterprise Java applications. MicroProfile Dependency - This is the core MicroProfile dependency that allows you to use MicroProfile specifications in your project. JUnit Jupiter API for Writing Tests - Essential for writing unit tests for your MicroProfile services. JUnit Jupiter Engine for Running Tests - Enables the execution of JUnit tests. These dependencies provide a foundation for building MicroProfile applications, including aspects like model simplification with Lombok, the application of Jakarta EE APIs for building robust enterprise applications, and testing with JUnit. Remember to adjust the versions based on your project requirements and the compatibility with your MicroProfile runtime​​. Execute the $ mvn validate command. This checks the pom.xml file for correctness, ensuring that all necessary configuration is present and valid. == Choosing Right Modules for Your MicroProfile Application Choosing the right modules for your MicroProfile application is crucial for ensuring that your application is lean, maintainable, and only includes the necessary functionalities to meet its requirements. Before diving into MicroProfile modules, it’s essential to have a clear understanding of your application’s requirements. Consider aspects such as configuration needs, security, health checks, data metrics, fault tolerance, and the need for distributed tracing. Mapping out these requirements will guide you in selecting the most relevant MicroProfile specifications. MicroProfile provides a selection of APIs that you can choose from based on the specific needs of your application. However, with the variety of specifications available, it’s important to understand which ones best fit your project’s needs. This section aims to help you make informed decisions about which MicroProfile modules to use. If you’re beginning a new MicroProfile-based project and are unsure which specifications you will need, starting with the entire MicroProfile dependency can give you immediate access to the full suite of MicroProfile APIs. This approach allows you to explore and experiment with different specifications without modifying your pom.xml to add or remove dependencies frequently. For projects that aim to leverage a wide range of MicroProfile specifications, including advanced features like telemetry, metrics, and fault tolerance, including the entire MicroProfile 6.1 dependency ensures that you have all the necessary APIs at your disposal. This approach simplifies dependency management, especially for complex applications. Maven <!-- MicroProfile 6.1 API --> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>6.1</version> <type>pom</type> <scope>provided</scope> </dependency> Gradle dependencies { compileOnly 'org.eclipse.microprofile:microprofile:6.1' } For applications where size and startup time are critical (e.g., serverless functions, microservices with stringent resource constraints), including only the necessary MicroProfile specifications can help minimize the application’s footprint. This selective approach ensures that your application includes only what it needs, potentially reducing memory usage and startup time. To prevent potential conflicts or security issues associated with unused dependencies, it’s prudent to include only the specifications your application directly uses. This practice follows the principle of minimalism in software design, reducing the surface area for bugs and vulnerabilities. The list below is provided to help you select the appropriate modules for your MicroProfile application: MicroProfile Config provides a way to fetch configurations from various sources dynamically. You should use this dependency in your microservices if they require external configuration or need to be run in different environments without requiring repackaging. Maven <dependency> <groupId>org.eclipse.microprofile.config</groupId> <artifactId>microprofile-config-api</artifactId> <version>3.1</version> </dependency> MicroProfile Health allows you to define health endpoints easily. If you’re deploying your application in a environment where the service needs to report its health status. Maven <dependency> <groupId>org.eclipse.microprofile.health</groupId> <artifactId>microprofile-health-api</artifactId> <version>4.0.1</version> </dependency> MicroProfile Metrics offers a way to generate various metrics from your application, which can be consumed by monitoring tools. You should use this dependency in your microservices if you need to monitor the performance of your application. Maven <dependency> <groupId>org.eclipse.microprofile.metrics</groupId> <artifactId>microprofile-metrics-api</artifactId> <version>5.1.0</version> </dependency> MicroProfile Fault Tolerance helps applications in implementing patterns like timeout, retry, bulkhead, circuit breaker, and fallback. Applications requiring resilience and reliability, especially those facing network latency or failure in microservices environments, will benefit from it. <dependency> <groupId>org.eclipse.microprofile.fault-tolerance</groupId> <artifactId>microprofile-fault-tolerance-api</artifactId> <version>4.0.2</version> </dependency> MicroProfile JWT Authentication provides a method for using JWT tokens for securing your microservices, especially where propagation of identity and authentication information is needed across services. <dependency> <groupId>org.eclipse.microprofile.jwt</groupId> <artifactId>microprofile-jwt-auth-api</artifactId> <version>2.1</version> </dependency> MicroProfile OpenAPI offers tools for generating OpenAPI descriptions of your endpoints automatically for documenting your REST APIs. Maven <dependency> <groupId>org.eclipse.microprofile.openapi</groupId> <artifactId>microprofile-openapi-api</artifactId> <version>3.1.1</version> </dependency> MicroProfile Rest Client simplifies calling RESTful services over HTTP for type-safe invocations of HTTP services for type-safe invocations of HTTP services. Maven <dependency> <groupId>org.eclipse.microprofile.rest.client</groupId> <artifactId>microprofile-rest-client-api</artifactId> <version>3.0</version> </dependency> MicroProfile Telemetry integrates OpenTelemetry for distributed tracing For applications that need to trace requests across microservices to diagnose and monitor. Maven <project> <dependencyManagement> <dependencies> <dependency> <groupId>io.opentelemetry</groupId> <artifactId>opentelemetry-bom</artifactId> <version>1.29.0</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> <dependencies> <dependency> <groupId>io.opentelemetry</groupId> <artifactId>opentelemetry-api</artifactId> </dependency> </dependencies> </project> Jakarta EE Core Profile dependency provides the API set included in the Jakarta EE 10 Core Profile, which is optimized for developing microservices and cloud-native Java applications with a reduced set of specifications for a lighter runtime footprint. Maven <dependencies> <!-- Jakarta EE 10 Core Profile --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>10.0.0</version> <scope>provided</scope> </dependency> </dependencies> For rapidly evolving projects or those in the exploratory phase, starting with the full MicroProfile dependency might be advantageous. However, for production applications with well-defined requirements, opting for individual specifications can lead to more efficient and maintainable solutions. When choosing MicroProfile modules, start with the minimal set that meets your application’s core requirements. You can always integrate additional specifications as your application evolves. This approach keeps your application lightweight and focused on its primary functionalities, improving maintainability and performance. Always consider the compatibility between different versions of MicroProfile and your runtime environment to ensure seamless integration and deployment. == Developing a RESTful Web Service Web Services are very popular nowadays because they allow for building decoupled systems – services can communicate with each other without the knowledge of each other’s implementation details. There are many different ways to design and implement web services. One popular way is to use the Representational State Transfer (REST) architecture. A Jakarta RESTful Webservice is a web service that uses the Representational State Transfer (REST) architecture. This type of web service makes it easy to build modern, scalable web applications. The REST architecture is based on the principle that all data and functionality should be accessed through a uniform interface. This makes it easy to develop, test, and deploy web applications. To understand this better, let’s create a simple RESTful service to manage a list of products for our sample application, the MicroProfile ecommerce store. This RESTful API will allow client applications to access the product information stored as resources on the server. For example, let’s say you have a product catalog that you want to make available as a web service. With REST, you would create a URL that represents the resources (products) in your catalog. When a client (such as a web browser) requests this URL, the server would return a list of products in JSON format. An Entity class represents a specific object, in our case a product. It contains the product’s details id and name, and other properties like price, and quantity. To implement an entity class first, you need to create a Product class, as below: // Product.java package io.microprofile.tutorial.store.product.entity; import lombok.AllArgsConstructor; import lombok.Data; @Data @AllArgsConstructor @NoArgsConstructor public class Product { private Long id; private String name; private String description; private Double price; } Explanation: The Product class is a Plain Old Java Object (POJO). It has an id, name, description and price property. The id property is of type Long, The name and description properties are of type String. The price property is of type Double. @Data annotation will generate constructors, getters, and setters for all fields. By doing this, you enable the Jackson library to convert your Java objects to JSON and vice versa. All properties must be of Object type as well. Jackson cannot work with primitive types because they cannot be null. @AllArgsConstructor generates a constructor with one argument for each field in the class. This is useful for instantiating objects with all their fields initialized. @NoArgsConstructor generates a default constructor for the class. A resource class represents a collection of related resources. It includes methods for creating, updating, deleting, and retrieving (CRUD) operations on the resources. Let us now create a ProductResource class with a getProducts() method to return a list of Product objects. // ProductResource.java package io.microprofile.tutorial.store.product.resource; import java.util.ArrayList; import java.util.List; import io.microprofile.tutorial.store.product.entity.Product; import jakarta.enterprise.context.ApplicationScoped; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.Produces; import jakarta.ws.rs.core.MediaType; @Path(\"/products\") @ApplicationScoped public class ProductResource { private List<Product> products; public ProductResource() { products = new ArrayList<>(); products.add(new Product(Long.valueOf(1L), \"iPhone\", \"Apple iPhone 15\", Double.valueOf(999.99))); products.add(new Product(Long.valueOf(2L), \"MacBook\", \"Apple MacBook Air\", Double.valueOf(1299.99))); } @GET @Produces(MediaType.APPLICATION_JSON) public List<Product> getProducts() { // Return a list of products return products; } } Explanation: The ProductResource is annotated with @ApplicationScoped. This will ensure that only one instance of this class available when the application is running. The ProductResource class has a getProducts() method, which returns a list of products. This method is annotated with the @GET annotation, which maps this method to the GET HTTP method. The @Produces annotation tells the server that this method produces JSON content. This will return the following JSON response when we make a GET request to the /api/products endpoint. RESTful web services can produce and consume many different media types, including JSON, XML, and HTML. Annotations specify the media type that a method can consume or produce. For example, if a method is annotated with @Produces(MediaType.APPLICATION_JSON) it can produce JSON. Create a class named ProductRestApplication as per the code below: // ProductRestApplication.java package io.microprofile.tutorial.store.product; import jakarta.ws.rs.ApplicationPath; import jakarta.ws.rs.core.Application; @ApplicationPath(\"/api\") public class ProductRestApplication extends Application{ } Explanation: The annotation @ApplicationPath(\"/api\") specifies that any RESTful resources registered within this application will be accessed under the base path /api. For example, if you have a resource class named ProductResource mapped to the path /products, it would be accessible at /api/products. You may build the application using the following commands from your project’s root directory: $ mvn compile The above command will compile your project’s source code. $ mvn test The above command will run the test using a unit testing framework. These test should not require the code to be packaged and deployed. $mvn package The above command will create a deployment package. This section guides you through deploying your newly created product microservice to a runtime environment. Below are some of the general considerations: Runtime Compatibility: Ensure your chosen runtime supports the MicroProfile version used in your project. Packaging: Decide on a packaging format (e.g., WAR file, Docker image). Configuration: Review and adjust any runtime configuration necessary for your service. Deployment Tools: Leverage runtime-specific tools or commands for deployment. You can then deploy this application on a MicroProfile compatible server and access the web service at http://localhost:<port>/<contextRoot>/api/products. Replace <port> with the port number on which the web server or application server is listening. The <contextRoot> is a placeholder for the context root of the web application. The context root is part of the URL path that identifies the base path for the application on the web server. Below are the steps for popular options. Specific steps will depend on your chosen runtime. Open Liberty Package your application as a WAR file using Maven or Gradle by adding the packaging tag in pom.xml. <groupId>io.microprofile.tutorial</groupId> <artifactId>mp-ecomm-store</artifactId> <version>1.0-SNAPSHOT</version> <packaging>war</packaging> Add a server configuration file at the location /main/liberty/config/server.xml with the content as below: <server description=\"MicroProfile Tutorial Liberty Server\"> <featureManager> <feature>restfulWS-3.1</feature> <feature>jsonb-3.0</feature> </featureManager> <httpEndpoint httpPort=\"${default.http.port}\" httpsPort=\"${default.https.port}\" id=\"defaultHttpEndpoint\" host=\"*\" /> <webApplication location=\"mp-ecomm-store.war\" contextRoot=\"${app.context.root}\"/> </server> Add the Open Liberty configuration in the pom.xml as below: <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> <!-- Liberty configuration --> <liberty.var.default.http.port>9080</liberty.var.default.http.port> <liberty.var.default.https.port>9443</liberty.var.default.https.port> <liberty.var.app.context.root>mp-ecomm-store</liberty.var.app.context.root> </properties> Add the Open Liberty build plugin in the pom.xml as below: <build> <finalName>${project.artifactId}</finalName> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> <version>3.3.2</version> </plugin> <plugin> <groupId>io.openliberty.tools</groupId> <artifactId>liberty-maven-plugin</artifactId> <version>3.8.2</version> <configuration> <serverName>productServer</serverName> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>3.0.0</version> <configuration> <systemPropertyVariables> <http.port>${liberty.var.default.http.port}</http.port> <war.name>${liberty.var.app.context.root}</war.name> </systemPropertyVariables> </configuration> </plugin> </plugins> </build> Refer to your runtime’s documentation for instructions on running your MicroProfile application. For example, Consult the Open Liberty documentation for detailed instructions: MicroProfile - Open Liberty Docs Finally, use the following command from the command line or terminal to run the application on Liberty server. $ mvn liberty:run You can also run the following command to start the liberty server in development mode. $ mvn liberty:dev Assuming your server is running on http://localhost:9080/, you can access your service at: http://localhost:9080/mp-ecomm-store/api/products. To call this RESTful web service, you can enter the URL in your browser. The response is an array of JSON objects. Each object has an id, name, description and price property. Please note only GET methods can be tested with browsers. The response should be [{\"description\":\"Apple iPhone 15\",\"id\":1,\"name\":\"iPhone\",\"price\":999.99},{\"description\":\"Apple MacBook Air\",\"id\":2,\"name\":\"MacBook\",\"price\":1299.99}] This uses an in-memory list; In the next chapter, in a real application you should integrate a database (via Jakarta Persistence API). We will be learning about this in the next chapter. Quarkus Build your application as a native executable or Docker image. Run the generated executable or deploy the Docker image to a container platform. Refer to the Quarkus documentation for deployment guides: Creating your first application - Quarkus Payara Micro Package your application as a WAR file. Deploy the WAR to a Payara Micro server instance. See the Payara Micro documentation for specific instructions: Getting Started with Payara Micro WildFly Package your application as a WAR file. Deploy the WAR to a WildFly server instance. Refer to the WildFly documentation for deployment details: WildFly Developer Guide Helidon Choose between Helidon SE (native packaging) or Helidon MP (WAR packaging). Build your application using Gradle. Follow the relevant Helidon documentation for deployment steps: Helidon - Getting Started TomEE Package your application as a WAR file. Deploy the WAR file to the TomEE server instance. Refer to the TomEE documentation for instructions: Serverless TomEE MicroProfile Containerization: Consider using containerization technologies like Docker and Kubernetes for portability and scalability. Cloud Deployment: Explore cloud platforms like AWS, Azure, or GCP. == Testing your microservice Testing your microservice is critical for ensuring the reliability and robustness of your microservice. Maven, being a powerful project build management tool, simplifies this process by automating the test execution. To create tests for your microservice, start by creating a class called ProductResourceTest, which contains unit tests for the ProductResource class as below: // ProductResourceTest.java package io.microprofile.tutorial.store.product.resource; import static org.junit.jupiter.api.Assertions.assertEquals; import static org.junit.jupiter.api.Assertions.assertNotNull; import java.util.List; import org.junit.jupiter.api.AfterEach; import org.junit.jupiter.api.BeforeEach; import org.junit.jupiter.api.Test; import io.microprofile.tutorial.store.product.entity.Product; public class ProductResourceTest { private ProductResource productResource; @BeforeEach void setUp() { productResource = new ProductResource(); } @AfterEach void tearDown() { productResource = null; } @Test void testGetProducts() { List<Product> products = productResource.getProducts(); assertNotNull(products); assertEquals(2, products.size()); } } Explanation: Below are the assertions to test the getProducts() method of ProductService: * The assertNotNull(products); assertion checks that products are not null. It ensures the method returns a list, even if it’s empty. * The assertEquals(2, products.size()); assertion verifies that the list contains two products. To run the unit tests defined in ProductResourceTest, follow these steps: Open a Terminal or Command Prompt: Navigate to the root directory of your project where the pom.xml file is located. This file contains the Maven project definition, including dependencies and test configurations. Execute the Maven Test Command: Enter the following command to initiate the execution of the unit tests: $ mvn test This command tells Maven to execute the test phase of the build lifecycle. Maven will compile the test source code, execute the test cases, and provide a summary of the test execution results. Review Test Results: After running the tests, Maven displays the results in the terminal. Look for the Tests run:, Failures:, and Errors: summaries to assess the outcome. For the ProductResourceTest class, ensure that the test methods execute successfully and meet the expected assertions: Addressing Failures: If any tests fail, Maven will highlight these failures in the output. Use this information to identify and fix issues in your code. Review the failing tests' output for details on the assertion failures and adjust your microservice implementation accordingly. Rerun Tests: After making any necessary changes to your microservice code, rerun the tests using the mvn test command to verify that all issues have been resolved and that your microservice behaves as expected. By following these steps, you can leverage Maven to efficiently run and manage unit tests for your microservice, ensuring its functionality and reliability before deployment. Now that you have a basic MicroProfile service, consider exploring further: Adding configuration with MicroProfile Config Implementing health checks using MicroProfile Health Enhancing your service with MicroProfile Fault Tolerance MicroProfile Official Website: https://microprofile.io/ MicroProfile GitHub Repository: https://github.com/eclipse/microprofile MicroProfile Documentation and Guides: MicroProfile Official documentation After completing this chapter, you should have a basic understanding of MicroProfile and how to start building microservices with it. Continue exploring the specifications and capabilities of MicroProfile to fully leverage its power in your microservices architecture. == Package Structure The Table below provides an overview of the package structure and their purposes within a typical Java-based microservices architecture. Package Description dto Data Transfer Objects (DTOs) are used to transfer data between processes, such as from your service to a REST endpoint. They often mirror entity classes but can be tailored to the needs of the client to avoid over-fetching or under-fetching data. entity Entity classes represent the domain model and are typically mapped to database tables. These are the core classes that represent the business data and are often used with ORM tools like JPA. repository Interfaces in this package abstract the data layer, making it easier to perform CRUD operations without dealing with database intricacies directly. This follows the Repository pattern. Data access layer, interacting with databases or other storage mechanisms (e.g., ProductRepository, CustomerRepository). service Service classes contain the core business logic. They interact with repositories to fetch and persist data and perform operations specific to the business requirements. (e.g., ProductService, OrderService, InventoryService). resource REST resource classes (sometimes called controllers in other frameworks) are the entry points for HTTP requests. They interact with service classes to process these requests. Interfaces defining endpoints for REST services (e.g., ProductResource, ShoppingCartResource). common This package contains classes and interfaces that are shared across different microservices, such as utility classes, common configuration, exception handling, and security-related classes. client For microservices to communicate with each other, they often use HTTP clients. This package contains interfaces or classes annotated for use with MicroProfile Rest Client or similar, facilitating easy communication between your services. config Configuration classes for MicroProfile Config. exception Custom exceptions for error handling (e.g., ProductNotFoundException, PaymentFailedException). util Helper and utility classes. Base Package: io.microprofile.tutorial.store io.microprofile.tutorial.store ├── product │ ├── resource │ ├── config │ ├── exception │ ├── entity │ ├── repository │ ├── service │ └── util ├── cart │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── client │ ├── exception │ └── util ├── user │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── inventory │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── order │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util ├── payment │ ├── resource │ ├── entity │ ├── service │ ├── repository │ ├── exception │ └── util └── shipment ├── resource ├── entity ├── service ├── repository ├── exception └── util ---- TODO: Current package structure is just a proposal will update after completing the source code for all chapters Java Development Kit (JDK) A software development environment used for developing Java applications. It includes the Java Runtime Environment (JRE), an interpreter/loader (Java), a compiler (javac), an archiver (jar), a documentation generator (Javadoc), and other tools needed in Java development. Integrated Development Environment (IDE) A software application that provides comprehensive facilities to computer programmers for software development. Examples include Eclipse, IntelliJ IDEA, NetBeans, and Visual Studio Code. RESTful Service A web service implementing REST (Representational State Transfer) principles, providing interoperability between computer systems on the internet. Runtime Environment The environment in which programs are executed. It includes everything your application needs to run in production, such as an operating system, a runtime (like JVM for Java applications), libraries, and environment variables. JUnit A unit testing framework for Java, used to write and run repeatable tests. Containerization A lightweight alternative to full machine virtualization that involves encapsulating an application in a container with its own operating environment. Cloud Deployment Deploying applications in cloud environments, leveraging cloud resources like compute instances, storage, and networking capabilities.","title":"Chapter 2: Getting Started with MicroProfile","component":"microprofile-tutorial","version":"6.1","name":"chapter02","url":"/microprofile-tutorial/6.1/chapter02/chapter02.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics Covered","hash":"topics-covered","id":2},{"text":"Development Environment Setup","hash":"development-environment-setup","id":3},{"text":"Java Development Kit (JDK)","hash":"java-development-kit-jdk","id":4},{"text":"Build Tools (Maven or Gradle)","hash":"build-tools-maven-or-gradle","id":5},{"text":"Installing Apache Maven","hash":"installing-apache-maven","id":6},{"text":"Gradle","hash":"gradle","id":7},{"text":"Integrated Development Environments","hash":"integrated-development-environments","id":8},{"text":"Eclipse for Enterprise Java and Web Developers","hash":"eclipse-for-enterprise-java-and-web-developers","id":9},{"text":"IntelliJ IDEA","hash":"intellij-idea","id":10},{"text":"Apache NetBeans","hash":"apache-netbeans","id":11},{"text":"Visual Studio Code","hash":"visual-studio-code","id":12},{"text":"Setting up MicroProfile Runtime","hash":"setting-up-microprofile-runtime","id":13},{"text":"Open Liberty","hash":"open-liberty","id":14},{"text":"Quarkus","hash":"quarkus","id":15},{"text":"Payara Micro","hash":"payara-micro","id":16},{"text":"WildFly","hash":"wildfly","id":17},{"text":"Helidon","hash":"helidon","id":18},{"text":"Apache TomEE","hash":"apache-tomee","id":19},{"text":"MicroProfile Starter","hash":"microprofile-starter","id":20},{"text":"Using Your IDE","hash":"using-your-ide","id":21},{"text":"Using Maven from Command Line (Terminal)","hash":"using-maven-from-command-line-terminal","id":22},{"text":"Use the Entire MicroProfile Dependency","hash":"use-the-entire-microprofile-dependency","id":23},{"text":"Use Individual MicroProfile Specification Dependencies","hash":"use-individual-microprofile-specification-dependencies","id":24},{"text":"Creating an Entity class","hash":"creating-an-entity-class","id":25},{"text":"Creating a Resource class","hash":"creating-a-resource-class","id":26},{"text":"Creating a Resource class","hash":"creating-a-resource-class-2","id":27},{"text":"Building Your Application","hash":"building-your-application","id":28},{"text":"Deploying your microservices","hash":"deploying-your-microservices","id":29},{"text":"General Considerations:","hash":"general-considerations","id":30},{"text":"Deployment Options","hash":"deployment-options","id":31},{"text":"Running Your Application","hash":"running-your-application","id":32},{"text":"Additional Considerations:","hash":"additional-considerations","id":33},{"text":"Running Unit Tests with Maven","hash":"running-unit-tests-with-maven","id":34},{"text":"Next Steps","hash":"next-steps","id":35},{"text":"Resources","hash":"resources","id":36},{"text":"Glossary","hash":"glossary","id":37}]},"12":{"id":12,"text":"This chapter delves into the Jakarta EE 10 Core Profile, a specification designed specifically for microservices and cloud-native apps. Jakarta EE is a comprehensive framework within the Java ecosystem for crafting enterprise-grade applications. Complementing this, MicroProfile addresses the intricacies of microservices development, such as configuration management, fault tolerance, health checks, and monitoring. The foundation of MicroProfile is built on the strong and established standards of Jakarta EE, which ensures smooth integration of these modern APIs with the enterprise Java landscape. In this chapter, through practical examples, we will explore the critical features of the Jakarta EE 10 Core Profile that are most relevant to microservices development, including Contexts and Dependency Injection (CDI), Jakarta RESTful Web Services (Jakarta REST, formerly JAX-RS), JSON Binding and JSON Processing. By the end of this chapter, you will gain a comprehensive understanding of Jakarta EE 10 Core Profile as a foundational platform for developing microservices with MicroProfile. You will be able to appreciate the pivotal role of Jakarta EE in the MicroProfile ecosystem and how its core functionalities develop scalable, resilient, and portable cloud-native applications. Understanding the Jakarta EE 10 Core Profile Key Specifications in Core Profile Managing Component Dependencies Handling HTTP Methods and Resources Best Practices for Building Robust and Scalable Applications The Jakarta EE 10 Core Profile is a streamlined subset of the full Jakarta EE platform explicitly designed for building lightweight microservices and cloud-native applications. It provides a standardized foundation for smaller runtime environments, comprising of a curated selection of Jakarta EE specifications: Jakarta Annotations: Enables developers to decorate their code with metadata to influence system configuration and behavior, making the code concise, readable, and maintainable. Jakarta Contexts and Dependency Injection Lite: Facilitates the management of lifecycle contexts of stateful components and the injection of dependencies. Jakarta Interceptors: Offers a means to intercept business method invocations and lifecycle events, ideal for implementing cross-cutting concerns such as logging. Jakarta JSON Processing and Jakarta JSON Binding: Simplifies the parsing, generation, and binding of JSON data for Java objects, crucial for RESTful service communication. Jakarta REST: Provides a framework for creating web services according to the REST architectural pattern, enhancing web API development. Let’s delve deeper into some of the specifications included in the Jakarta Core Profile to understand their importance and functionality: This specification simplifies the code by reducing the need for external configuration files and making the intentions behind code clear. Annotations are extensively used across various Jakarta EE specifications. Simplification of Configuration: Annotations reduce the need for XML configuration files, making the setup more straightforward and less error-prone. Enhanced Readability and Maintenance: Code decorated with annotations is easier to read and maintain, as the configuration is co-located with the code it configures. Wide Adoption: Used across the Jakarta EE platform for a variety of purposes, including dependency injection, defining REST endpoints, and configuring beans. CDI is the specification that unifies the Jakarta EE platform by providing a consistent way to manage the lifecycle of stateful components and their interactions. The CDI Lite section of the specification is tailored for environments where full CDI support may be too heavyweight, such as microservices and serverless deployments. Type-safe Dependency Injection: Enables the injection of beans in a type-safe manner, reducing runtime errors and improving developer productivity. Contextual Lifecycle Management: Manages the lifecycle of beans according to well-defined contexts, simplifying state management across different scopes. Interceptors: Supports the use of interceptors for adding behavior to beans or for altering their behavior in a non-invasive manner. The CDI Lite Tutorial is an invaluable resource, if you are looking to gain a solid foundation in CDI Lite and its role within the Jakarta EE ecosystem, especially in the context of building lightweight microservices and cloud-native applications. It will take you through the basics, advanced features, and the practical application of CDI Lite, equipping you with the knowledge to make the most out of this powerful specification. Jakarta Interceptors allow developers to define methods that intercept business method invocations and lifecycle events on Jakarta EE components. This is particularly useful for implementing cross-cutting concerns such as logging, transactions, security, and more, without cluttering business logic. Separation of Concerns: Helps in separating cross-cutting concerns (like logging, transaction management, and security) from business logic. Reusability: Interceptors can be defined once and applied to multiple beans, promoting code reuse. Configurability: Interceptors can be enabled, disabled, or reordered through configuration, offering flexibility in their application. For an in-depth understanding of Jakarta Interceptors, We highly recommend you to read the Jakarta Interceptors Tutorial. This tutorial covers everything from basic concepts to advanced usage scenarios, providing a solid foundation for effectively utilizing interceptors in your projects. Jakarta JSON Processing (JSON-P) is a specification in the Jakarta EE platform that provides a portable API to parse, generate, transform, and query JSON data in a Java application. It is part of the larger ecosystem of Jakarta EE specifications designed to facilitate the development of enterprise applications with support for modern data formats and protocols, including JSON, which is widely used in web services and RESTful APIs. Parsing and Generation: JSON-P allows for both the parsing of JSON data into a Java representation and the generation of JSON data from Java objects. This can be done using either a streaming API for efficiency with large data sets or a more intuitive object model API for ease of use. Object Model API: This API provides a way to build or manipulate JSON data using a DOM-like tree structure. It enables developers to create, access, and modify JSON data in a flexible manner. Streaming API: The streaming API (JsonParser and JsonGenerator) offers a lower-level, event-based approach to parsing and generating JSON. It is highly efficient, making it suitable for processing large volumes of JSON data with minimal memory overhead. Data Binding: While JSON-P itself does not directly support data binding (converting between JSON and Java POJOs), it lays the groundwork for such functionality, which is further extended by Jakarta JSON Binding (JSON-B). For an in-depth exploration of Jakarta JSON Processing, including understanding JSON’s syntax, its applications in web services, and the programming models for manipulating JSON data, readers are encouraged to visit the Jakarta EE tutorial. This tutorial offers comprehensive guidance on both the object and streaming models for JSON data handling, suitable for beginners and advanced users alike. Learn more at the Jakarta EE Documentation on JSON Processing. Jakarta JSON Binding (JSON-B) is a specification within the Jakarta EE platform that provides a high-level API for converting (binding) Java objects to and from JSON documents. It sits on top of Jakarta JSON Processing (JSON-P) and offers a more convenient way to work with JSON data than manually parsing and generating JSON using JSON-P’s lower-level APIs. JSON-B is designed to simplify the task of serializing Java objects into JSON and deserializing JSON into Java objects, making it an essential tool for developing modern Java enterprise applications that interact with web services, RESTful APIs, and microservices. Automatic Binding: JSON-B can automatically bind Java objects to JSON and vice versa without requiring manual parsing, significantly simplifying code and reducing boilerplate. Customization: It provides annotations that allow developers to customize the serialization and deserialization process, such as changing property names in JSON, including or excluding specific fields, and handling custom data types. Support for Java Generics: JSON-B can handle complex objects, including those that use Java Generics, ensuring type safety during the binding process. Integration with JSON-P: JSON-B is built on top of JSON-P and can seamlessly integrate with it, allowing developers to mix high-level object binding with low-level JSON processing as needed. If you are interested in diving deeper into the specifics of JSON Binding, We highly recommend you to visit the Jakarta EE tutorial. It provides detailed insights into how JSON Binding works, including the processes for converting Java objects to JSON and vice versa. This knowledge is crucial for effectively managing JSON data in Java-based enterprise applications. Learn more at the Jakarta EE Documentation on JSON Binding. Jakarta RESTful Web Services(Jakarta REST) is a specification for creating web services according to the Representational State Transfer (REST) architectural pattern. It provides annotations to define resources and operations, making it straightforward to develop APIs for web applications. Annotation-driven Development: Simplifies the creation of web services by using annotations to define resources, HTTP methods, and response types. Flexible Data Format Support: While JSON is commonly used, JAX-RS supports a variety of data formats, providing flexibility in API design. Client API: Includes a client API for creating HTTP requests to RESTful services, facilitating communication between microservices. The Jakarta EE 10 Core Profile’s focus on these specifications underscores its aim to provide a lightweight, yet comprehensive platform for developing modern Java applications suited for microservices architectures and cloud-native environments. For those looking to master developing RESTful Web Services, we strongly encourage you to explore Jakarta RESTful Web Services Tutorial. This comprehensive tutorial offers a deep dive into the Jakarta RESTful Web Services specification, demonstrating how to create, deploy, and manage RESTful services efficiently. Jakarta Annotations and CDI plays a central role in integrating different Jakarta EE specifications, such as Jakarta Persistence API (formerly JPA) for database operations and Jakarta RESTful Web Services (formerly JAX-RS) for web services. Let’s now enhance the product microservices we developed previously. Jakarta Annotations is used for defining RESTful services and injecting dependencies. For instance, in our product microservices, we can update the Product and ProductRepository class to include annotations that facilitate entity management and dependency injection: package io.microprofile.tutorial.store.product.entity; import jakarta.persistence.Entity; import jakarta.persistence.Id; import jakarta.persistence.GeneratedValue; import jakarta.validation.constraints.NotNull; @Entity @Table(name = \"Product\") @NamedQuery(name = \"Product.findAllProducts\", query = \"SELECT p FROM Product p\") @NamedQuery(name = \"Product.findProductById\", query = \"SELECT p FROM Product p WHERE p.id = :id\") @Data @AllArgsConstructor @NoArgsConstructor public class Product { @Id @GeneratedValue private Long id; @NotNull private String name; @NotNull private String description; @NotNull private Double price; } Explanation: @Entity and @Table(name = \"Product\"): These annotations declare the class as a Jakarta Persistence entity and map it to a database table named \"Product\". @Id and @GeneratedValue: These annotations denote the id field as the primary key of the entity and indicate that its value should be generated automatically. @NotNull: This annotation from Jakarta Bean Validation ensures that the name, description, and price fields cannot be null, enforcing data integrity at the application level. @NamedQuery: These annotations define Jakarta Persistence API named queries for common operations, such as retrieving all products or finding a product by its ids. These can be used throughout the application to interact with the database in a consistent manner. @Data, @AllArgsConstructor, and @NoArgsConstructor: These annotations from Project Lombok automatically generate boilerplate code such as getters, setters, a no-arguments constructor, and an all-arguments constructor. This keeps the entity class concise and focused on its fields and annotations related to Jakarta Persistence. The ProductRepository class serves as a bridge between the application’s business logic layer and the database, performing CRUD (Create, Read, Update, Delete) operations on Product entities. It exemplifies the separation of concerns, a fundamental principle in enterprise Java applications, by cleanly segregating the data access logic from the business logic. package io.microprofile.tutorial.store.product.repository; import java.util.List; import io.microprofile.tutorial.store.product.entity.Product; import jakarta.enterprise.context.RequestScoped; import jakarta.persistence.EntityManager; import jakarta.persistence.PersistenceContext; @RequestScoped public class ProductRepository { @PersistenceContext(unitName = \"product-unit\") private EntityManager em; public void createProduct(Product product) { em.persist(product); } public Product updateProduct(Product product) { return em.merge(product); } public void deleteProduct(Product product) { em.remove(product); } public List<Product> findAllProducts() { return em.createNamedQuery(\"Product.findAllProducts\", Product.class).getResultList(); } public Product findProductById(Long id) { return em.find(Product.class, id); } public List<Product> findProduct(String name, String description, Double price) { return em.createNamedQuery(\"Event.findProduct\", Product.class) .setParameter(\"name\", name) .setParameter(\"description\", description) .setParameter(\"price\", price).getResultList(); } } Explanation: ProductRepository: This class utilizes Jakarta Persistence API (JPA) for database operations, encapsulating the CRUD (Create, Read, Update, Delete) operations along with methods to find products by various criteria. @RequestScoped: This CDI annotation for ProductRepository class indicates that an instance of this class is created for each HTTP request to ensure that database operations are handled within the context of a single request. @PersistenceContext: This annotation injects an entity manager instance, em, specifying the persistence unit product-unit. The entity manager is the primary JPA interface for database interactions. The methods createProduct(), updateProduct(), deleteProduct(), findAllProducts(), and findProductById() methods define CRUD operations that might be performed by the repository. These methods utilize the EntityManager instance to persist, merge, remove, and query for product entities. The EntityManager is responsible for managing the persistence context and performing CRUD operations on the entities. The ProductRepository serves as a foundational example for developers to understand how to construct a data access layer in a MicroProfile application, emphasizing the significance of CDI in managing component lifecycles and dependencies, as well as showcasing the application of Jakarta Persistence for Object Relational Mapping(ORM) based data access. CDI defines several built-in scopes to manage the lifecycle of beans, each corresponding to a specific context within the application. When a bean is needed, the CDI container automatically creates it within its defined scope, manages its lifecycle, and destroys it when the context ends. This process is largely transparent to the developer, simplifying development. To learn more about using built-in scopes in CDI for the lifecycle management of beans, We highly recommend visiting the Using Scopes section of the Jakarta EE Tutorial. This resource provides valuable insights into each scope and how to use them effectively in your applications. Jakarta RESTful Web Services annotations are utilized to define endpoints for the web services, facilitating the creation and management of RESTful APIs. The ProductResource class demonstrates this: package io.microprofile.tutorial.store.product.resource; import java.util.List; import io.microprofile.tutorial.store.product.entity.Product; import io.microprofile.tutorial.store.product.repository.ProductRepository; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; import jakarta.ws.rs.*; import jakarta.ws.rs.core.MediaType; @Path(\"/products\") @ApplicationScoped public class ProductResource { @Inject private ProductRepository productRepository; @GET @Produces(MediaType.APPLICATION_JSON) @Transactional public List<Product> getProducts() { // Return a list of products return productRepository.findAllProducts(); } // Additional endpoint methods } The @ApplicaitonScoped is an CDI annotation that specifies that the bean is application-scoped, meaning there will be a single instance of ProductResource for the entire application, which promotes better resource utilization and performance. The @Inject annotation is commonly used in CDI to inject instances into the application classes without needing to do manual lookups or new instance creations. For example, When ProductResource needed a repository to fetch products from a database, we used @Inject to incorporate that repository seamlessly. @Path and @GET: Defines the URI path and HTTP method for accessing the getProducts endpoint. When creating a REST API, you typically start by defining the resources that your API will expose. A unique URI identifies each resource. You then define the operations that can be performed on each resource. These operations are typically CRUD operations: create, read, update, and delete. Let us now create a RESTful API to manage a list of products for a store. This RESTful API allows client applications to access the product stored as resources on the server. The API is implemented using Jakarta EE and REST architectural style. The API has the following methods: GET /api/products: Retrieves a list of products POST /api/products: Creates a new product, the product details are provided as JSON in the request body PUT /api/products: Updates an existing product, the updated product details are provided as JSON in the request body DELETE /api/products/chapter03: Deletes a product, the product id is provided in the request URL path Multiple annotations can be used together in a single method to support multiple media types. For example, When both @Consumes(MediaType.APPLICATION_JSON) and @Produces(MediaType.APPLICATION_XML) are used together in a single method, then the method can consume JSON and produce XML. Table 3-1 shows a list of some of the popular Media types along with their constant fields in jakarta.ws.rs.core.MediaType class and corresponding HTTP ContentType: Media Type Constant Field Description application/json MediaType.APPLICATION_JSON JSON format, used for representing structured data. application/xml MediaType.APPLICATION_XML XML format, used for representing structured data in XML format. text/xml MediaType.TEXT_XML XML format, primarily used for XML data that is human-readable. text/plain MediaType.TEXT_PLAIN Plain text format, used for unstructured text data. text/html MediaType.TEXT_HTML HTML format, used for markup data that can be rendered by web browsers. application/octet-stream MediaType.APPLICATION_OCTET_STREAM Binary data stream, used for transmitting files or streaming. application/x-www-form-urlencoded MediaType.APPLICATION_FORM_URLENCODED Web form format, used for submitting form data in HTTP requests. multipart/form-data MediaType.MULTIPART_FORM_DATA Multipart format, used for uploading files through web forms. application/vnd.api+json Custom JSON API format, a specification for how clients should request and modify resources. application/hal+json Custom Hypertext Application Language (HAL) JSON format, used for linking between resources in APIs. After having successfully performed the development and testing of the GET method of ProductResource to fetch the list of product resources. Let’s now call the create, update and delete methods for our Products REST API. For this you only need to add additional methods of our ProductResource class. @POST @Consumes(MediaType.APPLICATION_JSON) @Transactional public Response createProduct(Product product) { System.out.println(\"Creating product\"); productRepository.createProduct(product); return Response.status(Response.Status.CREATED) .entity(\"New product created\").build(); } Explanation: The createProduct() method is annotated with @POST, which means it can be invoked via an HTTP POST request. The @Consumes(MediaType.APPLICATION_JSON) annotation says it will consume JSON data. This method takes a single parameter, which is of type Product`. This parameter will be populated with the data sent in the HTTP POST request. The method creates a new Product object and adds it to the list of products. Finally, the method returns a Response object with a status code of 201 (Created) and a message indicating that a new product has been created. You can use a REST client such as Postman or the cURL command line utility to test the HTTP methods (including PUT, POST, DELETE). To verify the POST request, you can use the following cURL command. This sends a JSON object representing a new product to your microservice. Command: $ curl -H 'Content-Type: application/json' -d '{ \"id\": \"3\", \"name\":\"iPhone 14\", \"description\":\"Apple iPhone 14\", \"price\":\"799.99\"}' -X POST http://localhost:9080/mp-ecomm-store/api/products Output: New product created This command specifies the content type as JSON and sends a data payload representing a product with an ID of 3, the name \"iPhone 14\", a description of \"Apple iPhone 14\", and a price of 799.99. The -X POST parameter indicates that this is a POST request. Upon successful execution, your service should process this data and add the new product to the database. Next you can verify the addition of the new product, by calling the GET method using cURL or browser as described previously to list all products. This request should now return an updated list of products, including the newly added product. $ curl http://localhost:9080/mp-ecomm-store/api/products Updating existing product information is a common operation for RESTful services managing a catalog of items. The PUT request method is designed for these scenarios, allowing you to modify an existing product’s details. The code snippet below demonstrates updating the product: @PUT @Consumes(MediaType.APPLICATION_JSON) @Transactional public Response updateProduct(Product product) { // Update an existing product Response response; System.out.println(\"Updating product\"); Product updatedProduct = productRepository.updateProduct(product); if (updatedProduct != null) { response = Response.status(Response.Status.OK) .entity(\"Product updated\").build(); } else { response = Response.status(Response.Status.NOT_FOUND) .entity(\"Product not found\").build(); } return response; } Explanation: The @PUT annotation defines that the method updateProduct() can be invoked via an HTTP PUT request. As in the POST method, the @Consumes(MediaType.APPLICATION_JSON) annotation specifies the method will consume JSON data. This method takes a single parameter, which is of type Product. This parameter will be populated with the data sent in the HTTP PUT request. The method updates the product with the same id as the one sent in the request. If a product with the same id is not found, the method returns a 404 (Not Found) error. Finally, the method returns a Response object with a status code of 204 (No Content) and a message indicating that an existing product has been updated. To test the PUT request, you can use the following cURL command. $ curl -H 'Content-Type: application/json' -d '{ \"id\": \"3\",\"name\":\"iPhone14\", \"description\":\"Apple iPhone 14\", \"price\":\"749\"}' -X PUT http://localhost:5050/mp-ecomm-store/api/products Next you can verify the updation of the new product, by calling the GET method using cURL or browser as described previously to list all products. $ curl http://localhost:9080/mp-ecomm-store/api/products @DELETE @Path(\"products/{id}\") public Response deleteProduct(@PathParam(\"id\") Long id) { // Delete a product Response response; System.out.println(\"Deleting product with id: \" + id); Product product = productRepository.findProductById(id); if (product != null) { productRepository.deleteProduct(product); response = Response.status(Response.Status.OK) .entity(\"Product deleted\").build(); } else { response = Response.status(Response.Status.NOT_FOUND) .entity(\"Product not found\").build(); } return response; } Explanation: The @DELETE annotation defines that the method deleteProduct() can be invoked via an HTTP DELETE request. The @Path annotation specifies the id path parameter that will be used to identify which product to delete. This method takes a single parameter of type Long and is annotated with the @PathParam annotation. This parameter will be populated with the id path parameter from the HTTP DELETE request. The method deletes the product with the same id as the one sent in the request. If a product with the same id is not found, the method returns a 404 (Not Found) error. Finally, the method returns a Response object with a status code of 204 (No Content) and a message indicating that an existing product has been deleted. The code demonstrated in this chapter is not production quality. It was highly simplified to explain to you the fundamental principles of the REST API. In the upcoming chapters, you will be further building upon this code. By implementing many features from the latest MicroProfile and Jakarta EE standards, you would be making it more a robust microservice that is also cloud-ready. You would also learn to containerize, scale, deploy and manage this application. This chapter has laid a solid foundation on the Jakarta EE 10 Core Profile, emphasizing its crucial role in the development of microservices using MicroProfile. By delving into key specifications and through practical implementation examples, you have been equipped with the necessary knowledge to utilize the Jakarta EE 10 Core Profile’s features for creating scalable, resilient, and portable cloud-native applications. Additionally, this chapter guided you through the creation of RESTful web services using Jakarta EE Restful Web Services APIs, providing an overview of REST (Representational State Transfer), it aimed to familiarize you with the basics of REST, enabling you to create and deploy a RESTful web service independently. As we move forward, the next chapter will delve deeper into the REST architectural pattern, exploring standard conventions, design considerations, and best practices. It will cover many advanced concepts essential for building RESTful web services tailored for cloud-native and microservices-based applications, preparing you for more sophisticated aspects of modern application development.","title":"Chapter 3: Jakarta EE 10 Core Profile","component":"microprofile-tutorial","version":"6.1","name":"chapter03","url":"/microprofile-tutorial/6.1/chapter03/chapter03.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":2},{"text":"Understanding the Jakarta EE 10 Core Profile","hash":"understanding-the-jakarta-ee-10-core-profile","id":3},{"text":"Key Specifications in Jakarta EE 10 Core Profile","hash":"key-specifications-in-jakarta-ee-10-core-profile","id":4},{"text":"Jakarta Annotations","hash":"jakarta-annotations","id":5},{"text":"Key Features","hash":"key-features","id":6},{"text":"Jakarta Contexts and Dependency Injection (CDI) - CDI Lite","hash":"jakarta-contexts-and-dependency-injection-cdi-cdi-lite","id":7},{"text":"Key Features of Contexts and Dependency Injection (CDI) - CDI Lite","hash":"key-features-of-contexts-and-dependency-injection-cdi-cdi-lite","id":8},{"text":"Jakarta Interceptors","hash":"jakarta-interceptors","id":9},{"text":"Key Features of Jakarta Interceptors","hash":"key-features-of-jakarta-interceptors","id":10},{"text":"Jakarta JSON Processing","hash":"jakarta-json-processing","id":11},{"text":"Key Features of Jakarta JSON Processing","hash":"key-features-of-jakarta-json-processing","id":12},{"text":"Jakarta JSON Binding","hash":"jakarta-json-binding","id":13},{"text":"Key Features of Jakarta JSON Binding","hash":"key-features-of-jakarta-json-binding","id":14},{"text":"Jakarta RESTful Web Services","hash":"jakarta-restful-web-services","id":15},{"text":"Key Features of Jakarta RESTful Web Services","hash":"key-features-of-jakarta-restful-web-services","id":16},{"text":"Managing Component Dependencies","hash":"managing-component-dependencies","id":17},{"text":"Entity class","hash":"entity-class","id":18},{"text":"Repository class","hash":"repository-class","id":19},{"text":"Lifecycle Management of Beans in Jakarta EE","hash":"lifecycle-management-of-beans-in-jakarta-ee","id":20},{"text":"Handling HTTP Methods and Resources","hash":"handling-http-methods-and-resources","id":21},{"text":"Defining RESTful APIs","hash":"defining-restful-apis","id":22},{"text":"Implementing REST APIs for Managing Products Data","hash":"implementing-rest-apis-for-managing-products-data","id":23},{"text":"Creating a Product","hash":"creating-a-product","id":24},{"text":"Verifying the POST request","hash":"verifying-the-post-request","id":25},{"text":"Updating a Product","hash":"updating-a-product","id":26},{"text":"Verifying the PUT request","hash":"verifying-the-put-request","id":27},{"text":"Deleting a Product","hash":"deleting-a-product","id":28},{"text":"Summary","hash":"summary","id":29}]},"13":{"id":13,"text":"In the previous chapter, we saw how RESTful APIs facilitate language-agnostic access to web services from diverse environments. However, a clear and comprehensive contract is required to ensure seamless integration between clients and services. This need for a well-defined API contract has led to the adoption of the OpenAPI specification. This chapter will explore the primary features of MicroProfile OpenAPI, demonstrate how to integrate it into your MicroProfile applications, and show you how to annotate your RESTful services to produce rich documentation that adheres to the OpenAPI specification. Furthermore, we will introduce the OpenAPI UI, a visual interface allowing developers and stakeholders to interact with and visualize the documented APIs, enhancing understanding and facilitating integration. Introduction to MicroProfile OpenAPI API Specification using MicroProfile Open API Generating API Documentation Documenting Authentication and Authorization Requirements Exploring the APIs using Swagger UI The Open API Specification (OAS), formerly Swagger specification, is a technical specification that allows REST API providers to describe and publish their APIs using a format that various tools can consume. It defines a standard, language-agnostic interface to RESTful APIs, making it easy for third-party tools to generate documentation, client SDKs, and a range of tools that promote the seamless consumption of RESTful APIs. The OpenAPI Initiative, a consortium of industry experts committed to standardizing how to describe REST APIs, maintains the OpenAPI Specification. It is a community-driven initiative, and many large organizations use it, including Google, Microsoft, and Amazon. The OpenAPI specification enables creation of a well-defined, clear and comprehensive API contract. It provides a standardized way to describe the API’s structure, expected requests and responses, and authentication mechanisms, making it easier to develop, test, and maintain RESTful APIs. The MicroProfile OpenAPI specification builds upon the widely recognized OpenAPI Specification (OAS) and leverages annotations from the Jakarta Restful Web Services specification. The primary focus of MicroProfile OpenAPI is on defining REST APIs that utilize JSON within the context of HTTP. The specification aims to provide a uniform way of describing APIs so that they are both human-readable and machine-readable. It facilitates the creation of APIs that are consistent, well-documented, and easily consumable by both humans and machines. MicroProfile OpenAPI provides a suite of Java APIs that allows developers to define and generate API specifications that adhere to OpenAPI v3 standards. As a result, it simplifies the process of designing, documenting, and publishing RESTful APIs for developers. Developers can quickly generate documentation for their microservices using MicroProfile OpenAPI. The documentation includes information on what services are provided, how to invoke them, and what data types are used. It generates comprehensive metadata about services, ensuring interoperability across diverse platforms and tools. Also, documentation can generate client code to access the web services. The OpenAPI Specification fuels a rich ecosystem of tools that automate and support. This specification streamlines the creation of OpenAPI documentation for RESTful services using a unified approach. It generates comprehensive metadata about services, ensuring interoperability across diverse platforms and tools: API Documentation Generation: Intuitive interactive documentation portals emerge directly from the specification. Client SDK Creation: Client libraries in various languages can be automatically generated. API Testing: Testing frameworks can leverage the specification to design robust tests. API Mocking: Simplifies mocking APIs for testing and development purposes. There are multiple ways in which you can generate OpenAPI documents. The most common way is to use annotations. This only requires augmenting your Jakarta Restful Web Services annotations with OpenAPI annotations. Besides annotations, a predefined OpenAPI document may be provided in either YAML or JSON format. This so-called static model will be merged with the model generated by scanning for Jakarta REST endpoints and the combined result will be made available to clients. However, the annotation-based approach is recommended as it is more maintainable and easier to understand. Finally, you can filter out the resources you do not want to document using configuration. To document Jakarta RESTful Web Services using MicroProfile OpenAPI, we need to annotate the resource classes and methods with the OpenAPI annotation. To use MicroProfile OpenAPI in your project, you need to add the following maven coordinates to your project: <dependency> <groupId>org.eclipse.microprofile.openapi</groupId> <artifactId>microprofile-openapi-api</artifactId> <version>3.1.1</version> </dependency> Below is an illustrative example of how you might annotate a method in the ProductResource class to achieve this documentation using MicroProfile OpenAPI annotations: import org.eclipse.microprofile.openapi.annotations.Operation; import org.eclipse.microprofile.openapi.annotations.responses.APIResponse; import org.eclipse.microprofile.openapi.annotations.media.Content; import org.eclipse.microprofile.openapi.annotations.media.Schema; import org.eclipse.microprofile.openapi.annotations.responses.APIResponses; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.Produces; import jakarta.ws.rs.core.MediaType; import java.util.List; @Path(\"/products\") public class ProductResource { @GET @Produces(MediaType.APPLICATION_JSON) @Operation(summary = \"List all products\", description = \"Retrieves a list of all available products\") @APIResponses(value = { @APIResponse( responseCode = \"200\", description = \"Successful, list of products found\", content = @Content(mediaType = \"application/json\", schema = @Schema(implementation = Product.class, type = SchemaType.ARRAY)) ), @APIResponse( responseCode = \"400\", description = \"Unsuccessful, no products found\", content = @Content(mediaType = \"application/json\") ) }) public List<Product> getProducts() { // Method implementation } } Explanation: @Operation: Provides a summary and description for the getProducts() method. @APIResponse: Describes the possible responses from the getProducts() operation. In this case, a successful response (HTTP 200) is described, indicating that the method returns an array of Product entities. @Schema: Specifies the schema of the response content. Here, it is used to indicate that the method returns an array of Product objects. These annotations enrich the ProductResource class with metadata necessary for generating comprehensive and descriptive OpenAPI documentation automatically. We have also annotated the getProducts() method with the @APIResponse annotation to document the successful response from the operation. The responseCode field is used to specify the status code of the response, and the description field is used to provide a brief description of the response. There are two possible responses – a successful response containing a list of produdts with a 200 status code, and an unsuccessful response with a 400 status code, if no products are found. The content field is used to specify the schema of the response content. In this example, the response content is a list of `Product`s. Finally, we need to add the following property to the src/main/resources/META-INF/microprofile-config.properties file: mp.openapi.scan=true This property tells MicroProfile OpenAPI to scan our classes for annotations and generate API documentation for them. Now that we have configured MicroProfile OpenAPI, we can build and run our application. To view the generated documentation, we can use the OpenAPI UI tool. The Open API UI tool is a web-based tool that can be used to view the documentation for a REST API. The OpenAPI UI tool can be accessed at the following URL: http://localhost:<port>/openapi/ Replace <port> with the actual port used by your runtime, for e.g. 9080 which is the default port at Open Liberty server. The /openapi endpoint is used to get information about the OpenAPI specification generated from the comments in the source code annotations. It returns information in YAML format. When we access the http://localhost:9080/openapi URL, we should see the API documentation that was generated by MicroProfile OpenAPI: openapi: 3.0.3 info: title: Generated API version: \"1.0\" servers: - url: http://localhost:9080/catalog paths: /api/products: get: responses: \"200\": description: OK content: application/json: schema: type: array items: $ref: '#/components/schemas/Product' put: requestBody: content: application/json: schema: $ref: '#/components/schemas/Product' responses: \"200\": description: OK post: requestBody: content: application/json: schema: $ref: '#/components/schemas/Product' responses: \"200\": description: OK /api/products/products/{id}: delete: parameters: - name: id in: path required: true schema: format: int64 type: integer responses: \"200\": description: OK /api/products/{id}: get: parameters: - name: id in: path required: true schema: format: int64 type: integer responses: \"200\": description: OK content: application/json: schema: $ref: '#/components/schemas/Product' components: schemas: Product: required: - name - description - price type: object properties: id: format: int64 type: integer name: type: string description: type: string price: format: double type: number As we can see, MicroProfile OpenAPI has generated API documentation for our resource class. We can use this documentation to learn about the API and how to use it. MicroProfile OpenAPI allows developers to produce these specifications directly from their codebase, leveraging annotations and/or providing OpenAPI documents statically. This direct generation ensures that the API documentation is always up to date with the code. To open Swagger UI for the API documentation generated using MicroProfile OpenAPI, you will need to deploy your application to a server that supports MicroProfile, such as Open Liberty, WildFly, Quarkus, or Payara Micro. These servers automatically generate the OpenAPI documentation for your RESTful services based on the annotations in your code. Next, visit the following URL to launch the Swagger UI: http://localhost:9080/openapi/ui Swagger UI is then used to render this documentation in a user-friendly web interface. Below is the screenshot of swagger UI for the Product REST Resource. Swagger UI 1. Swagger UI The MicroProfile OpenAPI annotations can be used to document any Jakarta Restful Web Services resource. The annotations can also be used in conjunction with other Jakarta Restful Webservices annotations, such as @Path and @Produces. The most common annotations that are used to document RESTful web services are list in Table 4-1. Annotations Details @OpenAPIDefinition Provides metadata about the entire API. It can include information such as the title, description, version, terms of service, and contact information. @Info Used inside @OpenAPIDefinition to provide API metadata like title, version, description. @Contact Specifies contact information for the API, used within @Info. @License Defines the license information for the API, also used within @Info. @Operation Describes a single API operation on a resource. @APIResponse It is used to document a response from an operation. @APIResponses A container for multiple @APIResponse annotations, allowing documentation of different responses for a single API operation. @RequestBody Describes the request body of an HTTP request, specifying the content of the body and whether it is required. @Schema Provides schema details for a response or request body, specifying the data type, format, and constraints. @Parameter Provides information on parameters to the operation, including query parameters, header parameters, and path parameters. @Tag Adds metadata to a single tag that is used by the Operation. It helps in categorizing operations by resources or any other qualifier. @Content Specifies the media type and schema of the operation’s request or response body. @Components Allows the definition of reusable components such as schemas, responses, parameters, and more, which can be referenced by other annotations. @SecurityRequirement Specifies a security requirement for an operation, referencing security schemes defined in the @Components. @ExternalDocumentation Provides additional external documentation for an API or operation. @Callback Specifies a callback URL for an asynchronous operation. @Callbacks Specifies multiple @Callback annotations. @Server Describes a server that hosts the API, specifying URL and description, which can be global or specific to operations or paths All of these annotations are defined in the org.eclipse.microprofile.openapi.annotations package. By integrating the MicroProfile OpenAPI, developers can generate detailed, OpenAPI-compliant documentation automatically, fostering better understanding and interaction among services. By annotating ProductResource class, we generated API documentation as per Open API specification. This will ensure the services are readily discoverable, understandable, and usable, thereby accelerating development cycles and fostering a more robust and collaborative developer ecosystem.","title":"Chapter 4: MicroProfile OpenAPI","component":"microprofile-tutorial","version":"6.1","name":"chapter04","url":"/microprofile-tutorial/6.1/chapter04/chapter04.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":2},{"text":"OpenAPI Specification","hash":"openapi-specification","id":3},{"text":"Introduction to MicroProfile OpenAPI","hash":"introduction-to-microprofile-openapi","id":4},{"text":"Capabilities of MicroProfile OpenAPI Specification","hash":"capabilities-of-microprofile-openapi-specification","id":5},{"text":"Generating OpenAPI documents","hash":"generating-openapi-documents","id":6},{"text":"Using MicroProfile Open API in your project","hash":"using-microprofile-open-api-in-your-project","id":7},{"text":"How to view the generated documentation","hash":"how-to-view-the-generated-documentation","id":8},{"text":"Exploring the APIs using Swagger UI","hash":"exploring-the-apis-using-swagger-ui","id":9},{"text":"Annotations","hash":"annotations","id":10},{"text":"Summary","hash":"summary","id":11}]},"14":{"id":14,"text":"This chapter focuses on MicroProfile Configuration, a key feature that allows developers to externalize configuration properties from their code. You can adapt configuration parameters to different environments (development, testing, production) without altering the core code. It provides flexibility and adaptability for microservices in different environments. Understanding MicroProfile Configuration Different environments required for Microservices development Working with Various Configuration Sources Key capabilities of MicroProfile Configuration Implementing Configuration Properties Creating a Custom Configuration Source Dynamic Updates and Handling Configuration Change Events Managing Configuration for Different Environments Securing Configuration and Best Practices MicroProfile Configuration is a specification that allows developers to inject configuration values into applications. The MicroProfile Configuration APIs will enable developers to externalize configuration and access it from within your application. By separating configuration data (like database URLs, API credentials, feature flags) from the codebase, you make it easier to modify these settings without recompiling and redeploying the application. For instance, with MicroProfile Config, you can configure connection settings for a database enhancing flexibility and adaptability across different environments in our MicroProfile e-commerce application. You can update configurations seamlessly, sometimes even while the application is running (for dynamic config sources), minimizing downtime and streamlining deployment processes. This is essential for microservices that may run in diverse setups. When developing microservices, it’s essential to establish various environments to accommodate different stages of the development lifecycle. Each environment serves distinct purposes, ensuring the application is thoroughly tested, secure, and efficient before its deployment to production. Below are the critical environments typically set up for developing microservices: Development Environment—Developers write new code, implement features, and perform basic unit testing in this environment, which is where the initial development occurs. This environment is usually configured to use local or development databases with dummy data for testing. The logging level used in this environment is generally verbose for debugging purposes. Testing or QA Environment—This environment is dedicated to rigorous testing, including automated tests, integration tests, and manual testing by QA engineers to identify bugs or issues. Configuration here mirrors production settings as closely as possible and connects to a testing database. For error tracing, detailed logging may be enabled in this environment. Staging Environment—This is a production-like environment for final testing of the changes before deployment to production. It ensures that your microservices perform as expected under production conditions. This environment is configured with settings identical to the production environment. It typically uses a copy of production data that is sanitized of sensitive data. Production Environment—This is the live environment where the microservice is fully deployed and accessible to end-users. It’s optimized for security, performance, and reliability and configured to access actual user data with all security features fully enabled. Performance monitoring tools are also set up here to ensure smooth operations. Using the above set of environments, development teams can streamline the development process, enhance quality, and ensure the microservices are robust and ready for production use. Your development team may also require additional environments for specific needs like automation, penetration testing, and stress testing, depending on the unique needs of the microservices. MicroProfile Config allows applications to retrieve configuration properties from a variety of sources. By default, MicroProfile Config includes various built-in configuration sources, but you can also define custom sources. Below we discuss how to work with these various configuration sources. MicroProfile Config defines default configuration sources that are automatically enabled: System Properties: Configuration values defined as system properties can be accessed by MicroProfile Config. These properties can be set at runtime using the -D flag when starting the JVM. Environment Variables: Environment variables available in the system can be used as configuration sources. They are useful for setting configuration properties external to the application, especially in containerized environments. MicroProfile Config Properties File: A properties file named microprofile-config.properties can be placed in the META-INF directory of your application. This file is particularly useful for setting default configuration values that ship with the application. A static configuration source is the one where the data does not change once the application has started. Examples include the microprofile-config.properties file and most custom implementations that read from a database or a service at startup. On the other hand, a dynamic configuration source is one that can change its data at runtime. System properties and some custom implementations that periodically check for changes in a remote configuration service are examples of dynamic sources. MicroProfile Config allows applications to read from these dynamic sources as easily as from static ones. However, whether a configuration source supports dynamic behavior depends on its implementation. The MicroProfile Configuration specifications offer a set of APIs that enable you to handle your application’s configuration efficiently. They allow you to easily manage and customize your application’s configurations, making it a valuable tool for developers. The MicroProfile Configuration APIs provide the following capabilities for managing the configuration settings of your application: It allows reading configuration values. It allows applications to retrieve configuration values reliably, supporting various sources, such as property files, system properties, environment variables, and more. The MicroProfile Configuration API provides several classes, allowing easy integration of configuration values. Below is the list of key classes and interfaces included in the MicroProfile Configuration API: Config - the class that is the main entry point to the configuration API and provides access to configuration data. The Config class provides static methods that can be used to access configuration properties. ConfigProvider - a utility class for getting the Config instance. It allows retrieving the static instance of the Config object. ConfigBuilder - An interface used to create a Config instance manually. It can add default sources, converters, and configuration sources. ConfigSource - This class represents a source of configuration values. It reads configuration data from a specific source, such as system properties, environment variables, files, or data stores. Property - It represents a key/value pair in the configuration data. Converter<T> - This interface implements custom converters that convert configuration values from String to any desired type. These classes and interfaces provide a robust configuration mechanism that is easy to use and extend. Developers can leverage these APIs to externalize configuration from their applications, making them more flexible and more accessible to run in different environments. The Config API allows you to define configuration properties in many ways, including property files, environment variables, and system properties. To use the Config API, we’ll need to include the following dependency in our pom.xml file: <dependency> <groupId>org.eclipse.microprofile.config</groupId> <artifactId>microprofile-config-api</artifactId> <version>3.1</version> </dependency> For Gradle, modify your build.gradle file with the following dependency: implementation 'org.eclipse.microprofile.config:microprofile-config-api:3.1' Let’s now modify the getProducts() method to return a jakarta.ws.rs.core.Response object instead of a list of Product entities directly, we can utilize the Response class to build our response. This approach allows for a more standardized and flexible API response handling, including the ability to set HTTP status codes and headers. Lets create a configuration file with the name microprofile-config.properties and the content as below: # microprofile-config.properties product.maintenanceMode=false This configuration file should be placed in the src/main/resources/META-INF/ directory of your application. Next inject this configuration value to a private variable in the ProductResource and consume this within all the operations of this service. MicroProfile Config will automatically detect and use the properties defined in this file, allowing you to externalize configuration and easily adjust the behavior of your application based on the environment in which it is deployed. Below is the updated ProductResource class and getProducts() method: package io.microprofile.tutorial.store.product.resource; import io.microprofile.tutorial.store.product.entity.Product; import io.microprofile.tutorial.store.product.repository.ProductRepository; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; import jakarta.transaction.Transactional; import jakarta.ws.rs.*; import jakarta.ws.rs.core.MediaType; import jakarta.ws.rs.core.Response; import org.eclipse.microprofile.config.inject.ConfigProperty; import org.eclipse.microprofile.openapi.annotations.Operation; import org.eclipse.microprofile.openapi.annotations.media.Content; import org.eclipse.microprofile.openapi.annotations.media.Schema; import org.eclipse.microprofile.openapi.annotations.responses.APIResponse; import org.eclipse.microprofile.openapi.annotations.responses.APIResponses; import java.util.List; @Path(\"/products\") @ApplicationScoped public class ProductResource { @Inject @ConfigProperty(name=\"product.maintenanceMode\", defaultValue=\"false\") private boolean maintenanceMode; @Inject private ProductRepository productRepository; @GET @Produces(MediaType.APPLICATION_JSON) @Transactional // OpenAPI code // … public Response getProducts() { List<Product> products = productRepository.findAllProducts(); // If in maintenance mode, return Service Unavailable status if (maintenanceMode) { return Response .status(Response.Status.SERVICE_UNAVAILABLE) .entity(\"The product catalog service is currently in maintenance mode. Please try again later.\") .build(); // If products found, return products and OK status } else if (products != null && !products.isEmpty()) { return Response .status(Response.Status.OK) .entity(products).build(); // If products not found, return Not Found status and message } else { return Response .status(Response.Status.NOT_FOUND) .entity(\"No products found\") .build(); } } } Explanation: @Inject: This CDI annotation enables dependency injection. It tells the container to inject an instance of a specified bean at runtime. As we have learnt previously, dependency injection enables loose coupling between classes and their dependencies, making the code more modular, easier to test, and maintain. @ConfigProperty(name=\"product.maintenanceMode\", defaultValue=\"false\"): This MicroProfile Config annotation used along with @Inject to inject configuration property values into beans. It allows developers to externalize configuration from the application code, making applications more flexible and environment-agnostic. The name parameter specifies the key of the configuration property to be injected. In this case, product.maintenanceMode is the key for a property that controls whether this service is in maintenance mode. The defaultValue provides a default value to be used if the specified configuration property is not found in any of the configured sources. Here, the default value is false, indicating that, by default, the service is not in maintenance mode unless explicitly configured otherwise. private boolean maintenanceMode: This field is set to the value of the product.maintenanceMode configuration property. Due to the defaultValue =\"false\", if the configuration is not specified elsewhere, maintenanceMode will be false, meaning the service operates normally. private ProductRepository productRepository: This field is injected with an instance of ProductRepository. This class abstracts the data access operations for products. This injection decouples the class from the specific implementation of the repository, making the code more modular and easier to adapt or replace parts of it in the future. The getProducts() method retrieves all products from the repository by calling productRepository.findAllProducts(), which queries the database to retrieve a list of all available products. Before proceeding to return the list of products, the method checks the maintenanceMode flag. If maintenanceMode is true, the service is currently undergoing maintenance, and thus, it is not appropriate to perform regular operations. The method constructs and returns a Response with a 503 Service Unavailable HTTP status code, along with a message indicating that the product catalog service is in maintenance mode. If the service is not in maintenance mode, then the method checks if the list of retrieved products is not null and not empty. If products are found, it constructs a Response with a status of 200 OK and includes the list of products as the response entity. This indicates a successful operation where product data is found and returned. If the products list is`null` or empty, indicating no products were found, the method constructs and returns a Response with a 404 Not Found status code and a message stating that no products were found. When we deploy the application and invoke the /api/products endpoint, we should see the list of products as below: [{\"description\":\"Apple iPhone 15 Pro\",\"id\":1,\"name\":\"iPhone 15 Pro\",\"price\":999.0}] For non-critical properties, providing a default value using the defaultValue attribute of the @ConfigProperty annotation ensures that your application has a fallback option. We can specify a default value to be used if the property does not exist as below: public class ProductResource { @Inject @ConfigProperty(name=\"product.maintenanceMode\", defaultValue=\"false\") private boolean maintenanceMode; … In the example above , the false default value will be used if the product.maintenanceMode property does not exist. ConfigProperty also supports type conversion, so we can inject our configuration data into fields of any type: @Inject @ConfigProperty(name=\"product.maintenanceMode\", defaultValue=\"false\") private boolean maintenanceMode; In this example, the product.maintenanceMode property will be converted to an Boolean before it is injected into the maintenanceMode field. We can also use the Config API to convert our configuration data to a POJO: import org.eclipse.microprofile.config.inject.ConfigProperty; public class MyApplication { @Inject private MaintenanceMessage message; } public class MaintenanceMessage { @ConfigProperty(name=\"product.maintenanceMessage\") private String message; } In this example, we’re injecting a property named \"product.maintenanceMessage\" into the message field of our MaintenanceMessage class. As we saw, the Config API makes it easy to inject configuration properties into an application. The Config API defines a contract for config implementations. A ConfigSource is used to read configuration data from a particular source. For example, we could create a ConfigSource that reads configuration data from a file. ConfigSource interface has the following methods: String getName() : Returns the name of the ConfigSource. int getOrdinal() : Returns the ordinal of the ConfigSource. Ordinals are used to determine the precedence of ConfigSources. A higher ordinal means a higher precedence. Map<String, String> getProperties() : Returns a map of the properties in this ConfigSource. The keys in the map are the property names, and the values are the property values. getValue(String propertyName) : Returns the value of the given property. If the property is not found, this method returns null. Set getPropertyNames() : Returns a Set of the property names in this ConfigSource. Let’s implement a feature in our MicroProfile e-Commerce application to integrate payment gateway configuration dynamically by creating a PaymentServiceConfigSource (a custom ConfigSource) which could fetch API keys and endpoints. This would ensure that payment service configurations are up-to-date and can be changed without redeploying the application. The following is an implementation of a ConfigSource that reads configuration data from a file: package io.microprofile.tutorial.store.payment.config; import java.util.HashMap; import java.util.Map; import java.util.Set; import org.eclipse.microprofile.config.spi.ConfigSource; public class PaymentServiceConfigSource implements ConfigSource{ private Map<String, String> properties = new HashMap<>(); public PaymentServiceConfigSource() { // Load payment service configurations dynamically // This example uses hardcoded values for demonstration properties.put(\"payment.gateway.apiKey\", \"secret_api_key\"); properties.put(\"payment.gateway.endpoint\", \"https://api.paymentgateway.com\"); } @Override public Map<String, String> getProperties() { return properties; } @Override public String getValue(String propertyName) { return properties.get(propertyName); } @Override public String getName() { return \"PaymentServiceConfigSource\"; } @Override public int getOrdinal() { // Ensuring high priority to override default configurations if necessary return 600; } @Override public Set<String> getPropertyNames() { // Return the set of all property names available in this config source return properties.keySet();} } The above code snippet demonstrates MicroProfile Config’s flexibility in integrating with various external configuration providers. This enables applications to load configurations from sources beyond the default system properties, environment variables, and microprofile-config.properties files. This capability is crucial for modern applications that may need to pull configuration from dynamic sources like cloud services, databases, or custom APIs. When integrating with external configuration providers, it’s essential to consider security aspects, especially when dealing with sensitive configuration data. Use secure communication channels (e.g., HTTPS) to retrieve configuration from external services. Manage access control meticulously to prevent unauthorized access to sensitive configuration. Consider encrypting sensitive configuration values and decrypting them within your ConfigSource or application logic. To register a custom ConfigSource implementation with MicroProfile Config, you need to include the fully qualified class name of your custom ConfigSource in this resource file /META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource. This PaymentService would be a part of the e-Commerce application, handling payment transactions by utilizing configurations that determine which payment gateway to use and how to authenticate with it. By externalizing these configurations, the e-Commerce platform can easily switch payment providers or update API keys without needing to adjust the codebase, providing flexibility and enhancing security. First, create a class to represent the payment information sent by clients as below: package io.microprofile.tutorial.store.payment.entity; import java.math.BigDecimal; import lombok.AllArgsConstructor; import lombok.Data; import lombok.NoArgsConstructor; @Data @AllArgsConstructor @NoArgsConstructor public class PaymentDetails { private String cardNumber; private String cardHolderName; private String expirationDate; // Format MM/YY private String securityCode; private BigDecimal amount; } The PaymentDetails class succinctly encapsulates the necessary attributes for processing payments. This class can be used to pass payment details for processing payments, validating card details, and logging transaction information. Next, implement the PaymentService class, which utilizes MicroProfile Config to inject the necessary configurations. It represents a simple service that could call a payment gateway API using the configurations provided by the custom ConfigSource. import org.eclipse.microprofile.config.inject.ConfigProperty; import jakarta.ws.rs.POST; import jakarta.ws.rs.Path; import jakarta.ws.rs.Consumes; import jakarta.ws.rs.Produces; import jakarta.ws.rs.core.MediaType; import jakarta.ws.rs.core.Response; import jakarta.enterprise.context.RequestScoped; import jakarta.inject.Inject; @Path(\"/authorize\") @RequestScoped public class PaymentService { @Inject @ConfigProperty(name = \"payment.gateway.apiKey\") private String apiKey; @Inject @ConfigProperty(name = \"payment.gateway.endpoint\") private String endpoint; @POST @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public Response processPayment(PaymentDetails paymentDetails) { // Example logic to call the payment gateway API System.out.println(\"Processing payment with details: \" + paymentDetails.toString()); System.out.println(\"Calling payment gateway API at: \" + endpoint); // Assuming a successful payment operation for demonstration purposes // Actual implementation would involve calling the payment gateway and handling the response // Dummy response for successful payment processing String result = \"{\\\"status\\\":\\\"success\\\", \\\"message\\\":\\\"Payment processed successfully.\\\"}\"; return Response.ok(result, MediaType.APPLICATION_JSON).build(); } } Explanation: @Path(\"/authorize\"): Defines the base URI for the RESTful service. This class will handle requests made to URIs that start with /payment/api/authorize. @RequestScoped: Indicates that a new instance of PaymentService is created for each HTTP request. @POST: Specifies that the processPayment method will respond to HTTP POST requests, which is appropriate for operations that change server state (in this case, processing a payment). @Consumes(MediaType.APPLICATION_JSON): Indicates that the method expects requests to have a payload formatted as JSON, aligning with how payment details might be sent. @Produces(MediaType.APPLICATION_JSON): Specifies that the method produces JSON-formatted responses, useful for indicating the result of the payment processing operation. Response processPayment(PaymentDetails paymentDetails): The method now returns a Response object, allowing for more flexible HTTP response handling. The PaymentDetails parameter would be a POJO (Plain Old Java Object) representing the payment information sent by the client. The clients can call to process payments through the e-Commerce application using this RESTful web service endpoint. The actual logic for calling the payment gateway API and handling the response would be implemented within this method, utilizing the injected configuration properties for authentication and endpoint URL. ConfigSources are hierarchical, which means that we can override properties from one ConfigSource with another ConfigSource. For example, we could create a ConfigSource that reads configuration data from a file, and another ConfigSource that reads configuration data from system properties. The system properties would take precedence over the file-based ConfigSource, which would take precedence over the default ConfigSource. Property getProperty(String propertyName) : Returns information about the given property. If the property is not found, this method returns null. Open Liberty requires a server.xml file for server configuration. This file should be located at /src/main/liberty/config/server.xml within your project. To enable MicroProfile Config, you need to include the mpConfig feature in the <featureManager> section. <server description=\"MicroProfile Tutorial Server\"> <featureManager> <feature>mpConfig-3.1</feature> <!-- Use the appropriate version --> <!-- Include other features as needed --> </featureManager> Managing configurations for different environments is a crucial aspect of modern application development, especially in microservices architectures where applications may run in development, testing, staging, and production environments with varying configurations. MicroProfile Config provides the flexibility to handle environment-specific configurations efficiently. Here’s how to manage configurations for different environments using MicroProfile Config: Use of Profiles: MicroProfile Config does not explicitly define the concept of profiles for managing environment-specific configurations. However, developers can implement a profile-like mechanism using custom ConfigSource implementations or by organizing configuration properties in a way that differentiates them by environment. For instance, you could prefix configuration keys with the environment name: dev.database.url test.database.url prod.database.url Then, you can programmatically or conditionally load configurations based on the active environment. Environment Variables and System Properties: Leveraging environment variables and system properties is a common and effective way to provide environment-specific configurations. MicroProfile Config automatically includes ConfigSources for both system properties and environment variables, allowing for easy overrides of configurations per environment: String databaseUrl = ConfigProvider.getConfig().getValue(\"database.url\", String.class); Custom ConfigSources: For more complex scenarios or to integrate with external configuration management systems (e.g., Consul, Etcd, AWS Parameter Store), you can implement custom ConfigSources. These sources can dynamically load configurations based on the environment, either by connecting to external services or by loading environment-specific files: public class MyEnvironmentConfigSource implements ConfigSource { // Implementation that loads configurations based on the detected environment } Configuration Isolation: It’s essential to isolate configurations for different environments to prevent accidental leaks of sensitive information (e.g., production database credentials). This can be achieved by using: - separate configuration files for each environment, stored securely and only accessible by the application running in that environment. - Utilizing external secrets management tools to store sensitive configurations, with access controlled by the environment. CI/CD Integration: Integrate environment-specific configuration management into your CI/CD pipelines. Ensure that the correct configurations are applied automatically as part of the deployment process for each environment. Although direct support for configuration change events is not provided by MicroProfile Config specification itself, applications can implement their mechanisms or use external libraries to achieve this functionality. To implement dynamic updates in your MicroProfile Config usage, you might need to adopt one of the following approaches: Manual Refresh: Provide a mechanism (e.g., an admin-restricted endpoint) to manually trigger a refresh of the configuration. This approach gives control over when changes are applied but requires manual intervention. Polling: Implement a scheduler that periodically checks certain configuration properties for changes. This approach is straightforward but might introduce latency between the actual change and its detection. Event-driven Updates: If your configuration source supports event notifications (for example, a database trigger or a cloud service event), you can set up listeners that update your application’s configuration in response to these events. Application-level Event Handling: Design your application components to subscribe to a custom event bus or notification system. When a configuration change is detected (via polling or custom ConfigSource), publish an event to this bus, triggering subscribed components to update their configurations. Custom Configuration Source: Develop a custom ConfigSource that includes logic to listen for changes in the underlying configuration store (such as a database, filesystem, or cloud service). This ConfigSource can then notify the application of changes, prompting it to refresh configuration properties. Runtime Extensions: Some MicroProfile runtimes may offer extensions that support dynamic configuration and change event handling. Check the documentation of your runtime environment for such features and best practices for their usage. Framework/Library Support: Use a third-party library or framework that extends MicroProfile Config with change event support. These libraries might offer annotations or listener interfaces to react to configuration changes automatically. External Configuration Management Tools: Utilize configuration management tools or services that offer webhook or messaging functionalities to notify your application of configuration changes. Upon receiving a notification, the application can reload its configuration context. While MicroProfile Config provides the mechanisms to read from dynamic configuration sources, it does not specify a standard way to listen for changes in configuration properties directly within its API as of version 3.1. Applications need to implement their logic or use additional libraries/frameworks to detect changes in configuration sources and react accordingly. However, some implementations of MicroProfile Config might offer extensions or additional functionalities to support configuration change events. For example, an application can poll a configuration source at intervals to detect changes or use a notification system that triggers configuration reloads. Here are some recommended practices for using MicroProfile Config: Graceful Configuration Reloads: Ensure that your application can gracefully handle configuration reloads, especially in critical components that depend on configuration properties for their operation. Minimize Performance Impact: Design your dynamic configuration update mechanism to minimize performance impacts, especially if using polling mechanisms. Secure Configuration Management: When implementing custom solutions for dynamic configuration, pay attention to security aspects, particularly if configurations include sensitive information. Securing sensitive configuration properties is crucial for maintaining the security and integrity of applications. Encrypt Sensitive Configuration Values: Sensitive information, such as passwords, tokens, and API keys, should be encrypted in the configuration source. Decryption can be handled programmatically within the application or through integration with external secrets management systems. Use Environment-Specific Configuration Files: Separate configuration files for different environments (development, testing, production) can help minimize the risk of exposing sensitive data. For instance, development configurations might use placeholder values, whereas production configurations access secrets from a secure vault or environment variables. Leverage External Secrets Management: Integrating with external secrets management tools (like HashiCorp Vault, AWS Secrets Manager, or Azure Key Vault) ensures that sensitive configurations are stored securely and accessed dynamically at runtime. These tools provide mechanisms to control access to secrets and often include auditing capabilities. Use Environment Variables for Sensitive Values: Environment variables can be a secure way to provide configuration to applications, especially for containerized or cloud-native applications. This approach leverages the underlying platform’s security model to protect sensitive information. Implement Access Control: Ensure that only authorized personnel have access to configuration files, especially those containing sensitive information. Use file permissions, access control lists (ACLs), or similar mechanisms provided by the operating system or hosting environment. Audit and Monitor Configuration Access: Regularly audit access to configuration files and monitor for unauthorized access attempts. This can help detect potential security breaches and ensure that only authorized changes are made to the configuration. Configuration Validation: Validate configuration data at startup to ensure that it meets the application’s expected format and values. This step can prevent configuration errors and detect tampering or unauthorized changes. Keep Configuration Data Updated: Regularly review and update configuration data to ensure that it reflects the current operational and security needs. Remove unused properties and update secrets periodically to reduce the risk of compromise. Dynamic configuration management is essential for modern applications, providing the flexibility to adapt to changing environments without downtime. Although MicroProfile Config as of version 3.1 does not define a standard for handling configuration change events directly, applications can still achieve this by combining MicroProfile Config with custom logic or additional tools designed for dynamic configuration management. Always consult the documentation of your MicroProfile implementation to learn about supported features and extensions related to dynamic configuration and change events. While the MicroProfile Config specification provides a powerful and flexible framework for configuration management, handling dynamic updates and configuration change events may require additional custom development or the use of external tools. By considering the strategies mentioned above, developers can effectively manage configuration changes, ensuring their microservices remain responsive and resilient in dynamic environments. The MicroProfile Config specification offers a robust and adaptable framework for managing application configurations. By implementing MicroProfile Config, developers can effectively manage configuration changes, ensuring their microservices remain responsive and resilient in dynamic environments. Integrating external configuration providers with MicroProfile Config extends the flexibility and dynamism of configuration management in microservices architectures. By implementing custom ConfigSources, applications can seamlessly adapt to various environments and configuration paradigms, pulling configuration data from virtually any source. Handling missing or invalid configurations in MicroProfile Config involves using default values, optional properties, custom ConfigSource implementations, and appropriate exception handling. By following these practices, you can ensure that your application remains robust and flexible, even in the face of configuration challenges.","title":"Chapter 5: MicroProfile Configuration","component":"microprofile-tutorial","version":"6.1","name":"chapter05","url":"/microprofile-tutorial/6.1/chapter05/chapter05.html","titles":[{"text":"Topics to be covered","hash":"topics-to-be-covered","id":1},{"text":"Understanding MicroProfile Configuration","hash":"understanding-microprofile-configuration","id":2},{"text":"Different environments required for Microservices development","hash":"different-environments-required-for-microservices-development","id":3},{"text":"Working with Various Configuration Sources","hash":"working-with-various-configuration-sources","id":4},{"text":"Built-in Configuration Sources","hash":"built-in-configuration-sources","id":5},{"text":"Types of Configuration Sources","hash":"types-of-configuration-sources","id":6},{"text":"Key capabilities of MicroProfile Configuration","hash":"key-capabilities-of-microprofile-configuration","id":7},{"text":"Implementing Configuration Properties","hash":"implementing-configuration-properties","id":8},{"text":"Reading Configuration Properties","hash":"reading-configuration-properties","id":9},{"text":"Specifying Default Values for a ConfigProperty","hash":"specifying-default-values-for-a-configproperty","id":10},{"text":"Type Conversion in ConfigProperty","hash":"type-conversion-in-configproperty","id":11},{"text":"Converting Configuration data to a POJO","hash":"converting-configuration-data-to-a-pojo","id":12},{"text":"Creating a Custom ConfigSource","hash":"creating-a-custom-configsource","id":13},{"text":"Registering a ConfigSource","hash":"registering-a-configsource","id":14},{"text":"Accessing the Configuration Data","hash":"accessing-the-configuration-data","id":15},{"text":"Enabling MicroProfile Config in Open Liberty","hash":"enabling-microprofile-config-in-open-liberty","id":16},{"text":"Managing Configuration for Different Environments","hash":"managing-configuration-for-different-environments","id":17},{"text":"Strategies for Handling Configuration Change Events","hash":"strategies-for-handling-configuration-change-events","id":18},{"text":"Best Practices and Securing Configuration in MicroProfile Config","hash":"best-practices-and-securing-configuration-in-microprofile-config","id":19},{"text":"Summary","hash":"summary","id":20}]},"15":{"id":15,"text":"This chapter provides an in-depth exploration of MicroProfile Health, a critical component for ensuring the reliability and availability of microservices. This specification aims to enhance the observability of microservices in a cloud environment where automatic scaling, failover, and recovery are essential for maintaining service availability and reliability. In this chapter, we will learn about different types of health checks and standard health indicators provided by MicroProfile. Overview of MicroProfile Health Key Concepts Types of Health Checks Exposing Health Checks Steps for Implementing Health Checks Integration with CDI Accessing Health Checks Kubernetes Probe Configuration Best Practices for Effective Health Checks The MicroProfile Health specification offers a standardized mechanism for microservices to report their health status. In the context of microservices, \"health\" refers to the ability of a microservice to perform its functions correctly and efficiently. The health check mechanism is crucial for operating microservices in a cloud or containerized environment where automated processes need to make decisions about whether to restart a failing service, reroute traffic away from an unhealthy service, or take other actions to maintain overall system reliability. Let’s delve into the essentials of MicroProfile Health, its importance, and how it works. At its core, the MicroProfile Health specification defines a mechanism for microservices to report their health status via HTTP. These health checks can be used by external systems to verify the operational status of the services. This is crucial in modern cloud environments where automated processes continuously monitor service health, initiate failover procedures, and manage load balancing to ensure high availability and reliability. A health check is a test that can be used to determine the health of an application or service. This mechanism is implemented via standard HTTP endpoints that respond with the health status of the service. These endpoints are typically exposed at predefined paths, such as /health, /health/live (for liveness), /health/ready (for readiness), and /health/started (for startup). Health status is communicated through a simple JSON format, which can be easily interpreted by humans and machines. Applications servers that support MicroProfile may offer built-in mechanisms or simplified configurations to define such health checks. MicroProfile Health Check defines three main types of health checks, each with its own annotation to indicate the MicroProfile Health runtime about the type of check being performed, allowing it to execute and report health check responses appropriately. These are: Liveness checks help to determine if a microservice is in a state where it can perform its functions correctly. A failing liveness check suggests that the microservice is in a broken state, and the only way to recover might be to restart the microservice. This type of health check is crucial for detecting deadlocks, infinite loops, or any conditions that render the microservice unresponsive or dysfunctional. Liveness checks are annotated with @Liveness. Readiness checks are used to determine if a microservice is ready to process requests. If a readiness check fails, it indicates that the microservice should not receive any inbound requests because it’s not ready to handle them properly. This can be due to the application still initializing, waiting for dependencies, or any other condition that would prevent it from correctly processing incoming requests. Readiness checks are annotated with @Readiness. Startup checks are designed for verifying the microservice’s health immediately after it has started. This type of check is useful for applications that require additional initialization time or need to perform certain actions before they are ready to serve requests. Including startup checks in the health checking mechanism is crucial because if we hit the liveness probe before the application is fully initialized, it could cause a continuous restart loop. Startup checks provide a mechanism to postpone other health checks until certain startup conditions are fulfilled. This ensures that readiness and liveness probes are not prematurely activated, allowing the microservice adequate time to complete its initialization processes, such as loading configurations, establishing database connections, or performing necessary pre-service tasks.These checks are annotated with @Startup. Health checks are exposed via HTTP endpoints automatically without additional configuration needed from the developer’s side. The runtime environment provides these endpoints: /health: Aggregates all health check responses. /health/live: Returns responses from liveness checks. /health/ready: Returns responses from readiness checks. /health/started: Returns responses from startup checks. These endpoints return a JSON object containing the overall status (UP or DOWN) and individual health check responses, including their names, statuses, and optional data. For example a LivenessCheck, if accessed via /health/live, the JSON response might look something like this when the service is healthy: { \"status\": \"UP\", \"checks\": [ { \"name\": \"LivenessCheck\", \"status\": \"UP\" } ] } If the service is unhealthy, the \"status\" field would be \"DOWN\", and additional data might be provided to indicate the cause of the health check failure. Each type of health check is implemented as a procedure annotated with the respective annotation. Each procedure returns a HealthCheckResponse indicating the health status (UP or DOWN) and optionally includes additional details. Implementing these health check types in microservices architecture ensures that services are only used when they are in a healthy state and can correctly process requests. This enhances the overall reliability and maintainability of applications. Applications can implement multiple health checks of each kind. The overall health status reported by the application is a logical AND of all individual health checks. A special endpoint /health aggregates the results from all three types of checks. To implement health checks for microservices using MicroProfile Health, you would generally follow a pattern to define health check procedures that align with the services' operational characteristics. The Health Check API allows us to expose information about the health of our application. This information can be used by load balancers and other tools to determine if an application is healthy. The HealthCheck functional interface uses CDI beans with annotations (@Liveness, @Readiness, and, @Startup) to mark a class as a health checker for liveness, readiness and startup. They are automatically discovered and registered by the runtime. Implementations of this interface are expected to be provided by applications. The Health Check API defines a contract for health check implementations. A health check is a Java class that implements the HealthCheck functional interface: package org.eclipse.microprofile.health; @FunctionalInterface public interface HealthCheck { HealthCheckResponse call(); } You can check out the actual code here - https://github.com/eclipse/microprofile-health/blob/main/api/src/main/java/org/eclipse/microprofile/health/HealthCheck.java The HealthCheckResponse class is used to represent the result of a health check invocation. It contains information about the health check, such as name, state (up or down), and data that can be used for troubleshooting. The call() method of HealthCheck interface is used to perform the actual health check and return a HealthCheckResponse object: package org.eclipse.microprofile.health; public class HealthCheckResponse { private static final Logger LOGGER = Logger.getLogger(HealthCheckResponse.class.getName()); // the name of the health check. private final String name; // the outcome of the health check private final Status status; // information about the health check. private final Optional<Map<String, Object>> data; // Status enum definition public enum Status { UP, DOWN } // Getters public String getName() { return name; } public Status getStatus() { return status; } public Optional<Map<String, Object>> getData() { return data; } } The provided code snippet offers a conceptual and simplified implementation of the HealthCheckResponse class to illustrate how health check responses can be structured within the MicroProfile Health framework. To view the actual HealthCheckResponse class source code, please visit: https://github.com/eclipse/microprofile-health/blob/main/api/src/main/java/org/eclipse/microprofile/health/HealthCheckResponse.java The HealthCheckResponseBuilder abstract class provides a fluent API for constructing instances of HealthCheckResponse. This means you can chain method calls to set various properties of the response in a single statement, improving code readability and maintainability. package org.eclipse.microprofile.health; public abstract class HealthCheckResponseBuilder { // Sets the name of the health check response. public abstract HealthCheckResponseBuilder name(String name) { this.name = name; } // Sets the status of the health check to UP public abstract HealthCheckResponseBuilder up(); // Sets the status of the health check to DOWN public abstract HealthCheckResponseBuilder down(); // Adds additional string data to the health check response public HealthCheckResponseBuilder withData(String key, String value); // Adds additional numeric data to the health check response public HealthCheckResponseBuilder withData(String key, long value); // Sets the status of the health check response public abstract HealthCheckResponseBuilder status(boolean up); // Builds and returns the HealthCheckResponse instance public abstract HealthCheckResponse build(); } The above code snippet offers a conceptual and simplified definition of the HealthCheckResponseBuilder abstract class to illustrate how health check responses can be structured within the MicroProfile Health framework. For the actual HealthCheckResponseBuilder abstract class source code, please visit: https://github.com/eclipse/microprofile-health/blob/main/api/src/main/java/org/eclipse/microprofile/health/HealthCheckResponseBuilder.java Below are the steps for implementing Health Checks for each of the microservices: Add MicroProfile Health Dependency: To utilize MicroProfile Health in a Java project, include the MicroProfile Health API dependency in your pom.xml or build.gradle file. For maven, add: <dependency> <groupId>org.eclipse.microprofile.health</groupId> <artifactId>microprofile-health-api</artifactId> <version>4.0.1</version> </dependency> For gradle, add: implementation 'org.eclipse.microprofile.health:microprofile-health-api:4.0.1' When implementing MicroProfile Health checks, including the MicroProfile Health API dependency in your project is not enough. You need an actual implementation on the classpath. This could be a MicroProfile-compatible server runtime such as Open Liberty, Quarkus, Payara Micro, or WildFly. Without an implementation present at runtime, the application will not be able to execute health checks. The health information can be used by other tools to help keep our application running well. Health checks in MicroProfile are implemented as CDI beans that implement the HealthCheck interface. Each health check procedure is a method that returns a HealthCheckResponse. You can define different types of health checks (readiness, liveness, and startup) depending on the type of check by annotating the health check class with @Readiness, @Liveness, or @Startup. These methods return a HealthCheckResponse object, which includes the health check status (UP or DOWN) and additional metadata about the health check. Readiness Check: package io.microprofile.tutorial.store.product.health; import org.eclipse.microprofile.health.HealthCheck; import org.eclipse.microprofile.health.HealthCheckResponse; import org.eclipse.microprofile.health.Readiness; import io.microprofile.tutorial.store.product.entity.Product; import jakarta.enterprise.context.ApplicationScoped; import jakarta.persistence.EntityManager; import jakarta.persistence.PersistenceContext; @Readiness @ApplicationScoped public class ProductServiceHealthCheck implements HealthCheck { @PersistenceContext EntityManager entityManager; @Override public HealthCheckResponse call() { if (isDatabaseConnectionHealthy()) { return HealthCheckResponse.named(\"ProductServiceReadinessCheck\") .up() .build(); } else { return HealthCheckResponse.named(\"ProductServiceReadinessCheck\") .down() .build(); } } private boolean isDatabaseConnectionHealthy(){ try { // Perform a lightweight query to check the database connection entityManager.find(Product.class, 1L); return true; } catch (Exception e) { System.err.println(\"Database connection is not healthy: \" + e.getMessage()); return false; } } } Liveness Check: package io.microprofile.tutorial.store.product.health; import org.eclipse.microprofile.health.HealthCheck; import org.eclipse.microprofile.health.HealthCheckResponse; import org.eclipse.microprofile.health.HealthCheckResponseBuilder; import org.eclipse.microprofile.health.Liveness; import jakarta.enterprise.context.ApplicationScoped; @Liveness @ApplicationScoped public class ProductServiceLivenessCheck implements HealthCheck { @Override public HealthCheckResponse call() { Runtime runtime = Runtime.getRuntime(); long maxMemory = runtime.maxMemory(); // Maximum amount of memory the JVM will attempt to use long allocatedMemory = runtime.totalMemory(); // Total memory currently allocated to the JVM long freeMemory = runtime.freeMemory(); // Amount of free memory within the allocated memory long usedMemory = allocatedMemory - freeMemory; // Actual memory used long availableMemory = maxMemory - usedMemory; // Total available memory long threshold = 100 * 1024 * 1024; // threshold: 100MB // Including diagnostic data in the response HealthCheckResponseBuilder responseBuilder = HealthCheckResponse.named(\"systemResourcesLiveness\") .withData(\"FreeMemory\", freeMemory) .withData(\"MaxMemory\", maxMemory) .withData(\"AllocatedMemory\", allocatedMemory) .withData(\"UsedMemory\", usedMemory) .withData(\"AvailableMemory\", availableMemory); if (availableMemory > threshold) { // The system is considered live responseBuilder = responseBuilder.up(); } else { // The system is not live. responseBuilder = responseBuilder.down(); } return responseBuilder.build(); } } The above code uses the HealthCheckResponseBuilder to construct the response. Depending on the outcome of checkDatabaseConnection(), the health check response is marked either \"up\" or \"down\", and relevant data is added to the response using .withData(key, value). This approach allows for rich, descriptive health check responses that can convey detailed status information, not just binary up/down states. Startup Check: package io.microprofile.tutorial.store.product.health; import org.eclipse.microprofile.health.HealthCheck; import org.eclipse.microprofile.health.HealthCheckResponse; import jakarta.ejb.Startup; import jakarta.enterprise.context.ApplicationScoped; import jakarta.persistence.EntityManagerFactory; import jakarta.persistence.PersistenceUnit; @Startup @ApplicationScoped public class ProductServiceStartupCheck implements HealthCheck{ @PersistenceUnit private EntityManagerFactory emf; @Override public HealthCheckResponse call() { if (emf != null && emf.isOpen()) { return HealthCheckResponse.up(\"ProductServiceStartupCheck\"); } else { return HealthCheckResponse.down(\"ProductServiceStartupCheck\"); } } } The specification also emphasizes the importance of integrating health checks with the application’s Context and Dependency Injection (CDI) context, enabling health check procedures to be automatically discovered and invoked by the runtime. MicroProfile Health thus provides a robust and standardized way to implement health checks, facilitating the management and orchestration of microservices in a cloud environment. Once defined, these health check procedures are automatically discovered and invoked by the MicroProfile Health runtime. They are accessible through standardized HTTP endpoints provided by MicroProfile Health (/health, /health/live, /health/ready, /health/started) and can be used by orchestration tools (like Kubernetes) or monitoring systems to manage and monitor the health of your microservices. This approach allows you to tailor health checks to the operational specifics of each microservice, providing a robust mechanism for observing and managing your application’s health in a cloud-native environment. Integrating MicroProfile Health checks with Kubernetes probes allows you to leverage Kubernetes' native capabilities to manage the lifecycle of your containers based on their current health status. Specifically, you can map Liveness, Readiness, and Startup probes in Kubernetes to the corresponding health check types defined by the MicroProfile Health specification. Here’s a basic overview of how each type of MicroProfile Health check maps to Kubernetes probes: Liveness Probes: Determine if a container is running and healthy. If a liveness probe fails, Kubernetes will kill the container and create a new one based on the restart policy. *Readiness Probes: Determine if a container is ready to serve traffic. If a readiness probe fails, Kubernetes will stop sending traffic to that container until it passes again. Startup Probes: Determine if a container application has started. These are useful for applications that have a long startup time to prevent them from being killed by Kubernetes before they are up and running. To configure these probes in your Kubernetes pod, you can use the livenessProbe, readinessProbe, and startupProbe fields in your container specification. Here’s an example of how you might define a readiness probe in your Kubernetes pod configuration, that utilizes a MicroProfile Health endpoint: apiVersion: v1 kind: Pod metadata: name: mp-pod spec: containers: - name: my-mp-app image: myimage:v1 ports: - containerPort: 8080 readinessProbe: httpGet: path: /health/ready port: 8080 initialDelaySeconds: 15 timeoutSeconds: 2 periodSeconds: 5 failureThreshold: 3 In the above example, the readinessProbe is configured to make an HTTP GET request to the /health/ready endpoint, which is the default endpoint provided by MicroProfile Health for readiness checks. Similarly, you can configure livenessProbe and startupProbe by specifying /health/live and /health/startup endpoints respectively. It’s important to adjust the initialDelaySeconds, timeoutSeconds, periodSeconds, and failureThreshold according to the specifics of your application to ensure that Kubernetes accurately reflects the state of your containers based on its health checks. Here are some best practices for implementing and utilizing health checks effectively: Clearly Define Health Check Types: Use readiness, liveness, and startup checks appropriately to reflect the state of your microservices. This helps in accurately signaling the service’s ability to handle traffic and its current operational state. Implement Meaningful Health Checks: Ensure that your health checks meaningfully reflect the operational aspects they are intended to monitor. Avoid trivial checks that do not accurately represent the service’s health. Utilize Health Check Responses: Make effective use of the health check responses, including the UP/DOWN status and additional metadata. This information can be valuable for logging and reporting on the health state of your services. Secure Health Check Endpoints: Consider the security of your health check endpoints, especially if they expose sensitive details about the application’s state. Monitor Health Check Performance: Health checks should be lightweight and not introduce significant overhead. Monitor the performance of your health checks and optimize as needed to prevent impacting the application’s performance. Logging Health Check Results: Implementing logging within your health check procedures can provide insights into the health status over time. Log entries can be made when health check statuses change or when significant health-related events occur. Reporting and Alerting: Based on logged health check results, implement reporting mechanisms to visualize the health over time and set up alerting for when health checks fail. This could be integrated with existing monitoring and alerting tools. By following these best practices, you can effectively implement and expose health checks in your MicroProfile applications, improving observability and reliability, especially in cloud-native environments. This chapter provided a comprehensive overview of MicroProfile Health, emphasizing its critical role in enhancing the observability and reliability of microservices within cloud environments. Key topics included an introduction to the MicroProfile Health specification, detailed explanations of health check types (liveness, readiness, and startup checks), and guidance on implementing, exposing, and effectively utilizing these health checks. The essence of MicroProfile Health lies in its standardized mechanism for microservices to report health status via HTTP endpoints, facilitating automated decision-making processes like scaling, failover, and recovery in cloud or containerized environments. The specification defines three primary types of health checks: liveness, readiness, and startup checks, each designed to assess different aspects of a microservice’s operational status. Implementing health checks involves creating procedures annotated with the respective health check annotations. These procedures return a HealthCheckResponse indicating the service’s health status (UP or DOWN). These checks are automatically exposed via predefined HTTP endpoints, allowing easy integration with orchestration tools like Kubernetes. The chapter also touched on best practices for effective health checks, including defining meaningful checks, utilizing health check responses, handling failures gracefully, and securing health check endpoints. In conclusion, MicroProfile Health offers a robust framework for monitoring and managing the health of microservices, ensuring that services remain reliable and available in dynamic cloud environments. By following the guidelines and best practices outlined in this chapter, developers can effectively implement and leverage health checks to maintain the overall health of their applications.","title":"Chapter 6: MicroProfile Health","component":"microprofile-tutorial","version":"6.1","name":"chapter06","url":"/microprofile-tutorial/6.1/chapter06/chapter06.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":2},{"text":"Overview of MicroProfile Health","hash":"overview-of-microprofile-health","id":3},{"text":"Key Concepts","hash":"key-concepts","id":4},{"text":"Health Check","hash":"health-check","id":5},{"text":"Types of Health Checks","hash":"types-of-health-checks","id":6},{"text":"Liveness Checks","hash":"liveness-checks","id":7},{"text":"Readiness Checks","hash":"readiness-checks","id":8},{"text":"Startup Checks","hash":"startup-checks","id":9},{"text":"Exposing Health Checks","hash":"exposing-health-checks","id":10},{"text":"Example JSON Response","hash":"example-json-response","id":11},{"text":"Standard Health Check","hash":"standard-health-check","id":12},{"text":"Implementing and Exposing Health Check","hash":"implementing-and-exposing-health-check","id":13},{"text":"The HealthCheck interface","hash":"the-healthcheck-interface","id":14},{"text":"The HealthCheckResponse class","hash":"the-healthcheckresponse-class","id":15},{"text":"The HealthCheckResponseBuilder class","hash":"the-healthcheckresponsebuilder-class","id":16},{"text":"Steps for Implementing Health Checks","hash":"steps-for-implementing-health-checks","id":17},{"text":"Implementing Health Checks","hash":"implementing-health-checks","id":18},{"text":"Integration with CDI","hash":"integration-with-cdi","id":19},{"text":"Accessing Health Checks","hash":"accessing-health-checks","id":20},{"text":"Kubernetes Probe Configuration","hash":"kubernetes-probe-configuration","id":21},{"text":"Best Practices for Effective Health Checks","hash":"best-practices-for-effective-health-checks","id":22},{"text":"Summary","hash":"summary","id":23}]},"16":{"id":16,"text":"This chapter provides a comprehensive and detailed overview of MicroProfile Metrics, a widely used specification for monitoring microservices. You will gain an understanding of the various types of metrics and how you can use them to monitor microservices effectively. Additionally, this chapter covers the standard metrics provided by MicroProfile and how you can leverage them to monitor various aspects of microservices. Furthermore, this chapter discusses the process of instrumenting microservices, which involves adding code to the application to collect metrics. You will learn how to expose endpoints to access metric data and interpret the data generated by these metrics. This chapter also highlights the importance of integrating monitoring solutions with MicroProfile Metrics. You will learn how to incorporate monitoring solutions and choose the right monitoring solution for your needs. By the end of this chapter, you will have a deep understanding of MicroProfile Metrics and the various techniques for monitoring microservices. This chapter will equip you with the knowledge and skills to effectively monitor your microservices and ensure they perform optimally. Introduction to MicroProfile Metrics Need for Metrics in Microservices Types of Metrics MicroProfile Metrics Dependency Metrics Annotations Categories of Metrics Metric Registry Instrumenting Microservices with Metrics Creating Custom Metrics It is essential to monitor your microservices to ensure smooth operations. You can monitor a microservice using two different techniques: Metrics and health checking. Health checks provide information on the health status of a service, such as whether it is up and running, while Metrics offer more detailed information on its performance, such as response times, throughput, and error rates. In the previous chapter, we discussed health checks and their importance. This chapter will cover the MicroProfile Metrics specification, which provides a standardized way of collecting and exposing performance data for Java microservices. MicroProfile Metrics is a specification for developers who want to measure their applications' performance more thoroughly. It provides a set of annotations and APIs to track various metrics related to the application’s health and performance. For instance, developers can use these APIs to track metrics such as the number of requests processed, the response time of each request, and the size of the response sent back to the client. This specification defines a standardized format for exposing metrics, which other tools and frameworks can easily collect and track. By using this specification, developers can monitor the performance of their applications in real time and identify any issues that may impact the user experience. Moreover, this specification defines a set of standard metrics that we can expose in Prometheus. With the help of this tool, developers can optimize their applications for better performance, ensuring that they meet the requirements of their consumers while delivering a seamless experience. Prometheus is a powerful tool designed to monitor and collect metrics from your services. It provides a highly efficient time-series database system that securely stores your data for long-term analysis. With Prometheus, you can easily visualize and gain insights into your system’s performance, allowing you to make informed decisions and optimize your services for better efficiency and reliability. Metrics, enables developers and operators to monitor and measure the behavior of microservices at runtime. This observability is crucial for: Performance Tuning: Identifying bottlenecks and optimizing resource utilization to ensure services are running efficiently. Scalability: Making informed decisions on when to scale services up or down based on real-time data on load and performance. Troubleshooting: Quickly pinpointing issues by analyzing trends in performance metrics, leading to reduced downtime. Service Health Monitoring: Complementing the MicroProfile Health checks by providing deeper insights into the internal state of a service, beyond simple up/down statuses. MicroProfile Metrics offers a range of customizable metrics that can be used to measure and monitor microservices' performance. It allows developing microservices that are observable, manageable, and which provide insights into their behavior. The MicroProfile Metrics specification includes four different types of metrics that serve specific monitoring purposes: Counter, Gauge, Histogram, and Timer. Each of these types offers unique insights into different aspects of application behavior and performance. Below is the breakdown of available metric types: Counter: It is a simple metric type that represents a single numerical value that can only increase over time. This metric is typically used to count occurrences of certain events, such as the number of requests processed, items created, or tasks completed. Monitoring tools like Prometheus are commonly used to analyze changes in the Counter’s value over specific intervals. These tools can track the differences in the Counter’s value across time periods, providing insights into the rate of occurrences and trends. Gauge: It is a metric type that measures an instantaneous value of something , which can arbitrarily go up or down. It’s used to capture the value of a metric at a particular point in time like the size of a queue, memory usage, or current number of active user sessions. Gauges are typically used for values that change over time, providing a current \"gauge\" of the system’s state. Histograms: They provide a distribution of values for a given metric, which are useful for identifying performance outliers. It measures the frequency of values in different ranges (or \"buckets\") and is useful for tracking the distribution of values, such as response times or data sizes. Histograms can give insights into the average, percentiles, and trends of the measured data over time. Timer: It is a specialized metric type that aggregates timing durations and provides data such as the count, total time, mean, and maximum duration. It can also report the duration distribution. Timers are invaluable for tracking the duration of certain activities or operations within your application, such as processing time or method execution time. Note: Counters, Histograms, and Timers, which are updated synchronously when annotations or API calls are made to update them, Gauges are registered as callbacks. These callbacks are invoked to retrieve their value at the moment the list of metrics is requested, typically by a monitoring tool calling the /metrics endpoint. This allows Gauges to provide a real-time snapshot of dynamic values as they fluctuate. By leveraging these metrics, developers and operators can gain a deeper understanding of how their microservices are performing. They can use this information to identify areas where improvements can be made and optimize their microservices' performance. If you’re using Maven, add the following dependency to your pom.xml file located in the root folder of your project: <dependency> <groupId>org.eclipse.microprofile.metrics</groupId> <artifactId>microprofile-metrics-api</artifactId> <version>5.1.1</version> </dependency> For Gradle, add the corresponding dependency to your build.gradle file located within the root folder of your project: dependencies { providedCompile 'org.eclipse.microprofile.metrics:microprofile-metrics-api:5.1.1' } MicroProfile Metrics defines a set of annotations to be used for exposing metrics. These annotations can be used on classes, methods, or fields. Table 7-1 shows the list of Metrics Annotation along with their descriptions. Annotation Description @Timed Times how long a method takes to execute and exposes this information as a metric. @Counted Tracks how many times a method is invoked and exposes this information as a metric. @Gauge Enables you to expose a custom metric that can be any value. It is useful for exposing application-specific metrics. Besides annotations, MicroProfile Metrics also defines a set of programmatic APIs for working with metrics. These APIs can be used to register custom metrics or access existing metrics. In MicroProfile Metrics, metrics are organized into three distinct scopes: Base, Vendor, and Application. This categorization is designed to clearly separate metrics by their origin and relevance, making it easier for developers and operators to monitor and manage the performance of their microservices. Each scope serves a specific purpose and contains a different set of metrics: Base Metrics are common to all applications, such as the number of CPUs or the amount of free memory. These metrics provide essential information about the underlying Java Virtual Machine (JVM) and the core libraries that are common across all MicroProfile applications. Base metrics typically include JVM-specific metrics such as memory usage, CPU load, thread counts, and garbage collection statistics. The intention behind base metrics is to offer a consistent set of low-level metrics that are universally applicable and useful for monitoring the health and performance of the JVM itself, which is the foundation upon which all MicroProfile applications run. Base metrics are exposed under the path /metrics?scope=base. Application Metrics are specific to an application, they are defined by the developers of the MicroProfile applications themselves. These are custom metrics that are specific to the business logic or operational aspects of the application. Developers use annotations or programmatic APIs to create and register these metrics, tailoring them to monitor the performance and behavior of their application’s unique functionalities. Application metrics enable developers to gain insights into the runtime characteristics of their application, such as the number of transactions processed, response times for specific endpoints, or the rate of specific business events. Application metrics are exposed under the path /metrics?scope=application. Vendor Metrics are specific to a particular vendor or technology. These metrics provide insights into the performance and behavior of the runtime’s internal components and extensions. Since different MicroProfile implementations may offer additional features or optimize certain areas differently, vendor metrics can vary widely between runtimes. They allow runtime vendors to expose unique metrics that are relevant to their implementation, offering users the ability to monitor vendor-specific aspects of their applications. Application metrics are exposed under the path /metrics?scope=vendor. Besides the standard scopes above, MicroProfile Metrics also supports custom scopes. You can use custom scopes to group sets of metrics that you frequently expect to view together. Note: In version 5.x, base metrics have become optional. This allows for flexibility in environments where these metrics may not be necessary or where they can be sourced from alternative monitoring tools. The MetricRegistry component acts as a container for storing and managing metrics within an application. It provides a structured way to collect, organize, and access various types of metrics (e.g., counters, gauges, histograms, and timers) for monitoring the behavior and performance of applications. It offers a centralized repository where metrics can be created and retrieved. This allows applications to consistently monitor critical operational and performance statistics. MicroProfile Metrics creates metric registries for each scope: Application Scope (MetricRegistry.Type.APPLICATION): Contains custom metrics that are specific to the application. These are typically the metrics that developers explicitly create and register to monitor application-specific behaviors. Base Scope (MetricRegistry.Type.BASE): Contains metrics that are fundamental and common across all MicroProfile applications. These metrics provide basic information about the underlying JVM and application server. Vendor Scope (MetricRegistry.Type.VENDOR): Contains metrics that are specific to the implementation of the MicroProfile platform being used. These metrics offer insights into vendor-specific features and optimizations. A metric registry is created as per the above scopes to enable the organization of metrics based on their origin and relevance. Instrumenting microservices with MicroProfile Metrics enables developers to gain detailed insights into their application’s operational health and performance. This level of observability is essential for maintaining scalable and resilient microservice architectures in dynamic environments. MicroProfile Metrics also allows you to track a method’s response time as a timed metric. The code example below shows how to use the @Timed annotation to track the response time. import org.eclipse.microprofile.metrics.annotation.Timed; // … public class ProductResource { // … // Expose the response time as a timer metric @Timed(name = \"productLookupTime\", tags = {\"method=getProduct\"}, absolute = true, description = \"Time spent looking up products\") public Product getProduct(@PathParam(\"id\") Long productId) { return productService.getProduct(productId); } // … It will expose a metric called productLookupTime, which will track the amount of time spent in the getProduct() method in seconds. You can visit the following URL https://localhost:<port>/metrics?scope=application (Replace <port> with the actual port where the server is running) to see the response time of this method as below: … # HELP productLookupTime_seconds_max Time spent looking up products # TYPE productLookupTime_seconds_max gauge productLookupTime_seconds_max{method=\"getProduct\",mp_scope=\"application\",} 0.002270643 … MicroProfile Metrics also allows you to track the number of invocations of a method as a counter metric. The code example below shows how to use the @Counted annotation to track the invocation count. import org.eclipse.microprofile.metrics.Metrics; public class ProductResource { // Expose the invocation count as a counter metric @Counted(name = \"productAccessCount\", absolute = true, description = \"Number of times the list of products is requested\") public Response getProducts() { // Method implementation // .... } } In the example above, the @Counted annotation tells MicroProfile Metrics to track the number of invocations of the getProducts() method and expose this metric as a counter. The name, and description of the metric can also be specified. You can visit the following URL https://localhost:<port>/metrics?scope=application (Replace <port> with the actual port where the server is running) to see the number of times this method is called as below: … # HELP productAccessCount_total Number of times the list of products is requested # TYPE productAccessCount_total counter productAccessCount_total{mp_scope=\"application\",} 3.0 … Creating a custom metric to track the number of products in a catalog involves using the MicroProfile Metrics API. This custom metric can be implemented as a gauge, which measures an instantaneous value (in this case, the current number of products in the catalog). import org.eclipse.microprofile.metrics.annotation.Gauge; … @Path(\"/products\") @ApplicationScoped public class ProductResource { // … @GET @Path(\"/count\") @Produces(MediaType.APPLICATION_JSON) @Gauge(name = \"productCatalogSize\", unit = \"none\", description = \"Current number of products in the catalog\") public long getProductCount() { return productCatalogSize; } } The gauge metric productCatalogSize can be accessed through the following endpoint: /metrics?name=io_microprofile_tutorial_store_product_resource_ProductResource_productCatalogSize This custom metric implementation provides a real-time insight into the size of your product catalog, which can be invaluable for monitoring the scale of your service’s data and understanding its behavior over time. Vendors may, by their own implementation, support /metrics?name=<name> to directly retrieve that metric from all scopes. However, the specification itself only illustrates /metrics?scope=<scope>&name=<name>. This Chapter delved into the intricacies of MicroProfile Metrics, illuminating its role as a pivotal specification for efficiently monitoring microservices. Now you are equipped with a thorough understanding of diverse metric types and their application for monitoring microservice performance. This chapter highlighted the need for regular microservice monitoring via metrics and health checks, emphasizing metrics for detailed performance insights such as response times and throughput. Through practical examples, this chapter showcases how to instrument microservices with MicroProfile Metrics, leveraging standard metrics, and creating custom metrics to monitor microservices comprehensively.","title":"Chapter 7: MicroProfile Metrics","component":"microprofile-tutorial","version":"6.1","name":"chapter07","url":"/microprofile-tutorial/6.1/chapter07/chapter07.html","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":2},{"text":"Introduction to MicroProfile Metrics","hash":"introduction-to-microprofile-metrics","id":3},{"text":"Need for Metrics in Microservices","hash":"need-for-metrics-in-microservices","id":4},{"text":"Types of Metrics","hash":"types-of-metrics","id":5},{"text":"MicroProfile Metrics Dependency","hash":"microprofile-metrics-dependency","id":6},{"text":"Metrics Annotations","hash":"metrics-annotations","id":7},{"text":"Categories of Metrics","hash":"categories-of-metrics","id":8},{"text":"Metric Registry","hash":"metric-registry","id":9},{"text":"Types of Metric Registries","hash":"types-of-metric-registries","id":10},{"text":"Instrumenting Microservices with MicroProfile Metrics","hash":"instrumenting-microservices-with-microprofile-metrics","id":11},{"text":"Tracking response time using @Timed","hash":"tracking-response-time-using-timed","id":12},{"text":"Tracking number of invocations using @Counted","hash":"tracking-number-of-invocations-using-counted","id":13},{"text":"Creating a Custom Metric","hash":"creating-a-custom-metric","id":14},{"text":"Summary","hash":"summary","id":15}]},"17":{"id":17,"text":"In a Microservices architecture, an application consists of multiple smaller, autonomous services. This architecture enhances development flexibility, agility, and scalability but introduces new challenges, particularly in ensuring the application’s reliability and managing failures. Unlike monolithic applications, where defects are localized, a single failure in one microservice can propagate across the entire application, potentially causing widespread outages. Therefore, fault tolerance is critical in a microservices architecture to ensure that failures are seamlessly isolated, managed, and recovered. MicroProfile Fault Tolerance offers strategies for building resilient and reliable microservices, ensuring service continuity and stability even during unexpected failures. This chapter explains how to enhance your microservices' resilience and reliability using MicroProfile Fault Tolerance capabilities and annotations. We will also demonstrate how to implement key strategies such as timeouts, retries, fallbacks, circuit breakers, and bulkheads to handle faults. By the end of the chapter, you will understand how to use these strategies to enhance the resilience of your microservices. What is Fault Tolerance? Key Strategies for Enhancing Fault Tolerance Implementing Retry Policies and Configuration Avoiding and Managing Cascading Failures Configuring Circuit Breaker Using @Asynchronous Annotation Setting Timeouts Implementing Fallback Logic Isolating Resources for Fault Tolerance Fault tolerance is a system’s ability to continue working correctly even in case of unexpected failures. A fault-tolerant system should be able to detect, isolate, and recover from errors without human intervention. It is critical in applications based on modern microservices architectures where individual component failures are inevitable due to network issues, resource limitations, or transient errors. Some of the key strategies for enhancing the fault tolerance of a microservices-based application include: Asynchronous execution allows operations to run in a separate thread. It means the caller does not have to wait for the operation to finish, making the application more responsive. For example, when a user searches for products in the product catalog service, the service can asynchronously fetch product recommendations from an external API while immediately returning the main search results to the user, ensuring a fast and responsive experience. When applied individually or in combination, these strategies form the foundation of a fault-tolerant microservices architecture. The following sections delve deeper into their implementation and best practices. A timeout sets a time limit for operations, preventing indefinite waits and freeing up system resources for other tasks. For instance, a timeout in payment service ensures that the application can recover gracefully if the payment processing is taking too long to respond. A retry allows the system to automatically retry failed operations, particularly useful for handling transient errors like temporary network glitches. You can customize the retry policy with parameters such as the delay between retries and maximum retries. Adding jitter prevents synchronized retries across services. For example, a payment service can retry a failed payment authorization request with an external payment gateway to ensure successful transaction processing. A bulkhead isolates failures in one part of a system from other parts by segregating resources, such as thread pools, connection pools, or memory, among different microservices interactions. For example, in an e-commerce application, the catalog service can implement bulkheads using separate thread pools or connection pools for different upstream dependencies, such as the product database and the pricing service. If the pricing service becomes slow or unresponsive, a bulkhead prevents it from consuming all the resources of the catalog service, ensuring that requests to fetch product details from the database continue to work unaffected. A fallback provides a default response if an operation fails. It ensures the system continues providing a meaningful response instead of completely failing. For example, if the database fails or becomes slow in the product catalog service, the system can fetch cached product data to continue serving user requests for product listings. A circuit breaker stops an application from making too many unsuccessful requests to another system. If the number of failures exceeds a threshold, the circuit breaker will open, causing all subsequent requests to fail immediately. After a configured delay, the circuit breaker will half-open and allow limited requests. If those requests succeed, the circuit breaker will close and let all requests go through. MicroProfile Fault Tolerance 1. MicroProfile Fault Tolerance For example, a circuit breaker can be applied to calls to an external inventory service in the Product Catalog Microservice. If the inventory service starts failing or becomes unresponsive, the circuit breaker will open, preventing repeated requests and reducing load. After a configured delay, the circuit breaker will half-open to test the availability of the inventory service with a few requests. If those succeed, the circuit breaker will close, resuming normal operations. The Fault Tolerance API equips developers with annotations to enhance the resilience of microservices against failures. It integrates seamlessly with the MicroProfile Config API, enabling the dynamic configuration of fault tolerance behaviors without modifying the application code. This section will explore using the Fault Tolerance API to build a robust, fault-tolerant microservice. To use the Fault Tolerance API in your project, include the following dependency in your pom.xml file. Ensure you specify the version (e.g., 4.1.1) compatible with your MicroProfile runtime. <dependency> <groupId>org.eclipse.microprofile.fault-tolerance</groupId> <artifactId>microprofile-fault-tolerance-api</artifactId> <version>4.1.1</version> </dependency> The Fault Tolerance API defines a contract for fault tolerance implementations. The MicroProfile Fault Tolerance annotations provide a declarative way to implement fault-tolerant behavior in Java methods, allowing developers to handle failures gracefully with minimal code changes. Annotation Description @Asynchronous Ensures that the annotated method executes in a separate thread, allowing non-blocking execution. This is useful for improving responsiveness and handling long-running tasks asynchronously. @Retry Specifies that the annotated method should automatically retry on failure. Parameters such as maxRetries, delay, maxDuration, and jitter control retry behavior. Configurations can be externalized using MicroProfile Config. @Timeout Specifies the maximum duration (in milliseconds) the method can execute before being aborted. If the timeout is exceeded, a FaultToleranceException is thrown. @CircuitBreaker Defines a circuit breaker mechanism to prevent repeated calls to a failing method. Includes parameters like failureRatio, delay, and requestVolumeThreshold. @Fallback Specifies alternative logic to execute when the primary method fails. This ensures meaningful responses and graceful degradation. @Bulkhead Limits the number of concurrent method executions to isolate system resources and prevent cascading failures. Retries are a fundamental fault tolerance strategy for managing transient failures such as temporary network outages or intermittent service unavailability. The @Retry annotation in the MicroProfile Fault Tolerance API provides a simple and effective way to implement retry policies. By customizing parameters such as the number of retries, delay between attempts, and conditions for retries, you can ensure your application responds to failures gracefully and minimizes downtime. Below is an example of applying the @Retry annotation in a processPayment method within a PaymentService class of the MicroProfile e-commerce project: package io.microprofile.tutorial.store.payment.service; import org.eclipse.microprofile.faulttolerance.Retry; import jakarta.ws.rs.core.Response; import jakarta.ws.rs.core.MediaType; public class PaymentService { @Retry( maxRetries = 3, delay = 2000, jitter = 500, retryOn = PaymentProcessingException.class, abortOn = CriticalPaymentException.class ) public Response processPayment(PaymentDetails paymentDetails) throws PaymentProcessingException { System.out.println(\"Processing payment for amount: \" + paymentDetails.getAmount()); // Simulating a transient failure if (Math.random() > 0.7) { throw new PaymentProcessingException(\"Temporary payment processing failure\"); } return Response.ok(\"{\\\"status\\\":\\\"success\\\"}\", MediaType.APPLICATION_JSON).build(); } } To store the necessary payment information, the following PaymentDetails class is used. This class acts as a simple data container for payment-related details. class PaymentDetails { private double amount; public double getAmount() { return amount; } public void setAmount(double amount) { this.amount = amount; } } The PaymentProcessingException class represents a recoverable error, which triggers retries when thrown. package io.microprofile.tutorial.store.payment.exception; public class PaymentProcessingException extends Exception { public PaymentProcessingException(String message) { super(message); } } The CriticalPaymentException is considered a non-recoverable failure. If this exception occurs, the retry process is aborted. package io.microprofile.tutorial.store.payment.exception; class CriticalPaymentException extends Exception { public CriticalPaymentException(String message) { super(message); } } In this example, the processPayment method attempts to process a payment. If a transient failure occurs (e.g., PaymentProcessingException), the method retries up to three times (maxRetries = 3), and there is a delay of 2000 milliseconds between retries (delay = 2000), with a random variation of up to 500 milliseconds added to the delay (jitter = 500) to avoid synchronized retries (e.g. thundering herd problem). The retries are attempted only for the exception PaymentProcessingException (retryOn = PaymentProcessingException.class) and are aborted if a CriticalPaymentException is encountered (abortOn = CriticalPaymentException.class). This approach helps maintain application resilience while preventing unnecessary retries that could worsen critical failures. A retry policy specifies the conditions under which an operation should be retried. The key attributes of the @Retry annotation include: Parameter Description maxRetries Specifies the maximum number of retries. delay Sets the time (in milliseconds) to wait between retry attempts. jitter Adds a random variation (in milliseconds) to the delay to avoid synchronized retries. retryOn Defines the exception(s) that should trigger a retry. Defaults to all exceptions if not specified. abortOn Specifies the exception(s) that should not trigger a retry, overriding the default retry behavior. maxDuration Limits the total time (in milliseconds) that retries can be attempted. Retry policies can be externalized using the MicroProfile Config API. This allows you to modify the retry behavior without changing the application code. Here’s how to externalize the configuration: Add the @Retry annotation with minimal attributes: package io.microprofile.tutorial.store.payment.service; import org.eclipse.microprofile.faulttolerance.Retry; import jakarta.ws.rs.core.Response; import jakarta.ws.rs.core.MediaType; public class PaymentService { @Retry public Response processPayment(PaymentDetails paymentDetails) throws PaymentProcessingException { System.out.println(\"Processing payment for amount: \" + paymentDetails.getAmount()); // Simulating a transient failure if (Math.random() > 0.7) { throw new PaymentProcessingException(\"Temporary payment processing failure\"); } return Response.ok(\"{\\\"status\\\":\\\"success\\\"}\", MediaType.APPLICATION_JSON).build(); } } Define the retry policy in a configuration file (e.g., microprofile-config.properties): io.microprofile.tutorial.store.payment.service.PaymentService/processPayment/Retry/maxRetries=3 io.microprofile.tutorial.store.payment.service.PaymentService/processPayment/Retry/delay=2000 io.microprofile.tutorial.store.payment.service.PaymentService/processPayment/Retry/jitter=500 In this approach, you gain flexibility to adapt retry policies based on the environment, such as increasing retry attempts in production or reducing delays during testing. Limit Retries: Avoid setting maxRetries too high, as excessive retries can overwhelm the system or cause cascading failures. Use Jitter: Always configure jitter to reduce the risk of synchronized retry attempts by multiple services. Abort Non-Recoverable Errors: Use the abortOn parameter to exclude critical exceptions that retries cannot resolve. Monitor Metrics: Integrate with MicroProfile Metrics to track retry patterns and adjust configurations dynamically based on real-world performance. Combine Strategies: For robust error handling, use retries alongside other fault tolerance mechanisms, such as timeouts and circuit breakers. In a distributed microservices architecture, cascading failures occur when the failure of one service propagates to others, potentially causing widespread system outages. Such failures often result from tightly coupled services, unbounded retries, or resource exhaustion. Tight Coupling: Dependencies between services without sufficient isolation mechanisms. Unbounded Retries: Excessive retries on failing services, overwhelming resources. Resource Contention: Exhaustion of critical resources such as thread pools, memory, or database connections. Lack of Fail-Safe Mechanisms: Missing circuit breakers, bulkheads, or fallback logic. Use circuit breakers to isolate failing services. Apply bulkheads to limit the scope of failures and resource usage. Set timeouts to prevent long-running operations from blocking resources. Design retries with care to avoid overwhelming the system. A circuit breaker is a critical fault tolerance mechanism that protects a system from repeated failures of a dependent service. It stops repeated calls to a failing service, allowing it to recover. Parameter Description failureRatio Specifies the proportion of failed requests required to open the circuit breaker. requestVolumeThreshold The minimum number of requests made in a rolling time window before the failure ratio is evaluated. delay The time (in milliseconds) the circuit breaker remains open before transitioning to the \"half-open\" state. successThreshold The number of consecutive successful test requests required in the \"half-open\" state to close the circuit breaker. failOn Specifies the exception(s) considered failures contributing to the failure ratio. Below is an example of configuring a circuit breaker for a service method using the @CircuitBreaker annotation: @CircuitBreaker( requestVolumeThreshold = 10, failureRatio = 0.5, delay = 5000, successThreshold = 2, failOn = RuntimeException.class ) public String getProduct(Long id) { // Logic to call the product details service if (Math.random() > 0.7) { throw new RuntimeException(\"Simulated service failure\"); } return productRepository.findProductById(id); } In the above code, the circuit breaker opens if 50% of requests fail (failureRatio = 0.5) after at least 10 requests (requestVolumeThreshold = 10). It remains open for 5 seconds (delay = 5000) and transitions to the \"half-open\" state to test recovery. Two consecutive successful requests (successThreshold = 2) in the \"half-open\" state close the circuit breaker. Using MicroProfile Config, you can externalize circuit breaker parameters to make them adjustable without code changes as below: Update the @CircuitBreaker annotation: @CircuitBreaker (failOn = RuntimeException.class) public String getProduct(Long id) { // Logic to call the product details service if (Math.random() > 0.7) { throw new RuntimeException(\"Simulated service failure\"); } return productRepository.findProductById(id); } Define the configuration in microprofile-config.properties: io.microprofile.tutorial.store.payment.service.ProductService/fetchProductDetails/CircuitBreaker/requestVolumeThreshold=10 io.microprofile.tutorial.store.payment.service.ProductService/fetchProductDetails/CircuitBreaker/failureRatio=0.5 io.microprofile.tutorial.store.payment.service.ProductService/fetchProductDetails/CircuitBreaker/delay=5000 io.microprofile.tutorial.store.payment.service.ProductService/fetchProductDetails/CircuitBreaker/successThreshold=2 Set Realistic Failure Ratios and Thresholds: Tailor parameters to your services' expected load and failure behavior. Monitor Metrics: Use MicroProfile Metrics to monitor circuit breaker state transitions. Combine with Other Strategies: Use circuit breakers alongside retries and timeouts for a robust fault tolerance setup. The @Asynchronous annotation in MicroProfile Fault Tolerance is used to enable asynchronous execution of methods. It allows operations to run in a separate thread, freeing up the main thread for other tasks. This approach enhances the application’s responsiveness and scalability, particularly in high-concurrency or latency-sensitive scenarios. Improved Responsiveness: The caller does not need to wait for the method execution to complete, allowing the application to remain interactive. Non-Blocking Execution: Long-running operations are offloaded to a separate thread, preventing bottlenecks. Scalability: By decoupling method execution from the calling thread, you can handle higher loads without increasing thread contention. Below is an example of using the @Asynchronous annotation with MicroProfile Fault Tolerance: package io.microprofile.tutorial.store.payment.service; import org.eclipse.microprofile.faulttolerance.Bulkhead; import jakarta.enterprise.context.ApplicationScoped; import org.eclipse.microprofile.faulttolerance.Asynchronous; import java.util.concurrent.CompletableFuture; import java.util.concurrent.CompletionStage; @ApplicationScoped public class PaymentService { private static final int SIMULATED_DELAY_MS = 2000; /** * Processes payments asynchronously * * @return A CompletionStage with the result of the operation. */ @Asynchronous public CompletionStage<String> processPayment() { simulateDelay(); return CompletableFuture.completedFuture(\"Payment processed asynchronously.\"); } /** * Simulates a delay in processing */ private void simulateDelay() { try { Thread.sleep(SIMULATED_DELAY_MS); // Simulating delay } catch (InterruptedException e) { Thread.currentThread().interrupt(); throw new RuntimeException(\"Error during simulated delay\", e); } } } Timeout values can be externalized using the MicroProfile Config API, allowing flexibility to adjust values without modifying code. Here’s how: * Define the @Timeout annotation without specifying the value: @Timeout public String fetchData() { // Logic } Configure the timeout in microprofile-config.properties: io.microprofile.tutorial.store.payment.service.ProductService/fetchData/Timeout/value=1500 Use CompletableStage or Future: Return types like CompletableStage allow asynchronous methods to integrate seamlessly with other asynchronous workflows. When used with other fault tolerance strategies, @Asynchronous provides a powerful mechanism to handle faults without impacting the system’s responsiveness: Asynchronous with Bulkhead: Isolates resources while maintaining non-blocking execution. Handles concurrent requests efficiently using thread pools. Asynchronous with Circuit Breaker: Prevents system overload during failures by breaking the circuit for failing asynchronous methods. The circuit breaker’s delay allows recovery while new threads are available for other tasks. Timeouts are an essential fault tolerance strategy to prevent long-running operations from consuming resources indefinitely. Slow or unresponsive services can degrade overall system performance and reliability in a microservices architecture. The @Timeout annotation provided by MicroProfile Fault Tolerance allows you to define a maximum duration for a method to complete, ensuring that system resources remain available for other tasks. In distributed systems, slow responses from downstream services can cascade through the system, leading to resource contention and degraded performance. Timeouts allow you to: - Abort operations that exceed acceptable time limits. - Free system resources for other operations. - Trigger alternative strategies, such as fallbacks, to maintain functionality. package io.microprofile.tutorial.store.payment.service; import io.microprofile.tutorial.store.payment.entity.PaymentDetails; import io.microprofile.tutorial.store.payment.exception.PaymentProcessingException; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; import java.util.concurrent.CompletionStage; import java.util.concurrent.CompletableFuture; import java.util.logging.Logger; import org.eclipse.microprofile.faulttolerance.Asynchronous; import org.eclipse.microprofile.faulttolerance.Timeout; @ApplicationScoped public class PaymentService { private static final int TIMEOUT_MS = 1000; private static final double FAILURE_THRESHOLD = 0.7; @Inject private Logger logger; /** * Processes payments asynchronously with a timeout. * * @param paymentDetails the payment details * @return a CompletionStage with the result of the operation */ @Asynchronous @Timeout(TIMEOUT_MS) public CompletionStage<String> processPayment(PaymentDetails paymentDetails) { return CompletableFuture.supplyAsync(() -> { simulateDelay(); logger.info(\"Processing payment for amount: \" + paymentDetails.getAmount()); if (Math.random() > FAILURE_THRESHOLD) { throw new PaymentProcessingException(\"Temporary payment processing failure\"); } return \"{\\\"status\\\":\\\"success\\\", \\\"message\\\":\\\"Payment processed successfully.\\\"}\"; }).exceptionally(ex -> { logger.warning(\"Payment processing failed: \" + ex.getMessage()); return \"{\\\"status\\\":\\\"failure\\\", \\\"message\\\":\\\"Payment failed due to a temporary issue.\\\"}\"; }); } /** * Simulates a delay in processing. */ private void simulateDelay() { try { Thread.sleep(2000); // Simulating delay } catch (InterruptedException e) { Thread.currentThread().interrupt(); logger.severe(\"Error during simulated delay: \" + e.getMessage()); throw new RuntimeException(\"Error during simulated delay\", e); } } } In this example, the @Timeout(1000) annotation specifies that the processPayment method must complete within 1000 milliseconds (1 second). If the execution exceeds this time, a TimeoutException will be thrown, and the process will terminate. @Asynchronous ensures non-blocking execution by making the method run in a separate thread. To explore the benefits of asynchronous programming with MicroProfile Fault Tolerance, the following resources provide valuable insights and real-world examples: Asynchronous Programming with MicroProfile Fault Tolerance (Part 1) Asynchronous Programming with MicroProfile Fault Tolerance (Part 2) These articles explain how asynchronous execution enhances system responsiveness, reduces blocking, and ensures better resource utilization in MicroProfile applications. Align Timeouts with SLAs: Ensure timeout values align with service-level agreements and user expectations. Monitor Performance: Use MicroProfile Metrics to monitor execution times and identify operations requiring optimized timeout values. Combine with Fallbacks: Always pair timeouts with fallback logic to provide a reliable response in case of delays. Avoid Overly Short Timeouts: Overly aggressive timeout settings may cause unnecessary failures, particularly in high-latency environments. Combine Timeout with Asynchronous: Use timeout together with asynchronous to improve responsiveness and prevent blocking the calling thread. This approach ensures better resource utilization and system scalability during long-running operations. Fallbacks provide a default response when an operation fails. They ensure the system continues to function, even if the primary operation cannot complete successfully. The @Fallback annotation in MicroProfile Fault Tolerance allows developers to define fallback logic for a method, ensuring graceful degradation. Fallbacks help to: - Maintain system availability during failures. - Provide a meaningful response to users instead of complete failure. - Improve user experience by minimizing disruptions. import org.eclipse.microprofile.faulttolerance.Fallback; import jakarta.ws.rs.core.Response; public class PaymentService { @Fallback(fallbackMethod = \"fallbackProcessPayment\") public Response processPayment(PaymentDetails paymentDetails) { // Simulate a failure throw new RuntimeException(\"Service Unavailable\"); } public Response fallbackProcessPayment(PaymentDetails paymentDetails) { return Response.ok(\"{\\\"status\\\":\\\"failed\\\", \\\"message\\\":\\\"Payment service is currently unavailable.\\\"}\").build(); } } In this example: - The @Fallback annotation specifies that if the processPayment method fails, the fallbackProcessPayment method will be executed. - The fallback method provides a meaningful response, ensuring the user is informed of the service unavailability. A fallback handler class can implement the FallbackHandler<T> interface, allowing for reusable fallback logic across multiple methods. import org.eclipse.microprofile.faulttolerance.Fallback; import org.eclipse.microprofile.faulttolerance.FallbackHandler; import org.eclipse.microprofile.faulttolerance.ExecutionContext; public class ProductService { @Fallback(FallbackHandlerImpl.class) public Product getProduct(Long id) { // Logic to call the product details service if (Math.random() > 0.7) { throw new RuntimeException(\"Simulated service failure\"); } return productRepository.findProductById(id); } } public class FallbackHandlerImpl implements FallbackHandler<String> { @Override public String handle(ExecutionContext context) { return \"Fallback response for product details.\"; } } Fallback logic can be combined with other fault tolerance mechanisms to create a robust strategy: - Timeout with Fallback: Ensure operations terminate within a specific time and provide a fallback if they fail. Example: import org.eclipse.microprofile.faulttolerance.Fallback; import org.eclipse.microprofile.faulttolerance.Timeout; import jakarta.enterprise.context.RequestScoped; import io.microprofile.tutorial.store.product.cache.ProductCache; import io.microprofile.tutorial.store.product.entity.Product; @RequestScoped public class ProductService { @Inject private ProductRepository productRepository; // Access to the database @Inject private ProductCache productCache; // Cache mechanism /** * Retrieves a list of products. If the operation takes longer than 2 seconds, * fallback to cached data. */ @Timeout(2000) // Set timeout to 2 seconds @Fallback(fallbackMethod = \"getProductsFromCache\") // Fallback method public List<Product> getProducts() { if (Math.random() > 0.7) { throw new RuntimeException(\"Simulated service failure\"); } // database call return productRepository.findAllProducts(); } /** * Fallback method to retrieve products from the cache. */ public List<Product> getProductsFromCache() { System.out.println(\"Fetching products from cache...\"); return productCache.getAll().stream() .map(obj -> (Product) obj) .collect(Collectors.toList()); } } This example demonstrates the use of MicroProfile Fault Tolerance annotations @Timeout and @Fallback to enhance the resilience of the ProductService. When getProducts() method is invoked, the application tries to retrieve product data from the database using productRepository.findAllProducts(). The @Timeout(2000) annotation ensures that this operation completes within 2 seconds. If the query executes successfully within this time, the method returns the product list as expected. However, if the execution time exceeds the timeout limit, a TimeoutException is triggered. Additionally, if an exception occurs within the time limit, the method also fails. To handle such failures gracefully, the @Fallback annotation specifies getProductsFromCache() as an alternative method. When a timeout or exception occurs, the fallback method is invoked, fetching product data from the cache instead of the database. This approach guarantees service availability and ensures a seamless user experience, even in scenarios where the database is slow or temporarily unavailable. For improved scalability and performance, @Asynchronous can be combined with @Timeout and @Fallback. This allows the method to execute in a non-blocking manner, freeing up system resources and enabling parallel processing of multiple requests. By utilizing asynchronous execution, the application can handle high loads efficiently while maintaining fault tolerance. To externalize the @Timeout configuration using MicroProfile Config, you can replace the hardcoded timeout value with a configurable property. This allows us to modify the timeout dynamically without changing the source code. Define a Configurable Property: Use @ConfigProperty to inject the timeout value. // ... @RequestScoped public class ProductService { @Inject private ProductRepository productRepository; // Access to the database @Inject private ProductCache productCache; // Cache mechanism // Inject the timeout value from MicroProfile Config @Inject @ConfigProperty(name = \"product.service.timeout\", defaultValue = \"2000\") private long timeoutValue; // ... Use the Configured Value in @Timeout Annotation: Define a getter method and using it in the annotation. ... /** * Provide the timeout value dynamically using a method reference. */ @Timeout(value = getTimeout()) // Use method reference to fetch dynamic value public long getTimeout() { return timeoutValue; } Define the Configuration Property: Configure the timeout in microprofile-config.properties: io.microprofile.tutorial.store.product.service.ProductService.timeout=3000 This sets the timeout to 3000 milliseconds (3 seconds) instead of the default 2000 making your application more configurable and adaptable without code changes. Keep Fallbacks Lightweight: Ensure fallback logic is simple and reliable, avoiding dependencies on other potentially failing services. Provide Meaningful Responses: The fallback response should maintain a reasonable user experience, even if it cannot replicate full functionality. Monitor Fallback Usage: Use metrics to track the frequency of fallback execution, which can indicate service health and the need for improvements. Plan for Degraded Functionality: Ensure the fallback behavior aligns with business priorities and provides the most critical features. Combining fault tolerance strategies, such as @Timeout, @Fallback, @CircuitBreaker, and @Retry, ensures resilience and efficient resource usage. Externalize configurations with MicroProfile Config for flexibility across environments. Resource isolation is a key principle in building resilient microservices. By isolating resources, you prevent failures in one part of the system from spreading and affecting others. MicroProfile Fault Tolerance provides features like bulkheads to achieve resource isolation and ensure critical components remain functional, even when others fail. In a distributed system, shared resources like thread pools, database connections, and network bandwidth can quickly become bottlenecks if not adequately managed. Resource isolation ensures: - Failures in one service do not deplete resources for other services. - Critical operations remain functional even under load or failure conditions. - Better predictability and control over system behavior. Bulkheads are a common pattern for isolating resources by dividing a system into separate pools or partitions. This ensures that a failure in one area does not impact others. The MicroProfile Fault Tolerance standard provides the @Bulkhead annotation to implement this pattern. MicroProfile supports two types of bulkheads: Semaphore-Style Bulkhead: Limits the number of concurrent requests. Thread Pool-Style Bulkhead: Runs a maximum number of requests on a thread pool to isolate operations. The semaphore-style bulkhead pattern limits the number of concurrent requests that can be processed by a service or method at any given time. Any additional requests are immediately rejected when the specified concurrency limit is reached. This approach prevents resource contention and protects the system from being overwhelmed during high traffic or failure scenarios. package io.microprofile.tutorial.store.payment.service; import org.eclipse.microprofile.faulttolerance.Bulkhead; import org.eclipse.microprofile.faulttolerance.Asynchronous; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; import java.util.concurrent.CompletableFuture; import java.util.concurrent.CompletionStage; import java.util.logging.Logger; @ApplicationScoped public class PaymentService { @Inject private Logger logger; @Inject @ConfigProperty(name = \"payment.simulatedDelay\", defaultValue = \"1000\") private int simulatedDelay; @Inject @ConfigProperty(name = \"payment.bulkhead.value\", defaultValue = \"5\") private int bulkheadValue; /** * Processes payment transactions with limited concurrency to prevent * system overload and ensure stability during high traffic. * * The @Bulkhead annotation ensures that only a limited number of * concurrent requests can access this method. * The @Asynchronous annotation enables the use of the thread pool * style bulkhead for non-blocking execution. * * @return A success message indicating the processing status. */ @Asynchronous @Bulkhead(value = bulkheadValue) public CompletionStage<String> processPayment() { logger.info(\"Starting payment processing...\"); simulateDelay(); logger.info(\"Payment processing completed.\"); return CompletableFuture.completedFuture(\"Payment processed asynchronously.\"); } /** * Simulates a delay in processing. */ private void simulateDelay() { try { Thread.sleep(simulatedDelay); // Simulating delay } catch (InterruptedException e) { Thread.currentThread().interrupt(); logger.severe(\"Error during simulated delay: \" + e.getMessage()); throw new RuntimeException(\"Error during simulated delay\", e); } } } In this example: - The method allows up to 5 concurrent invocations (value = 5). - Any additional requests are rejected to prevent overload, ensuring system stability. The thread-pool-style bulkhead pattern leverages a thread pool to achieve resource isolation. Incoming requests are placed into a queue when the maximum allowed number of threads are in use. Queued requests are executed as threads become available. This design helps manage resource contention effectively. package io.microprofile.tutorial.store.payment.service; import org.eclipse.microprofile.faulttolerance.Bulkhead; import jakarta.enterprise.context.ApplicationScoped; import org.eclipse.microprofile.faulttolerance.Asynchronous; import java.util.concurrent.CompletableFuture; import java.util.concurrent.CompletionStage; @ApplicationScoped public class PaymentService { private static final Logger logger = LoggerFactory.getLogger(PaymentService.class); /** * Processes payment transactions with limited concurrency using a thread pool * to prevent system overload and ensure stability during high traffic. * * The @Bulkhead annotation ensures that only a limited number of concurrent * requests (5 in this case) can access this method, and the @Asynchronous * annotation allows the use of the thread pool style bulkhead. */ @Bulkhead(value = 5, waitingTaskQueue = 10) @Asynchronous public CompletionStage<Void> processPayment() { return CompletableFuture.runAsync(() -> { simulateDelay(); System.out.println(\"Payment processed with limited concurrency.\"); }).thenRun(() -> logger.info(\"Payment processed with limited concurrency.\")); } private void simulateDelay() { try { Thread.sleep(1000); // Simulating a delay } catch (InterruptedException e) { Thread.currentThread().interrupt(); throw new RuntimeException(\"Error during payment processing simulation\", e); } } } In this example, The method uses up to 5 concurrent threads (value = 5) from a thread pool and a queue of up to 10 tasks (waitingTaskQueue = 10).This configuration prevents failures in one operation from depleting shared resources. Bulkhead resource limits can be externalized using MicroProfile Config to allow runtime adjustments. For example: Annotate the method without specific values: @Asynchronous @Bulkhead public CompletionStage<String> processPayment() { logger.info(\"Starting payment processing...\"); simulatePaymentProcessing(); logger.info(\"Payment processing completed.\"); return CompletableFuture.completedFuture(\"Payment processed successfully with an isolated thread pool.\"); } Define bulkhead parameters in microprofile-config.properties: com.example.Service/dynamicBulkheadOperation/Bulkhead/value=5 com.example.Service/dynamicBulkheadOperation/Bulkhead/waitingTaskQueue=10 Isolate Critical Resources: Use bulkheads for high-priority operations, such as authentication, to ensure they are not impacted by failures elsewhere. Monitor Usage: Track bulkhead metrics using MicroProfile Metrics to identify bottlenecks and adjust limits. Plan for Scaling: Test bulkhead configurations under various load conditions to ensure scalability. Combine with Graceful Degradation: Pair bulkheads with fallbacks to handle rejected requests gracefully. By effectively isolating resources, you can ensure that your microservices remain reliable and resilient, even in the face of unexpected failures or high demand. This approach not only protects critical operations but also improves overall system stability. This chapter explored the MicroProfile Fault Tolerance API and essential fault tolerance strategies: Retries: Automatically reattempt failed operations for transient errors. Timeouts: Define maximum execution times for operations to avoid resource blocking. Circuit Breakers: Prevent repeated calls to failing services and allow graceful recovery. Bulkheads: Limit concurrent operations and isolate resource usage. Fallbacks: Provide meaningful responses during failures. By leveraging these strategies and combining them effectively, you can design resilient microservices that gracefully handle failures, minimize disruptions, and ensure a seamless user experience.","title":"Chapter 8: MicroProfile Fault Tolerance","component":"microprofile-tutorial","version":"6.1","name":"chapter08","url":"/microprofile-tutorial/6.1/chapter08/chapter08.html","titles":[{"text":"Topics to be Covered","hash":"topics-to-be-covered","id":1},{"text":"What is Fault Tolerance?","hash":"what-is-fault-tolerance","id":2},{"text":"Key Strategies for Enhancing Fault Tolerance","hash":"key-strategies-for-enhancing-fault-tolerance","id":3},{"text":"Asynchronous Execution","hash":"asynchronous-execution","id":4},{"text":"Timeout","hash":"timeout","id":5},{"text":"Retry","hash":"retry","id":6},{"text":"Bulkhead","hash":"bulkhead","id":7},{"text":"Fallback","hash":"fallback","id":8},{"text":"Circuit Breaker","hash":"circuit-breaker","id":9},{"text":"Fault Tolerance API","hash":"fault-tolerance-api","id":10},{"text":"Adding Dependency for Fault Tolerance API","hash":"adding-dependency-for-fault-tolerance-api","id":11},{"text":"MicroProfile Fault Tolerance Annotations","hash":"microprofile-fault-tolerance-annotations","id":12},{"text":"List of Annotations","hash":"list-of-annotations","id":13},{"text":"Implementing Retry Policies and Configuration","hash":"implementing-retry-policies-and-configuration","id":14},{"text":"Applying @Retry in PaymentService class","hash":"applying-retry-in-paymentservice-class","id":15},{"text":"Defining the PaymentDetails Class","hash":"defining-the-paymentdetails-class","id":16},{"text":"Creating Custom Exception Classes for Handling Failures","hash":"creating-custom-exception-classes-for-handling-failures","id":17},{"text":"Understanding the @Retry Parameters","hash":"understanding-the-retry-parameters","id":18},{"text":"Externalizing Configuration with MicroProfile Config","hash":"externalizing-configuration-with-microprofile-config","id":19},{"text":"Best Practices for Retry Policies","hash":"best-practices-for-retry-policies","id":20},{"text":"Avoiding and Managing Cascading Failures","hash":"avoiding-and-managing-cascading-failures","id":21},{"text":"Causes of Cascading Failures","hash":"causes-of-cascading-failures","id":22},{"text":"Strategies to Prevent Cascading Failures","hash":"strategies-to-prevent-cascading-failures","id":23},{"text":"Configuring Circuit Breaker","hash":"configuring-circuit-breaker","id":24},{"text":"Circuit Breaker Parameters","hash":"circuit-breaker-parameters","id":25},{"text":"Externalizing Circuit Breaker Configuration","hash":"externalizing-circuit-breaker-configuration","id":26},{"text":"Best Practices for Circuit Breaker","hash":"best-practices-for-circuit-breaker","id":27},{"text":"Using @Asynchronous Annotation","hash":"using-asynchronous-annotation","id":28},{"text":"Why Use @Asynchronous?","hash":"why-use-asynchronous","id":29},{"text":"Implementation","hash":"implementation","id":30},{"text":"Externalizing Timeout Configuration","hash":"externalizing-timeout-configuration","id":31},{"text":"Best Practices for Using @Asynchronous","hash":"best-practices-for-using-asynchronous","id":32},{"text":"Asynchronous Execution in Fault Tolerance Strategies","hash":"asynchronous-execution-in-fault-tolerance-strategies","id":33},{"text":"Setting Timeouts","hash":"setting-timeouts","id":34},{"text":"Why Use Timeouts?","hash":"why-use-timeouts","id":35},{"text":"Best Practices for Timeouts","hash":"best-practices-for-timeouts","id":36},{"text":"Implementing Fallbacks","hash":"implementing-fallbacks","id":37},{"text":"Why Use Fallbacks?","hash":"why-use-fallbacks","id":38},{"text":"Using Fallback Handlers","hash":"using-fallback-handlers","id":39},{"text":"Combining Fallbacks with Other Fault Tolerance Strategies","hash":"combining-fallbacks-with-other-fault-tolerance-strategies","id":40},{"text":"Externalizing @Timeout Configuration using MicroProfile Config","hash":"externalizing-timeout-configuration-using-microprofile-config","id":41},{"text":"Best Practices for Fallbacks","hash":"best-practices-for-fallbacks","id":42},{"text":"Combining Fault Tolerance Strategies","hash":"combining-fault-tolerance-strategies","id":43},{"text":"Isolating Resources for Fault Tolerance","hash":"isolating-resources-for-fault-tolerance","id":44},{"text":"Why Resource Isolation Matters","hash":"why-resource-isolation-matters","id":45},{"text":"Using Bulkheads to Isolate Resources","hash":"using-bulkheads-to-isolate-resources","id":46},{"text":"Bulkhead Types","hash":"bulkhead-types","id":47},{"text":"Semaphore-Style Bulkhead","hash":"semaphore-style-bulkhead","id":48},{"text":"Thread Pool-Style Bulkhead","hash":"thread-pool-style-bulkhead","id":49},{"text":"Externalizing Bulkhead Configuration","hash":"externalizing-bulkhead-configuration","id":50},{"text":"Best Practices for Resource Isolation","hash":"best-practices-for-resource-isolation","id":51},{"text":"Summary","hash":"summary","id":52}]},"18":{"id":18,"text":"Microservices-based applications have better scalability, flexibility, and resilience, but they suffer from additional challenges regarding availability and performance monitoring. This makes observability critical to ensure these distributed systems operate reliably. MicroProfile Telemetry specification provides a set of vendor-neutral APIs for instrumenting, collecting, and exporting telemetry data such as traces, metrics, and logs. It is built on the foundation of OpenTelemetry from the Cloud Native Computing Foundation (CNCF) project, an open-source observability framework. In this chapter, we will explore the fundamentals of MicroProfile Telemetry, covering topics such as tracing concepts, instrumenting Telemetry, setting up tracing providers, context propagation and correlation, analyzing traces, security considerations for tracing, and more. By the end of this chapter, you will learn how to effectively leverage distributed tracing for debugging, performance monitoring, and system optimization. Introduction to MicroProfile Telemetry Tracing Concepts Spans Traces Context Propagation Correlation Instrumenting OpenTelemetry Tools for Trace Analysis Exporting the Traces Types of Telemetry Agent Instrumentation Analyzing Traces Security Considerations for Tracing MicroProfile Telemetry addresses the operational challenges inherent in modern microservices architectures. Without proper observability, debugging, performance monitoring, and ensuring system reliability become complex and time-consuming. Some of the key challenges in microservices-based applications include: Complexity due to Distributed Architecture: Microservices are often deployed across multiple nodes, containers, or cloud environments, making it challenging to track requests as they move through the system. This lack of visibility increases debugging complexity, making it harder to identify bottlenecks and analyze system behavior. Polyglot Architecture: Microservices are developed using multiple programming languages (e.g., Java, Python, and Go) and frameworks, resulting in inconsistent telemetry data and a lack of standardization in observability. This fragmentation makes correlating logs, traces, and metrics across services difficult. Latency: Communication between Microservices involves latency, and all of this adds up as requests traverse several services. This makes it difficult to identify the root causes of issues. Ensuring High Availability: Failures in one microservice can affect the entire system, impacting multiple dependent microservices. This can lead to downtime or degraded performance, resulting in lost revenue and diminished user trust. To address these challenges, MicroProfile Telemetry specification provides a standardized set of APIs for capturing telemetry data, including trace information and context propagation, to improve observability in distributed systems. By enabling seamless tracing, developers can analyze system behavior, troubleshoot service interactions, and ensure application reliability. MicroProfile Telemetry is vendor-neutral. It allows developers to switch between different OpenTelemetry implementations without modifying their application code. This flexibility ensures that MicroProfile applications can easily integrate with various observability platforms, making it easier to adopt, scale, and maintain Telemetry in modern cloud-native environments. Tracing is critical for observability. It allows developers to inspect the flow of requests as they traverse through distributed systems. Tracing provides visibility into the interactions and dependencies within a system by breaking down a request into multiple spans, and connecting them into traces with context propagated across services. A span is the basic unit of work in tracing. It represents a single operation or task a service performs, such as an HTTP request, a database query, or a computation. Each span contains metadata, including: Operation Name: Describes the activity (e.g., HTTP GET /products). Start Time and Duration: Captures when the operation started and how long it took. Attributes: Key-value pairs providing context (e.g., user IDs, resource names, HTTP status codes). Parent Span ID: Indicates the parent span, forming a relationship within a trace. Spans may also include additional data like logs and events, which help provide a detailed view of the operation’s lifecycle. Spans are connected to form a trace, which helps identify bottlenecks and performance issues. A trace is a collection of related spans representing the end-to-end execution of a request or transaction. It provides a holistic view of how a single request flows through the system, including service interactions. Traces often form a tree structure, where the root span represents the entry point (e.g., a user request), and child spans represent subsequent operations. For example: API Gateway (Root Span) + │ ├── Order Service (Child Span) + │ │ │ ├── Database Query (Another Child Span) + │ │ ├── Fetch Order Details + │ │ ├── Process Order Data + │ │ └── Return Data to Order Service + │ │ │ └── Return Response to API Gateway + │ └── API Gateway Sends Final Response to User Context propagation refers to the mechanism of carrying trace-related metadata, such as trace IDs and span IDs, across service and thread boundaries. This ensures that all spans created during a request can be linked together to form a complete trace. Context propagation is vital for connecting distributed spans and understanding their relationship ensuring trace metadata remains correlated as it travels with requests across service boundaries. Correlation is the process of associating related spans and traces across multiple services and threads to form a cohesive view of a transaction. Correlation enables developers to: Identify the source of bottlenecks or errors in distributed systems. Understand the dependencies and interactions between services. When viewing logs, the traceId and spanId allow you to link specific log entries to the corresponding spans in your tracing system. Trace ID: A unique identifier shared across all spans in a single trace. Span ID: A unique identifier for a single span. It is linked to a parent span, forming a hierarchy. Together, these concepts form the foundation of distributed tracing, enabling developers to monitor, analyze, and optimize the performance of their microservices effectively. MicroProfile Telemetry simplifies instrumentation by integrating OpenTelemetry for distributed tracing. The following steps outline how to instrument telemetry in a MicroProfile E-Commerce application. To enable tracing and exporting of telemetry data, include the MicroProfile Telemetry API dependency in your pom.xml file. <!-- Adding MicroProfile Telemetry dependency --> <dependency> <groupId>org.eclipse.microprofile.telemetry</groupId> <artifactId>microprofile-telemetry-api</artifactId> <version>1.1</version> <scope>provided</scope> </dependency> MicroProfile automatically traces requests, but you can manually instrument your code using OpenTelementry APIs. A Tracer is a core component of OpenTelemetry, responsible for creating spans and managing trace data within the application. To use it, inject a Tracer instance into your MicroProfile service: import io.opentelemetry.api.trace.Tracer; import io.opentelemetry.api.trace.Span; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; @ApplicationScoped public class PaymentService { @Inject Tracer tracer; public void processPayment(String orderId, double amount) { // Create a custom span for tracing the payment process Span span = tracer.spanBuilder(\"payment.process\").startSpan(); try { span.setAttribute(\"order.id\", orderId); span.setAttribute(\"payment.amount\", amount); span.setAttribute(\"payment.status\", \"IN_PROGRESS\"); // Business logic for processing the payment executePayment(orderId, amount); span.setAttribute(\"payment.status\", \"SUCCESS\"); } catch (Exception e) { span.setAttribute(\"payment.status\", \"FAILED\"); span.recordException(e); } finally { span.end(); } } private void executePayment(String orderId, double amount) { System.out.println(\"Processing payment for Order ID: \" + orderId + \", Amount: \" + amount); } } The implementation injects a Tracer, which enables manual span creation and precise trace management within the application. By creating a custom span (payment.process), it captures detailed telemetry data related to the payment process. Additionally, custom attributes such as order.id, payment.amount, and payment.status are attached to the span, providing valuable metadata for trace analysis. The implementation also includes exception handling, ensuring that any failures encountered during payment processing are properly recorded in the trace. Finally, the span is explicitly ended, marking the completion of tracing for this method. This setup ensures that each payment transaction is fully traceable, allowing developers to monitor execution flow, debug issues, and optimize application performance effectively. Use the Tracer to create a span that represents a specific operation or activity in your application: Span span = tracer.spanBuilder(\"my-span\").startSpan(); The method spanBuilder(\"my-span\") creates a new named span, which represents a specific operation within the application’s execution flow. This helps in tracing and monitoring the operation as part of a distributed system. Calling startSpan() marks the beginning of the span lifecycle, ensuring that the span is actively recorded until it is explicitly ended. This allows telemetry data to be captured for performance analysis, debugging, and observability. Attributes enhance trace context by attaching key-value pairs to a span, providing additional metadata that helps filter and analyze traces in observability tools. This helps in contextualizing the trace data: span.setAttribute(\"http.method\", \"GET\"); span.setAttribute(\"http.url\", \"/products/12345\"); span.setAttribute(\"user.id\", \"98765\"); The above statements allow the tracing system to capture essential details about an HTTP request. When the operation completes, end the span to capture the telemetry data: Span span = tracer.spanBuilder(\"payment.process\").startSpan(); try { // Business logic execution } catch (Exception e) { span.recordException(e); span.setAttribute(\"error\", true); } finally { span.end(); } The following tools are commonly used for trace collection, visualization, and analysis in MicroProfile applications: The OpenTelemetry Collector is an open-source telemetry processing system that acts as an intermediary between instrumented applications and observability backends such as Jaeger, Zipkin, and Prometheus. It is designed to receive, process, and export tracing data, making it a powerful tool for managing distributed traces in MicroProfile applications. It is vendor-agnostic, which allows for seamless integration with multiple tracing backends without requiring any changes to application instrumentation. It supports multiple data formats, enabling the ingestion of traces through several protocols, ensuring compatibility across different telemetry sources. Additionally, it offers processing pipelines that let developers filter, batch, and transform trace data before exporting it, optimizing observability workflows. Designed for scalability, the OpenTelemetry Collector can be deployed as a standalone instance or distributed across multiple nodes, making it suitable for both small-scale applications and large enterprise-grade distributed systems. Jaeger is an open-source distributed tracing system developed by Uber, widely used for monitoring microservices and visualizing request flows in cloud-native applications. It provides a powerful visualization interface that enables developers to inspect traces, analyze dependencies between services, and examine execution timelines, making it an essential tool for debugging performance bottlenecks. One of Jaeger’s key capabilities is service dependency analysis, which helps identify how microservices interact, providing insights into latency, failures, and request propagation. It also supports adaptive sampling strategies, allowing developers to control the volume of traces collected to optimize performance without overwhelming storage and processing resources. Additionally, Jaeger offers built-in storage options, allowing trace data to be stored in Elasticsearch, Cassandra, or Kafka, making it scalable and flexible for various deployment environments. Zipkin is a distributed tracing system designed to help developers visualize and diagnose latency issues in microservices-based applications. It provides a lightweight and fast tracing solution, making it ideal for quick deployment with minimal resource usage. Its simplicity and efficiency make it a popular choice for teams looking to implement tracing without significant infrastructure overhead. One of Zipkin’s core strengths is its tag-based searching, which allows developers to filter traces based on metadata such as service name, request ID, or other custom attributes, enabling quick identification of relevant traces. It also offers dependency graph visualization, helping to uncover bottlenecks and inefficiencies in microservices interactions. To accommodate different storage needs, Zipkin supports multiple storage backends, including Elasticsearch, MySQL, and Cassandra, providing flexibility for various deployment scenarios. Grafana Tempo is a distributed tracing backend. Unlike Jaeger and Zipkin, Tempo does not require indexing as it only requires object storage, making it highly scalable and cost-efficient for handling large volumes of trace data. This unique approach allows Tempo to store traces efficiently without increasing storage and query overhead, making it an ideal choice for high-performance microservices environments. One of Tempo’s key advantages is its tight integration with Grafana dashboards, enabling developers to correlate logs, metrics, and traces within a unified observability platform. Additionally, Tempo offers multi-backend support, meaning it can ingest and process trace data from OpenTelemetry, Jaeger, and Zipkin sources, ensuring compatibility with existing tracing setups. Its scalability makes it well-suited for large-scale microservices architectures, where efficiently managing distributed tracing data is crucial. To export the traces we need to configure the exporter type and endpoint in the src/main/resources/META-INF/microprofile-config.properties. For using OTLP (OpenTelemetry Protocol) export, you need to add the following configuration in: # Enable OpenTelemetry otel.traces.exporter=otlp # Set the OTLP exporter endpoint otel.exporter.otlp.endpoint=http://localhost:4317 # Define the service name otel.service.name=payment-service # Sampling rate: (1.0 = always, 0.5 = 50%, 0.0 = never) otel.traces.sampler=parentbased_always_on This sends traces directly to a observability tool, enabling real-time distributed tracing and performance monitoring. To ensure proper tracing, your observability tool (for e.g. Jaeger) must be running to receive trace data. Using OTLP is advantageous because it is the native standard for OpenTelemetry, ensuring seamless integration with a wide range of observability tools. One of its key benefits is that it allows developers to use multiple observability platforms without changing instrumentation, providing a unified and vendor-neutral tracing solution. Once tracing is enabled and the appropriate exporter is configured, the next step is to verify that traces are being captured and sent to the observability backend. This ensures that the MicroProfile Telemetry setup is functioning correctly and that distributed tracing data is available for monitoring and debugging. The simplest way to run Jaeger is with Docker using the command as below: docker run -d --name jaeger \\ -e COLLECTOR_ZIPKIN_HTTP_PORT=9411 \\ -p 5775:5775/udp \\ -p 6831:6831/udp \\ -p 6832:6832/udp \\ -p 5778:5778 \\ -p 16686:16686 \\ -p 14268:14268 \\ -p 14250:14250 \\ -p 9411:9411 \\ jaegertracing/all-in-one:latest The above command runs the all-in-one Jaeger container, which includes the agent, collector, query service, and UI. The Jaeger UI can be accessed at: https://<hostname>:16686. Ensure all the services of our MicroProfile E-commerce applications are running. Search using parameters like operation name, time range, or service for the traces associated with different microservices and confirm that the telemetry data is visible. View a detailed breakdown of each span within the trace, including timing and attributes. MicroProfile Telemetry supports multiple approaches to instrumentation and tracing, ensuring flexibility for developers based on their observability needs. The three primary types of telemetry in MicroProfile Telemetry are: Automatic Instrumentation enables distributed tracing without requiring any modifications to the application code. This is particularly beneficial for Jakarta RESTful Web Services and MicroProfile REST Clients, as it enables seamless integration into distributed tracing systems following the semantic conventions of OpenTelemetry. This ensures compatibility across different tracing tools. For example, in the ProductService, which exposes a RESTful endpoint, automatic instrumentation ensures that incoming and outgoing HTTP requests are traced with minimal configuration, without requiring any additional code changes. By default, MicroProfile Telemetry tracing is disabled. To activate it, set the following property in microprofile-config.properties: otel.sdk.disabled=false This ensures that OpenTelemetry’s tracing capabilities are enabled for the application. Manual Instrumentation provides developers with fine-grained control over how telemetry data is collected and structured within a MicroProfile application. By explicitly defining spans, attributes, and trace propagation, developers can gain greater insight into application behavior beyond what automatic instrumentation provides. The @WithSpan annotation provides a simple way to create custom spans within a trace. By annotating a method with @WithSpan, a new span is automatically generated whenever the method is invoked. This span is linked to the current trace context, allowing developers to track key operations without manually managing span lifecycle. import io.opentelemetry.instrumentation.annotations.WithSpan; import jakarta.enterprise.context.ApplicationScoped; @ApplicationScoped public class PaymentService { @WithSpan public void processPayment(String orderId) { // Business logic here } } Every time processPayment is called, a new span is created. The span is automatically linked to the current trace context. No need for explicit span creation or lifecycle management. You can use @WithSpan for tracing key business operations, such as order processing, payment handling, or API requests. For greater flexibility, developers can manually create spans using the OpenTelemetry API. The SpanBuilder class provides the ability to define custom span names, making trace analysis more meaningful and structured. Additionally, developers can attach custom attributes to spans, enriching trace data with relevant metadata for deeper insights. This method also offers explicit control over the span lifecycle, allowing spans to be started and ended manually, ensuring they accurately represent specific business operations or execution flows within the application. import io.opentelemetry.api.trace.Tracer; import io.opentelemetry.api.trace.Span; import jakarta.inject.Inject; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; @Path(\"/trace\") public class TraceResource { @Inject Tracer tracer; @GET @Path(\"/custom\") public String customTrace() { Span span = tracer.spanBuilder(\"custom-span\").startSpan(); span.setAttribute(\"custom.key\", \"customValue\"); span.end(); return \"Trace recorded\"; } } The method tracer.spanBuilder(\"custom-span\").startSpan() creates a span with a specific name allowing developers to define meaningful trace segments for better observability. Using span.setAttribute(\"custom.key\", \"customValue\"), custom metadata can be attached to the span, enriching trace data with relevant contextual information. Finally, calling span.end() explicitly marks the completion of the span, ensuring accurate tracking of execution duration. The SpanBuilder approach is particularly useful when developers require fine-grained control over when spans start and end, as well as the ability to include detailed metadata for enhanced trace analysis. To manually instrument the processPayment method in the PaymentService, we use OpenTelemetry’s API to create a custom span, add attributes, and control the span lifecycle. import io.opentelemetry.api.trace.Span; import io.opentelemetry.api.trace.Tracer; import jakarta.enterprise.context.ApplicationScoped; import jakarta.inject.Inject; @ApplicationScoped public class PaymentService { @Inject Tracer tracer; public void processPayment(String orderId, double amount, String paymentMethod) { // Create a custom span for tracing the payment process Span span = tracer.spanBuilder(\"payment.process\").startSpan(); try { // Add attributes to enrich the trace span.setAttribute(\"order.id\", orderId); span.setAttribute(\"payment.amount\", amount); span.setAttribute(\"payment.method\", paymentMethod); span.setAttribute(\"payment.status\", \"IN_PROGRESS\"); // Business logic for processing the payment System.out.println(“Processing Payment…); // Update span attribute on successful completion span.setAttribute(\"payment.status\", \"SUCCESS\"); } catch (Exception e) { // Capture error in tracing span.setAttribute(\"payment.status\", \"FAILED\"); span.recordException(e); } finally { // End the span to complete the tracing span.end(); } } } The payment.process span is manually created using tracer.spanBuilder(), allowing explicit control over the tracing of the payment process. To enhance trace visibility, custom attributes such as the order ID, payment amount, and payment method are attached to the span, providing valuable context for analysis. Additionally, the payment status is recorded as IN_PROGRESS when processing starts and updated to SUCCESS or FAILED based on the outcome. In the event of an error, the span captures and records the exception, ensuring failure details are logged for debugging. The span lifecycle is carefully managed, starting before the business logic executes and ending only after the process is completed in the finally block. This structured approach guarantees accurate performance monitoring and trace completeness, improving visibility into how payments are processed in a distributed system. Agent Instrumentation enables telemetry data collection without modifying application code by attaching a Java agent at runtime. This approach is particularly useful for legacy applications or scenarios where modifying source code is not feasible. The OpenTelemetry Java Agent dynamically instruments applications, automatically detecting and tracing interactions within commonly used frameworks such as Jakarta RESTful Web Services, database connections, and messaging systems. One of the key advantages of agent-based instrumentation is that it requires no changes to the application’s source code and eliminates the need for recompilation or redeployment. Instead, it can be activated by attaching the agent at application startup. Refer to the OpenTelemetry Java Agent Getting Started page for step-by-step instructions on enabling it for your application. Once enabled, the agent automatically instruments the application, seamlessly integrating with distributed tracing systems without requiring developer intervention. This makes it an efficient and non-intrusive way to implement observability in MicroProfile applications. Once enabled, the agent automatically instruments the application, seamlessly integrating with distributed tracing systems without requiring developer intervention. This makes it an efficient and non-intrusive way to implement observability in MicroProfile applications. Once trace data is collected and exported to a backend system, analyzing these traces becomes a crucial step in understanding the behavior of your distributed microservices architecture. By examining traces, you can gain insights into system performance, identify bottlenecks, and detect failures or anomalies. Tracing backends like Jaeger, Zipkin, or Graphana Tempo provide visual interfaces to explore and analyze traces. These tools display traces as timelines or dependency graphs, making it easier to: Understand the sequence of operations. Identify the services and components involved in a request. Observe how requests propagate through the system. Traces highlight spans with long durations or repeated retries, which often point to bottlenecks or inefficiencies. Pay close attention to: Critical Path: The longest path in a trace that determines the total response time. Service Dependencies: Examine how upstream and downstream services interact to find slow components. Retries and Failures: Repeated spans or high failure rates indicate problematic dependencies or transient errors. Traces provide valuable information for diagnosing failures, including: Error Codes: Look for spans with error attributes, such as http.status_code=500. Exception Details: Many tracing systems capture stack traces or error messages in spans. Service Impact: Identify which upstream and downstream services are affected by the failure. Dependency graphs generated from traces show the interactions between services. These graphs help: Visualize which services depend on each other. Detects circular dependencies or excessive coupling. Plan optimizations by focusing on critical services. Traces, when combined with logs and metrics, provide a comprehensive picture of the system: Logs: Use trace IDs and span IDs in logs to correlate application logs with specific spans. Metrics: Correlate trace performance data with system metrics like CPU usage, memory consumption, or request rates. Example: If a span indicates high latency, check corresponding logs and metrics to identify the underlying cause, such as a resource constraint or network delay. Establish Baselines: Use traces to establish performance baselines for services. Monitor Critical Paths: Focus on traces that traverse critical services or user-facing operations. Use Sampling Strategically: Balance trace volume and storage costs by sampling traces intelligently. Automate Alerts: Set up alerts for abnormal patterns in traces, such as increased latency or failure rates. Collaborate Across Teams: Share trace insights with development, operations, and QA teams to improve system reliability. By analyzing traces effectively, you can identify opportunities to optimize your microservices, ensure smoother operations, and enhance the overall user experience. Tracing tools provide a powerful way to visualize and understand the intricate dynamics of distributed systems. When analyzing traces, developers should look for the following: Long spans: Spans that take a long time to complete may indicate a performance issue. Missing spans: Missing spans can make it difficult to understand the flow of a request. Errors: Errors can indicate problems with a service or a request. High latency: High latency can indicate a problem with the network or a service. By analyzing traces, developers can identify and troubleshoot problems with their microservices applications. This can help developers improve the performance and reliability of their applications. Here are some tips for analyzing traces: Use a trace viewer: A trace viewer is a tool that can help you visualize and analyze traces. Look for patterns: Look for patterns in the traces that may indicate a problem. Correlate traces with metrics: Correlate traces with metrics to get a better understanding of the performance of your application. Use sampling: Use sampling to reduce the number of traces that are collected. This can improve the performance of your tracing system. By following these tips, developers can effectively analyze traces to improve the performance and reliability of their microservices applications. When implementing tracing in your applications, it is crucial to be mindful of security implications. Tracing involves collecting and storing data about application behavior, which can potentially expose sensitive information if not handled properly. Data Sensitivity: Be cautious about the data included in traces. Avoid logging sensitive information such as passwords, API keys, or personally identifiable information (PII). Access Control: Implement strict access controls to limit who can view and manage trace data. Encryption: Consider encrypting trace data at rest and in transit to protect it from unauthorized access. Storage: Carefully manage the storage of trace data. Avoid storing traces indefinitely and implement data retention policies. Third-Party Services: If using third-party tracing services, ensure they have robust security measures in place to protect your data. Traces often include attributes and metadata that can contain sensitive information. Avoid storing or transmitting sensitive details, such as: Personally Identifiable Information (PII) (e.g., names, addresses, social security numbers). Payment information (e.g., credit card numbers). Authentication credentials (e.g., passwords, API keys, tokens). Best Practice: Sanitize attributes before adding them to spans: span.setAttribute(\"user.id\", \"anonymized-user-id\"); span.setAttribute(\"credit.card.last4\", \"****1234\"); To prevent unauthorized access during transmission, ensure that telemetry data is encrypted. Use secure protocols such as HTTPS or TLS for exporting trace data to a backend. *Example:* Configure the tracing provider to use encrypted connections: otel.exporter.jaeger.endpoint=https://secure-jaeger-collector.example.com otel.exporter.otlp.endpoint=https://secure-collector.example.com Trace data can grow rapidly in distributed systems. Retaining it indefinitely increases the risk of exposing sensitive information. Implement retention policies to: Retain traces only for the necessary duration for debugging or performance analysis. Periodically purge older traces from storage. Restrict access to trace data to authorized personnel only. Ensure that your tracing backend implements robust authentication and authorization mechanisms. Best Practice: Use role-based access control (RBAC) to define permissions for viewing and managing traces. Audit access to trace data regularly to identify potential misuse or breaches. Sampling reduces the volume of traces collected and limits the exposure of sensitive data by capturing only a subset of requests. Common strategies include: Random Sampling: Captures a fixed percentage of traces. Rate-Limiting Sampling: Limits the number of traces per second. Key-Based Sampling: Samples traces based on specific attributes (e.g., user ID). Example: Random sampling to limiting the amount of trace data collected: otel.traces.sampler=traceidratio otel.traces.sampler.traceidratio=0.1 Ensure that your tracing practices comply with data protection and privacy regulations such as GDPR, CCPA, or HIPAA. Key considerations include: Anonymizing sensitive data before tracing. Informing users about telemetry collection in your privacy policy. Providing mechanisms to opt out of tracing where required. The tracing infrastructure, such as Jaeger or OpenTelemetry Collector, should be isolated from the public internet and accessible only within secure networks. Best Practice: Deploy tracing backends in private subnets or behind firewalls. Use VPNs or dedicated connections for remote access to tracing dashboards. Tracing can help detect potential security incidents. Monitor traces for unusual patterns, such as: Unexpected spikes in requests. Requests from unknown or unauthorized sources. Abnormal response times indicating possible exploits. Set up alerts for these anomalies to investigate and mitigate potential issues. By following these security considerations, you can leverage the benefits of distributed tracing without compromising the security of your system or the privacy of your users. Careful handling of trace data, coupled with robust encryption, access controls, and compliance practices, ensures that tracing remains a valuable yet secure component of your observability strategy. MicroProfile Telemetry provides a robust foundation for observability in Java-based microservices, enabling developers to implement distributed tracing seamlessly. By leveraging this specification, you can gain deep insights into the flow of requests, identify bottlenecks, and enhance the reliability and performance of your applications. The integration of standardized tracing concepts like spans, traces, and context propagation ensures that developers can maintain a cohesive understanding of their system’s behavior across service boundaries. Through instrumentation, context propagation, and effective trace analysis, MicroProfile Telemetry simplifies the complexities of monitoring and debugging distributed systems. It empowers teams to proactively address issues, optimize performance, and improve the user experience. Moreover, by adhering to security best practices, developers can ensure that telemetry data is protected, compliant with regulations, and free of sensitive information. In this chapter, we explored the critical security considerations surrounding tracing within the MicroProfile Telemetry framework. We emphasized the importance of safeguarding sensitive data by avoiding the inclusion of Personally Identifiable Information (PII) in trace spans. Additionally, we discussed the potential security risks associated with tracing in production environments and the significance of carefully managing sampling rates and data retention policies. By adhering to these security best practices, developers can harness the power of tracing for observability while ensuring the confidentiality and integrity of their applications. As microservices architectures continue to evolve, the ability to observe and trace system interactions will remain a critical factor in maintaining resilient and efficient applications. MicroProfile Telemetry stands as a valuable tool in achieving these goals, providing developers with the observability they need to deliver reliable, high-performance microservices in modern cloud-native environments.","title":"Chapter 9: MicroProfile Telemetry","component":"microprofile-tutorial","version":"6.1","name":"index","url":"/microprofile-tutorial/6.1/chapter09/index.html","titles":[{"text":"Topics to be covered","hash":"topics-to-be-covered","id":1},{"text":"Introduction to MicroProfile Telemetry","hash":"introduction-to-microprofile-telemetry","id":2},{"text":"Tracing Concepts","hash":"tracing-concepts","id":3},{"text":"Spans","hash":"spans","id":4},{"text":"Traces","hash":"traces","id":5},{"text":"Context Propagation","hash":"context-propagation","id":6},{"text":"Correlation","hash":"correlation","id":7},{"text":"Instrumenting Telemetry","hash":"instrumenting-telemetry","id":8},{"text":"Step 1: Add the MicroProfile Telemetry Dependency","hash":"step-1-add-the-microprofile-telemetry-dependency","id":9},{"text":"Step 2: Create a Tracer","hash":"step-2-create-a-tracer","id":10},{"text":"Step 3: Create a Span","hash":"step-3-create-a-span","id":11},{"text":"Step 4: Add Attributes to the Span","hash":"step-4-add-attributes-to-the-span","id":12},{"text":"Step 5: End the Span","hash":"step-5-end-the-span","id":13},{"text":"Tools for Trace Analysis","hash":"tools-for-trace-analysis","id":14},{"text":"OpenTelemetry Collector","hash":"opentelemetry-collector","id":15},{"text":"Jaeger","hash":"jaeger","id":16},{"text":"Zipkin","hash":"zipkin","id":17},{"text":"Grafana Tempo","hash":"grafana-tempo","id":18},{"text":"Exporting the Traces","hash":"exporting-the-traces","id":19},{"text":"Verify the Traces","hash":"verify-the-traces","id":20},{"text":"Run Jaeger","hash":"run-jaeger","id":21},{"text":"Types of Telemetry","hash":"types-of-telemetry","id":22},{"text":"Automatic Instrumentation","hash":"automatic-instrumentation","id":23},{"text":"Manual Instrumentation","hash":"manual-instrumentation","id":24},{"text":"Using the @WithSpan Annotation","hash":"using-the-withspan-annotation","id":25},{"text":"Using SpanBuilder for Custom Spans","hash":"using-spanbuilder-for-custom-spans","id":26},{"text":"Manual Tracing in PaymentService","hash":"manual-tracing-in-paymentservice","id":27},{"text":"Agent Instrumentation","hash":"agent-instrumentation","id":28},{"text":"Analyzing Traces","hash":"analyzing-traces","id":29},{"text":"Visualizing Traces","hash":"visualizing-traces","id":30},{"text":"Identifying Bottlenecks","hash":"identifying-bottlenecks","id":31},{"text":"Diagnosing Failures","hash":"diagnosing-failures","id":32},{"text":"Understanding Service Dependencies","hash":"understanding-service-dependencies","id":33},{"text":"Correlating Traces with Logs and Metrics","hash":"correlating-traces-with-logs-and-metrics","id":34},{"text":"Best Practices for Analyzing Traces","hash":"best-practices-for-analyzing-traces","id":35},{"text":"Security Considerations for Tracing","hash":"security-considerations-for-tracing","id":36},{"text":"Avoid Capturing Sensitive Data","hash":"avoid-capturing-sensitive-data","id":37},{"text":"Encrypt Trace Data","hash":"encrypt-trace-data","id":38},{"text":"Limit Trace Retention","hash":"limit-trace-retention","id":39},{"text":"Access Control and Auditing","hash":"access-control-and-auditing","id":40},{"text":"Sampling Strategies to Minimize Exposure","hash":"sampling-strategies-to-minimize-exposure","id":41},{"text":"Compliance with Regulations","hash":"compliance-with-regulations","id":42},{"text":"Isolate Tracing Infrastructure","hash":"isolate-tracing-infrastructure","id":43},{"text":"Monitor and Alert on Trace Anomalies","hash":"monitor-and-alert-on-trace-anomalies","id":44},{"text":"Conclusion","hash":"conclusion","id":45}]},"19":{"id":19,"text":"In modern microservices architectures, where services are distributed and stateless, securing communications between clients and services and between individual services is critical. JSON Web Token (JWT) provides a lightweight, self-contained, and efficient user authentication and authorization mechanism, enabling scalable and secure identity propagation across distributed systems. MicroProfile JWT is a specification that standardizes JWT-based authentication and authorization for Java microservices. Leveraging the JWT open standard RFC 7519 enables services to securely extract and validate claims such as identity, roles, and permissions. MicroProfile JWT allows developers to build secure, interoperable, and portable microservices. It supports role-based access control (RBAC), simplifies identity management in stateless services, and avoids vendor lock-in by adhering to open specifications. Introduction to JWT Authentication Structure of JWT Use cases for JSON Web Tokens Benefits of JWT in Microservices Setting up MicroProfile JWT Configuring MicroProfile JWT Validation Request Flow in MicroProfile JWT Role-Based Access Control (RBAC) Setting Token Expiry Times for Security Error Handling Best Practices for JWT Authentication Security Best Practices for Microservices Conclusion This section will explore JSON Web Tokens, how they work, and why they are foundational to implementing stateless authentication and authorization in microservices-based systems. A JSON Web Token (JWT) (see JWT.io), as defined in RFC 7519, is an open standard for securely transmitting information (claims) between parties as a JSON object. JWTs are digitally signed, ensuring their integrity and authenticity. A JWT consists of three Base64 encoded parts, separated by dots (.): <Header>.<Payload>.<Signature> Header - It contains metadata about the token, such as token type (type: “JWT”) and signing algorithm ( alg: “RS256” for RSA-SHA256). { \"alg\": \"RS256\", \"typ\": \"JWT\" } Payload - It contains claims which are key-value pairs representing data about the user, such as roles and expiration. Example of claims in a JWT payload: { \"iss\": \"https://io.microprofile.com/issuer\", \"sub\": \"user1\", \"exp\": 1735689600, \"iat\": 1735686000, \"aud\": \"my-audience\", \"groups\": [\"user\", \"admin\"] } Signature — A digital signature that verifies the token’s integrity by combining the encoded header, payload, and private key. Example JWT Token: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0. QR1Owv2ug2WyPBnbQrRARTeEk9kDO2w8qDcjiHnSJflSdv1iNqhWXaKH4MqAkQtM oNfABIPJaZm0HaA415sv3aeuBWnD8J-Ui7Ah6cWafs3ZwwFKDFUUsWHSK-IPKxLG TkND09XyjORj_CHAgOPJ-Sd8ONQRnJvWn_hXV1BNMHzUjPyYwEsRhDhzjAD26ima sOTsgruobpYGoQcXUwFDn7moXPRfDE8-NoQX7N7ZYMmpUDkR-Cx9obNGwJQ3nM52 YCitxoQVPzjbl7WBuB7AohdBoZOdZ24WlN1lVIeh8v1K4krB8xgKvRU8kgFrEn_a 1rZgN5TiysnmzTROF869lQ. AxY8DCtDaGlsbGljb3RoZQ. MKOle7UQrG6nSxTLX6Mqwt0orbHvAKeWnDYvpIAeZ72deHxz3roJDXQyhxx0wKaM HDjUEOKIwrtkHthpqEanSBNYHZgmNOV7sln1Eu9g3J8. fiK51VwhsxJ-siBMR-YFiA Claims in JWTs can be categorized into two types: These are predefined claims with specific meanings, as defined by the JWT specification. Some commonly used standard claims include: Claim Description Example iss Issuer, the entity that issued the JWT (e.g., an authentication server) \"iss\": \"https://io.microprofile.com/issuer\" sub Subject, the principal (user or service) that the JWT is about. \"sub\": \"user1\" aud Audience, the intended recipients of the token (e.g., specific microservices). \"aud\": \"order-service\" exp Expiration time \"exp\": 1735689600 nbf not before \"nbf\": 1735686000 iat issued at, when that token was issued. \"iat\": 1735686000 jti Unique JWT token identifier \"jti\": \"a1b2c3d4\" groups Groups, list of roles or users allowed to access the resource [\"user\", \"admin\"] These are application-specific claims that provide additional information about the user or entity. They can extend authorization logic with application-specific claims (e.g., department, region). Custom claims are not part of the JWT specification but often include domain-specific data, such as user preferences, tenant IDs, or other metadata. MicroProfile JWT allows developers to access these claims programmatically. JWTs are versatile tokens commonly used in modern applications for authentication, where they verify the identity of a user or service; for authorization, where they grant access to resources based on roles or permissions; and for information exchange, where they securely transmit data between parties. Below are key scenarios where JWTs shine in microservices environments: JWTs enable stateless authentication in distributed systems. When a user logs in, an authentication service issues a JWT containing claims like sub (user ID) and exp (expiration time). The client sends this token in the Authorization: Bearer header of subsequent requests, allowing microservices to verify the user’s identity without requiring repeated authentication. For example, a user authenticates with an Auth Service and receives a JWT. This JWT token grants access to other services, such as a product catalog or order management system, without re-authentication. JWTs are also used for authorization, enabling fine-grained access control based on user roles or permissions. The JWT payload typically includes a group or role claim specifying the user’s roles or permissions. For example, a user with the admin role might be allowed to access all resources while a user with the user role might only have access to specific resources. MicroProfile JWT integrates seamlessly with Jakarta EE’s @RolesAllowed annotation, making it easy to enforce role-based access control (RBAC) in microservices. Role mapping can be configured in microprofile-config.properties: mp.jwt.verify.roles=groups JWTs are often used to represent claims-based identity, where the JWT contains claims representing the user’s identity, such as their name, email address, or other attributes. Applications can use these claims to identify the user and personalize their experience. For example, an application might use the email claim to look up the user’s profile information in a database or display the user’s name on a welcome page using the name claim. JWTs can securely exchange information between parties. The token payload can include custom claims representing the data being exchanged, such as an order ID or user ID. This makes JWTs useful in scenarios like Single Sign-On (SSO) systems, where information needs to be shared across multiple services. For example, a JWT might contain an order_id claim and a user_id claim, which an order management service can use to retrieve and display the user’s order details. JWTs facilitate identity federation by allowing integration of multiple trusted identity providers (e.g., Active Directory, LDAP) to provide a single sign-on (SSO) experience. In this case, the JWT contains claims representing the user’s identity, which applications can use to identify the user and retrieve their profile information. For example, an enterprise SSO system can issue a JWT that grants access to HR, Payroll, and CRM microservices. MicroProfile JWT validates the token’s iss (issuer) and aud (audience) to enforce trust boundaries. JWTs are widely used in microservices for the following reasons: JWTs eliminate the need for centralized session storage. Each token is self-contained, embedding all necessary user claims (e.g., roles, permissions) in its payload. Independent Validation: Microservices validate JWTs locally using public keys, avoiding calls to a central authority. This reduces latency and scales horizontally. Example: A payment service validates a JWT’s signature without querying an authentication server. Open Standards: JWTs adhere to RFC 7519, ensuring compatibility across platforms (Java, .NET, Node.js) and frameworks (Spring Boot, Quarkus). MicroProfile Integration: MicroProfile JWT standardizes validation and claim extraction, enabling seamless interoperability across Java microservices. Role-Based Access Control (RBAC): Map JWT claims (e.g., groups) to Jakarta EE roles using @RolesAllowed. Propagation Across Services: A JWT issued by an authentication service is propagated across microservices (e.g., the Order Service and the Inventory Service). Each service independently verifies the token and enforces access control. Reduced Central Dependency: No need for a central authorization server, simplifying architecture and improving fault tolerance. Example: Authentication Service: Issues a JWT with sub: \"user1\" and groups: [\"user\"]. Order Service: Validates the JWT and processes requests if groups include users. Inventory Service: Revalidates the same JWT without contacting the auth service. To use MicroProfile JWT in your project, add the following dependency to your pom.xml (for Maven): <dependency> <groupId>org.eclipse.microprofile.jwt</groupId> <artifactId>microprofile-jwt-auth-api</artifactId> <version>2.1</version> <scope>provided</scope> </dependency> For Gradle, add the following to your build.gradle: implementation 'org.eclipse.microprofile.jwt:microprofile-jwt-auth-api:2.1' MicroProfile JWT requires validation rules configuration to be defined in src/main/resources/microprofile-config.properties file. Below is an example configuration: # Public key (PEM format) to verify JWT signatures mp.jwt.verify.publickey.location=META-INF/publicKey.pem # Expected issuer (e.g., your OIDC provider) mp.jwt.verify.issuer=https://auth.example.com # Optional: Validate token audience mp.jwt.verify.audiences=order-service,payment-service Explanation: The mp.jwt.verify.publickey.location property specifies the location of the public key used to verify the JWT’s signature. The mp.jwt.verify.issuer property defines the expected issuer of the JWT, ensuring that tokens are only accepted if issued by a trusted authority. Optionally, the mp.jwt.verify.audiences property can specify the allowed audiences for the JWT, ensuring that the token is intended for the service. Place the PEM-encoded public key in src/main/resources/META-INF/publicKey.pem. This key is used to verify incoming JWT signatures. Understanding how JWTs are propagated and processed in a microservices architecture is critical to implementing secure and scalable authentication. This section explains the lifecycle of a JWT from client to service, including token extraction, validation, and claim usage. JWTs are propagated via the Authorization: Bearer HTTP header across clients and services. When a client authenticates (e.g., via a login endpoint), it receives a JWT from an authentication service. This token is then included in the header of subsequent requests to microservices. For example, a request header might look like this: GET /api/orders HTTP/1.1 Authorization: Bearer eyJhbGciOiJSUzI1NiIs… In microservices architecture, a client sends a JWT token to the initial service (for example, Order Service) using the Authorization: Bearer header. The initial service can forward the same token when calling another backend service (for example, the Inventory Service). Each microservice independently validates the JWT to enforce decentralized, stateless security. In advanced scenarios involving multiple downstream services, careful consideration must be given to validating the JWT’s aud (audience) claim to ensure the token is intended for the target service. MicroProfile JWT runtime handles token extraction and validation automatically. The token is parsed and validated as follows: Header Parsing: The runtime extracts the token from the Bearer schema. Decoding: The JWT is split into its header, payload, and signature components. The token validation involves the following steps: Signature Verification: The public key validates the token’s integrity. Standard Claims Validation: The runtime then validates standard claims: iss: It should match the mp.jwt.verify.issuer configuration property. exp : This checks if the token has not expired. aud : Optionally it checks for the included service(s) in mp.jwt.verify.audiences. If valid, the JWT’s claims populate the SecurityContext. Otherwise, MicroProfile JWT rejects the request with a 401 Unauthorized status. The SecurityContext interface (from Jakarta EE) provides programmatic access to JWT claims. Once a token is validated, MicroProfile JWT injects the JsonWebToken into the SecurityContext, allowing developers to: Retrieve user identity (e.g., sub claim). Check user roles (e.g., groups claim). Access custom claims (e.g., tenant_id claim). @GET @Path(\"/user-profile\") public String getUserProfile(@Context SecurityContext ctx) { JsonWebToken jwt = (JsonWebToken) ctx.getUserPrincipal(); String userId = jwt.getName(); // Extracts the \"sub\" claim Set<String> roles = jwt.getGroups(); // Extracts the \"groups\" claim String tenant = jwt.getClaim(\"tenant_id\"); // Custom claim return \"User: \" + userId + \", Roles: \" + roles + \", Tenant: \" + tenant; } The SecurityContext simplifies working with JWTs, enabling seamless integration with Jakarta EE’s security annotations like @RolesAllowed. By calling securityContext.getUserPrincipal(), the application can obtain the JsonWebToken instance, which contains all the claims from the JWT. MicroProfile JWT simplifies RBAC by mapping JWT claims (e.g., groups or roles) to Jakarta EE roles. This enables declarative security using the @RolesAllowed annotation. This section explains how to configure and use this mapping effectively. MicroProfile JWT seamlessly integrates with Jakarta EE’s @RolesAllowed annotation to enforce role-based access control in microservices. By default, MicroProfile JWT maps roles from the groups claim in the JWT payload to Jakarta EE roles. The groups claim is a standard JWT claim that represents the roles or groups assigned to the user. For example, a JWT payload might include: { \"iss\": \"https://example.com/issuer\", \"sub\": \"user123\", \"groups\": [\"user\", \"admin\"] } In this case, the user has two roles: user and admin. The roles in the groups claim can be used directly with the @RolesAllowed annotation to secure endpoints. @Path(\"/orders\") public class OrderResource { @GET @Path(\"/{id}\") @RolesAllowed(\"user\") // Only users can access this method public Response getOrder(@PathParam(\"id\") String id, @Context SecurityContext ctx) { String user = ctx.getUserPrincipal().getName(); // Fetch order for the user return Response.ok(\"Order for user: \" + user + \", ID: \" + id).build(); } @DELETE @Path(\"/{id}\") @RolesAllowed(\"admin\") // Only admins can access this method public Response deleteOrder(@PathParam(\"id\") String id, @Context SecurityContext ctx) { String admin = ctx.getUserPrincipal().getName(); // Delete order as admin return Response.ok(\"Order deleted by admin: \" + admin + \", ID: \" + id).build(); } } The GET /orders/chapter10 service is accessible to users, whereas the DELETE /orders/chapter10 is only available to users with the admin role. If your JWT uses a claim other than groups to represent roles (e.g., roles or scopes), you can customize the mapping using the mp.jwt.verify.roles property in microprofile-config.properties: # Optional: Map roles from the \"groups\" claim (default behavior) mp.jwt.verify.roles=groups The groups claim is the default claim used for role mapping in MicroProfile JWT Authentication. Therefore, you typically do not need to set the mp.jwt.verify.roles property unless your JWT uses a different claim name. For example, some identity providers (like OAuth 2.0 servers or OpenID Connect providers) might include roles in claims such as roles, permissions, or scope instead of groups. In such cases, update the mapping in your microprofile-config.properties file: mp.jwt.verify.roles=roles This ensures that MicroProfile JWT Authentication correctly maps the roles for use with Jakarta EE security annotations like @RolesAllowed. Token Validation: MicroProfile JWT validates the JWT’s signature and claims. Role Extraction: Roles are extracted from the configured claim (groups by default). Access Control: The @RolesAllowed annotation checks if the user’s roles match the required roles. If not, a 403 Forbidden response is returned. This approach ensures fine-grained security while maintaining compatibility with standard JWT practices. Short token expiry times reduce the surface area for the attackers. Here’s how to configure token expiry effectively: Set the exp claim at issuance: Ensure your authentication service issues tokens with the exp claim. { \"exp\": 1735689600 // Token expires at 2025-01-01 00:00:00 UTC } MicroProfile JWT automatically validates the exp claim during token verification. Beyond standard JWT validation settings, no additional configuration is needed. MicroProfile JWT will reject tokens returning a 401 Unauthorized response if: The exp claim is missing or invalid. The current time exceeds the exp value. MicroProfile JWT automatically validates tokens and rejects invalid requests with standardized HTTP responses. Common scenarios include: HTTP/1.1 401 Unauthorized WWW-Authenticate: Bearer error=\"invalid_token\" HTTP/1.1 401 Unauthorized WWW-Authenticate: Bearer error=\"invalid_token\", error_description=\"Token expired\" HTTP/1.1 401 Unauthorized WWW-Authenticate: Bearer error=\"missing_token\" HTTP/1.1 403 Forbidden Use Standard Claims - Prefer the groups claim for roles unless your identity provider uses a different claim. Consistent Role Names - Ensure role names (e.g., admin, user) are consistent across JWTs and @RolesAllowed annotations. Least Privilege - Assign minimal required roles to endpoints to reduce security risks. Combine with Other Annotations - Use @PermitAll or @DenyAll alongside @RolesAllowed for flexible security policies. But with more services comes more complexity, and with more complexity comes a greater risk of security breaches. So, how do you secure your microservices? Securing microservices requires a layered approach, combining authentication, authorization, encryption, and monitoring. MicroProfile JWT simplifies access control while adhering to industry standards. Below are best practices tailored for MicroProfile JWT implementations: Enforce Authentication with Validated JWTs: Ensure every request to a microservice includes a valid JWT. Configure MicroProfile JWT to validate tokens using a public key. Reject tokens with invalid signatures, missing claims, or expired exp values. Implement Role-Based Access Control: Restrict endpoint access based on user roles defined in the JWT. Configure role mapping in microprofile-config.properties if using non-default claims Use Short-Lived Tokens: To minimize exposure to compromised tokens, set short expiration times (exp claim) for JWTs (e.g., 15–30 minutes). Secure Token Transmission: Prevent token interception or tampering by using HTTPS to encrypt data in transit and store tokens in HTTP Authorization: Bearer headers (never in URLs or cookies). Manage Cryptographic Keys Securely: Protect keys to sign/verify JWTs by storing public keys in secure locations (e.g., Kubernetes Secrets, AWS KMS). Rotate keys periodically and avoid hardcoding them in source control. Validate and Sanitize JWT Claims: Validate all claims (e.g., iss, aud) in microprofile-config.properties, and Sanitize custom claims before use to prevent injection attacks and misuse of claims. Monitor and Log Security Events: Log JWT validation errors, role mismatches, and token expiration events to detect breaches and audit access patterns. Integrate with monitoring tools (e.g., Prometheus, Grafana) to track anomalies. These steps will help you secure your microservices against the most common attacks. MicroProfile JWT offers a standards-based, interoperable approach for securing microservices. It simplifies identity propagation, access control, and stateless security across distributed services. Integrating with Jakarta EE enables secure, scalable, and interoperable authentication without a session state. Further Reading: RFC 7519 MicroProfile JWT 2.1 Spec Jakarta Security 3.0","title":"Chapter 10: JWT Authentication","component":"microprofile-tutorial","version":"6.1","name":"chapter10","url":"/microprofile-tutorial/6.1/chapter10/chapter10.html","titles":[{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":1},{"text":"Introduction to JWT Authentication","hash":"introduction-to-jwt-authentication","id":2},{"text":"What is a JSON Web Token (JWT)?","hash":"what-is-a-json-web-token-jwt","id":3},{"text":"Structure of a JWT","hash":"structure-of-a-jwt","id":4},{"text":"Types of Claims in MicroProfile JWT","hash":"types-of-claims-in-microprofile-jwt","id":5},{"text":"Standard Claims","hash":"standard-claims","id":6},{"text":"Custom Claims","hash":"custom-claims","id":7},{"text":"Use cases for JSON Web Tokens","hash":"use-cases-for-json-web-tokens","id":8},{"text":"Authentication","hash":"authentication","id":9},{"text":"Authorization (Role-Based Access Control)","hash":"authorization-role-based-access-control","id":10},{"text":"Claims-based identity","hash":"claims-based-identity","id":11},{"text":"Information Exchange","hash":"information-exchange","id":12},{"text":"Federation & Single Sign-On (SSO)","hash":"federation-single-sign-on-sso","id":13},{"text":"Benefits of using JWT in Microservices","hash":"benefits-of-using-jwt-in-microservices","id":14},{"text":"Statelessness & Scalability","hash":"statelessness-scalability","id":15},{"text":"Interoperability","hash":"interoperability","id":16},{"text":"Fine-Grained Authorization","hash":"fine-grained-authorization","id":17},{"text":"Decentralized Security","hash":"decentralized-security","id":18},{"text":"Setting Up MicroProfile JWT","hash":"setting-up-microprofile-jwt","id":19},{"text":"Configuring MicroProfile JWT Validation","hash":"configuring-microprofile-jwt-validation","id":20},{"text":"Public Key Setup","hash":"public-key-setup","id":21},{"text":"Request Flow in MicroProfile JWT","hash":"request-flow-in-microprofile-jwt","id":22},{"text":"How JWTs are Propagated in Microservices","hash":"how-jwts-are-propagated-in-microservices","id":23},{"text":"Client-to-Service","hash":"client-to-service","id":24},{"text":"Service-to-Service","hash":"service-to-service","id":25},{"text":"Token Extraction","hash":"token-extraction","id":26},{"text":"Token Validation","hash":"token-validation","id":27},{"text":"Accessing JWT claims via SecurityContext","hash":"accessing-jwt-claims-via-securitycontext","id":28},{"text":"Role-Based Access Control (RBAC)","hash":"role-based-access-control-rbac","id":29},{"text":"Default Role Mapping with the groups Claim","hash":"default-role-mapping-with-the-groups-claim","id":30},{"text":"Securing Endpoints","hash":"securing-endpoints","id":31},{"text":"Custom Role Mapping","hash":"custom-role-mapping","id":32},{"text":"How the RBAC Works","hash":"how-the-rbac-works","id":33},{"text":"Setting Token Expiry Times for Security","hash":"setting-token-expiry-times-for-security","id":34},{"text":"Configuring Token Expiry","hash":"configuring-token-expiry","id":35},{"text":"Error Handling","hash":"error-handling","id":36},{"text":"Invalid Token (e.g., malformed JWT, invalid signature):","hash":"invalid-token-e-g-malformed-jwt-invalid-signature","id":37},{"text":"Expired Token (exp claim validation failure):","hash":"expired-token-exp-claim-validation-failure","id":38},{"text":"Missing Token","hash":"missing-token","id":39},{"text":"Insufficient Permissions (e.g., missing role for @RolesAllowed):","hash":"insufficient-permissions-e-g-missing-role-for-rolesallowed","id":40},{"text":"Best Practices for JWT Authentication","hash":"best-practices-for-jwt-authentication","id":41},{"text":"Security Best Practices for Microservices","hash":"security-best-practices-for-microservices","id":42},{"text":"Conclusion","hash":"conclusion","id":43}]},"20":{"id":20,"text":"In microservices architecture, developers often face the cumbersome task of implementing boilerplate code to consume REST APIs - manually constructing HTTP requests, parsing responses, and handling errors. The MicroProfile Rest Client specification addresses this by leveraging Jakarta RESTful Web Services (formerly JAX-RS) annotations to create type-safe Rest client interfaces. Instead of writing low-level HTTP logic, developers define Java interfaces that mirror the target service’s endpoints. At runtime, MicroProfile Rest Client dynamically generates an implementation of these interfaces, automating HTTP communication while ensuring compile-time consistency between the client and server contracts. This chapter introduces the MicroProfile Rest Client, a type-safe framework for simplifying service-to-service communication. We will begin by defining REST client interfaces using Jakarta RESTful Web Services annotations (@GET, @Path), configuring endpoints via MicroProfile Config, and implementing HTTP invocation. Next, we will explore handling HTTP communication, processing responses, and error handling. By the end of this chapter, you will be able to replace hand-written HTTP boilerplate code with declarative, maintainable clients while adhering to Jakarta EE and MicroProfile standards. Introduction to MicroProfile Rest Client Setting up Dependencies Defining a Rest Client Interface Parameter Configuration Requests and Response Handling Working with JSON Data formats Error Handling Strategies The MicroProfile Rest Client specification simplifies RESTful service consumption in Java microservices by replacing error-prone manual HTTP handling with a type-safe, annotation-driven approach. Instead of writing boilerplate code, developers define Java interfaces that mirror the target service’s API. Using Jakarta RESTful Web Services annotations like @GET, and @Path, these interfaces declaratively map methods to HTTP operations (e.g., /users/{id} to getUser(id)). The framework then generates an implementation at runtime, automating communication while ensuring compile-time consistency between client and server contracts. Tight integration with MicroProfile Config and CDI allows seamless configuration and injection, making it ideal for building resilient, maintainable clients that align with modern microservices practices. The MicroProfile Rest Client simplifies consuming RESTful services in Java microservices with the following key features: Type-Safe and Declarative APIs - The MicroProfile Rest Client allows developers to define REST clients as Java interfaces using Jakarta RESTful Web Services annotations like @GET, @POST, @PUT, @DELETE, @Path, @Consumes and @Produces. This approach improves code clarity and ensures compile-time validation, reducing the possibility of runtime errors . Integration with CDI (Context and Dependency Injection) - This specification allows developers to seamlessly inject MicroProfile Rest Client interfaces using @Inject and @RestClient into CDI-managed beans, promoting better dependency management and integration with other components. By leveraging CDI lifecycle management, the MicroProfile Rest Client can benefit from scope management (e.g., @ApplicationScoped), proxying, and automatic initialization. Runtime Configurable with MicroProfile Config - The behavior of MicroProfile Rest Client can be dynamically configured using MicroProfile Config. This allows properties like the base URL and other client settings to be adjusted without recompilation. The configuration can be provided through microprofile-config.properties or environment variables, making the client highly adaptable to different environments. Support for Asynchronous Execution - For asynchronous execution, MicroProfile Rest Client can return CompletionStage<T>, allowing non-blocking requests. This significantly improves performance & scalability in high-concurrency environments. Automatic Handling of Redirect Responses - MicroProfile Rest Client can automatically follow HTTP redirects, simplifying client implementation when working with services that return 3xx responses. Secure Socket Layer (SSL) and Security Configuration - Supports SSL/TLS configuration, including certificates and trust stores, ensuring secure communication between microservices. Propagation of Headers and Cookies - Enables automatic propagation of HTTP headers, cookies and context (e.g., authentication tokens), facilitating session management across service calls. Exception Handling and Custom Providers - Allows custom exception mapping and response handling, giving developers control over error response based on specific conditions, improving fault tolerance and user experience. Integration with MicroProfile Fault Tolerance - This specification Supports resilience patterns like retries (@Retry), circuit breakers (@CircuitBreaker), and Bulkheads (@Bulkhead), ensuring stability in service-to-service communications. Integration with MicroProfile Long Running Actions (LRA) - MicroProfile Rest Client can coordinate distributed transactions using LRA annotations (e.g., @LRA), enabling compensation logic for long-running processes. This ensures consistency across services in complex workflows. Portability and Standards Compliance: This specification enables MicroProfile Rest Client to work across different MicroProfile-compatible runtimes, leveraging Jakarta EE standards (CDI, Jakarta RESTful Web Services, JSON Binding, JSON Processing). To use MicroProfile Rest Client 3.1 in your project, you need to include the necessary dependencies in your build configuration. Below are configurations for Maven and Gradle: For Maven-based projects, add the following dependency to your pom.xml file: <dependency> <groupId>org.eclipse.microprofile.rest.client</groupId> <artifactId>microprofile-rest-client-api</artifactId> <version>3.1</version> </dependency> For Gradle-based projects, add the following dependency to your build.gradle file: dependencies { Implementation 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api:3.1' compileOnly 'org.eclipse.microprofile:microprofile:6.1' } Tip: The MicroProfile Rest Client is an Eclipse Foundation project. For more details and updates on the project, visit the official repository: MicroProfile Rest Client on GitHub. To create a MicroProfile Rest Client interface, you need to define a Java interface and annotate it with annotations to map it to a RESTful service. To use the MicroProfile Rest Client, annotate your client interface with @RegisterRestClient. This annotation registers the interface as a Rest client within MicroProfile runtime and enables it as a CDI bean, allowing it to be injected into other components. Example: package io.microprofile.tutorial.inventory.client; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.PathParam; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; import io.microprofile.tutorial.inventory.dto.Product; @RegisterRestClient(configKey = \"product-service\") @Path(\"/products\") public interface ProductServiceClient { @GET @Path(\"/{id}\") Product getProductById(@PathParam(\"id\") Long id); } Explanation: In the above code, we define a ProductServiceClient within the package io.microprofile.tutorial.inventory.client. The interface serves as a Rest client for interaction with a remote product service. @RegisterRestClient - declares the ProductServiceClient interface as a MicroProfile Rest Client, enabling it to be injected into other CDI-managed components. configKey = \"product-service\" - associates the client with a configuration key, allowing dynamic configuration via MicroProfile Config (e.g., using microprofile-config.properties or environment variables). @Path(/products) - specifies the base URI path segement for the RESTful service. @GET - indicates that the getProductById() method handles HTTP GET requests. @Path(\"/{id}\") – define a dynamic URI path parameter {id}, which will be replaced at runtime with the actual value provided. @PathParam(\"id\") - binds the method parameter id to the {id} placeholder in the request URL. Return Type (Product) - specifies that the method returns a Product Data Transfer Object (DTO), representing the retrieved product data. Note: In CDI environments, it is recommended not to extend AutoCloseable in REST client interfaces. The container manages the lifecycle of injected clients automatically, ensuring proper resource handling without requiring manual closure. To configure the URI using MicroProfile Config, you need to add a config file named src/main/webapp/META-INF/microprofile-config.properties in your project. This file contains the configuration key and value pairs. In this example, we’re configuring the base URI to http://localhost:8080/api/products. We can configure other client properties, such as followRedirects. The followRedirects property specifies whether the client should automatically follow HTTP redirects (3xx status codes) when making RESTful web service calls. product-service/mp-rest/url=http://localhost:8080/api/products product-service/mp-rest/followRedirects=true In MicroProfile Rest Client, you can dynamically configure headers, query parameters, and path parameters using Jakarta RESTful Web Services annotations. These annotations bind method parameters to different parts of the HTTP request, enabling flexible and dynamic RESTful client interfaces that can efficiently interact with various endpoints. Supported Parameter Annotations @PathParam – Binds a method parameter to a path variable in the URL. @QueryParam – Maps a method parameter to a query string parameter in the request URL. @HeaderParam – Attaches a method parameter to an HTTP request header. Path parameters are used to insert dynamic values directly into the URL path. import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.PathParam; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; @RegisterRestClient @Path(\"/products\") public interface ProductServiceClient { @GET @Path(\"/{id}\") Product getProductById(@PathParam(\"id\") Long id); } Example productServiceClient.getProductById(1L); Resulting HTTP Request GET /products/1 Ensures URL structure consistency by enforcing path variables Prevents hardcoding URLs, making the code cleaner and maintainable. Query parameters are typically used for filtering, pagination, or optional parameters in the request URL. Example: import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.QueryParam; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; @RegisterRestClient @Path(\"/products\") public interface ProductServiceClient { @GET List<Product> getProductsByCategory(@QueryParam(\"category\") String category); } Example Call: productServiceClient.getProductsByCategory(\"electronics\"); Resulting HTTP Request: GET /products?category=electronics Useful for filtering results (?category=electronics). Ideal for pagination (?page=2&size=20). Allows sending optional parameters without modifying the URL structure. Header parameters are typically used for authentication, authorization, and metadata transmission between client and server. Example: import jakarta.ws.rs.GET; import jakarta.ws.rs.HeaderParam; import jakarta.ws.rs.Path; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; @RegisterRestClient @Path(\"/orders\") public interface OrderServiceClient { @GET List<Order> getOrders(@HeaderParam(\"Authorization\") String authToken); } Example Call: orderServiceClient.getOrders(\"Bearer my-secret-token\"); Resulting HTTP Request: GET /orders Authorization: Bearer my-secret-token Used for passing authentication tokens (Authorization: Bearer token). Helps with custom metadata exchange (e.g., X-Correlation-ID: 12345). Avoids exposing sensitive data in URLs (e.g., API keys). @CookieParam - Binds a method parameter to the value of an HTTP cookie in the incoming request. @FormParam — Maps a method parameter to a field in a submitted HTML form (application/x-www-form-urlencoded POST body). @MatrixParam — Binds a method parameter to a matrix parameter embedded within the URL path segements (e.g., /product;color=blue;size=large). @BeanParam — Aggregates multiple parameter annotations (path, query, header, etc.) into a single Java bean for cleaner method signature. Tip: These annotations eliminate manual string concatenation, making REST client calls type-safe and maintainable. In MicroProfile Rest Client, handling requests and responses involves defining methods in your interface that map to RESTful service endpoints. This ensures that: HTTP requests are automatically constructed based on method definitions. Responses are efficiently deserialized into Java objects (DTOs) or processed manually using Response. Using Jakarta RESTful Web Services annotations, you can define standard HTTP operations such as @GET, @POST, @PUT, and @DELETE. The framework also supports additional methods like @HEAD, @OPTIONS, and @PATCH, providing complete control over HTTP communication when needed. Meanwhile, MicroProfile automatically handles serialization, deserialization, and request execution at runtime. By default, MicroProfile Rest Client supports JSON format without requiring additional configurations. Serialization and deserialization of request and response bodies are automatically handled using JSON-B (Jakarta JSON Binding) or JSON-P (Jakarta JSON Processing). Developers can directly use Java objects as request bodies or response entities, eliminating the need for manual parsing. Example: import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.Produces; import jakarta.ws.rs.Consumes; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; @RegisterRestClient @Path(\"/products\") @Produces(\"application/json\") @Consumes(\"application/json\") public interface ProductServiceClient { @GET @Path(\"/{id}\") Product getProductById(@PathParam(\"id\") Long id); } Explanation The @Produces(\"application/json\") annotation specifies that the client expects JSON responses. This determines the value of the Accept header in HTTP requests. The @Consumes(\"application/json\") annotation specifies that the client sends JSON requests. This determines the value of the Content-Type header of the request. By default the media type \"application/json\" is used if @Produces and @Consumes are not explicitly set. MicroProfile Rest Client automatically serializes Java objects to JSON and deserializes responses into Product DTO (Data Transfer Object) Java object. Effective error handling is crucial when consuming remote RESTful services. MicroProfile Rest Client provides a structured approach to error handling by mapping HTTP responses to exceptions using the ResponseExceptionMapper interface. This mechanism allows developers to: Convert specific HTTP response codes into custom exceptions. Customize exception handling behavior at runtime. Automatically throw mapped exceptions in client invocations. The ResponseExceptionMapper interface allows mapping an HTTP Response object to a Throwable (custom exception). This improves error handling by ensuring meaningful exceptions are thrown instead of manually checking response codes. How it Works Scanning and Prioritizing Exception Mappers: When a client method is invoked, the runtime scans all registered ResponseExceptionMapper implementations. Mappers are then sorted in ascending order of priority, determined by the @Priority annotation. The mapper with the lowest numeric priority value is checked first. Handling Responses: The handles(int status, MultivaluedMap<String,Object> headers) method determines whether a mapper should handle a given response. By default, it handles responses with status code 400 or higher, but we can override this behavior. Converting the Response to an Exception: The toThrowable(Response response) method converts a response into a Throwable (exception). Checked exceptions are only thrown if the client method declares that it throws that type of exception of its superclass. Unchecked exceptions (RuntimeException) are always thrown. Example: package io.microprofile.tutorial.inventory.client; import jakarta.ws.rs.GET; import jakarta.ws.rs.Path; import jakarta.ws.rs.PathParam; import jakarta.ws.rs.core.Response; import org.eclipse.microprofile.rest.client.inject.RegisterRestClient; import org.eclipse.microprofile.rest.client.annotation.RegisterProvider; @RegisterRestClient(configKey = \"product-service\") @RegisterProvider(ProductServiceResponseExceptionMapper.class) @Path(\"/products\") public interface ProductServiceClient extends AutoCloseable { @GET @Path(\"/{id}\") Response getProductById(@PathParam(\"id\") Long id); } Explanation: The REST client interface defines an endpoint for retrieving products. The @RegisterProvider annotation registers ProductServiceResponseExceptionMapper, ensuring custom exception handling. And below is the corresponding ResponseExceptionMapper: package io.microprofile.tutorial.inventory.client; import jakarta.ws.rs.core.Response; import org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper; import io.microprofile.tutorial.inventory.dto.ProductNotFoundException; public class ProductServiceResponseExceptionMapper implements ResponseExceptionMapper<Throwable> { @Override public Throwable toThrowable(Response response) { if (response.getStatus() == 404) { return new ProductNotFoundException(\"Product not found\"); } return new Exception(\"An unexpected error occurred\"); } } Explanation: If the response status code is 404, a ProductNotFoundException is thrown. Otherwise, a generic exception is returned. While CDI-based injection is commonly used for REST clients in MicroProfile, programmatic creation using the RestClientBuilder class is beneficial when CDI is unavailable or when dynamic client instantiation is required. This builder provides a fluent API for configuring and constructing REST client proxies without relying on constructors that require numerous arguments. Using RestClientBuilder simplifies object creation, improves code readability, and supports method chaining, where each configuration method returns the builder instance itself. In the MicroProfile Ecommerce Store, the InventoryService must verify whether a product exists before checking or updating inventory. This interaction can be handled by calling the ProductService using a REST client interface. package io.microprofile.tutorial.store.inventory.service; import io.microprofile.tutorial.store.inventory.client.ProductServiceClient; import io.microprofile.tutorial.store.product.entity.Product; import org.eclipse.microprofile.rest.client.RestClientBuilder; import java.net.URI; import java.util.concurrent.TimeUnit; public class InventoryService { public boolean isProductAvailable(Long productId) { URI productApiUri = URI.create(\"http://localhost:8080/api\"); try (ProductServiceClient productClient = RestClientBuilder.newBuilder() .baseUri(productApiUri) .connectTimeout(3, TimeUnit.SECONDS) .readTimeout(5, TimeUnit.SECONDS) .build(ProductServiceClient.class)) { Product product = productClient.getProductById(productId); return product != null; } catch (Exception e) { // Log exception (omitted for brevity) return false; } } } The isProductAvailable() method accepts a product ID and returns true if the product exists in the catalog. A URI object is created pointing to the base path of the ProductService API using URI.create(). A ProductServiceClient instance is created using the builder pattern inside a try-with-resource block: newBuilder() initializes the client builder. baseUri() sets the root endpoint of the target service. connectTimeout() and readTimeout() define connection and read timeouts respectively. build() finalizes and returns the configured client proxy. Because ProductServiceClient extends AutoCloseable, the try-with-resources block ensures that the client is automatically closed after the operation, preventing resource leaks. If a Product object is successfully returned, true is returned. Any exceptions are caught and handled appropriately, returning false in case of failure. This approach is especially useful for utility services, batch jobs, or environments where REST client configuration must be dynamic or conditional, and manual client lifecycle management is necessary. Tip: When building MicroProfile REST clients programmatically (using RestClientBuilder), ensure that your client interface extends AutoCloseable and uses try-with-resources to release resources automatically. The MicroProfile Rest Client provides a declarative, type-safe, and efficient mechanism for interacting with RESTful services in Java microservices. It reduces boilerplate code and lets developers focus on core business logic while still offering fine-grained control through features like RestClientBuilder. By integrating seamlessly with other MicroProfile specifications—such as Config, Fault Tolerance, and JWT Authentication—the Rest Client helps enhance the security, resilience, and maintainability of cloud-native applications. Removes boilerplate HTTP code, improving clarity and maintainability. Automatically handles JSON serialization and deserialization. Supports CDI injection for managed client lifecycles. Integrates with Fault Tolerance for retries, timeouts, and circuit breakers. Enhances security through header propagation and authentication mechanisms. With MicroProfile Rest Client, building robust and maintainable microservices that communicate over REST becomes simpler, more flexible, and more powerful. This concludes the MicroProfile tutorial. You are now equipped with the foundational knowledge to build robust, cloud-native microservices using the MicroProfile specification. Thank you for following along, and happy coding!","title":"Chapter 11: MicroProfile Rest Client","component":"microprofile-tutorial","version":"6.1","name":"chapter11","url":"/microprofile-tutorial/6.1/chapter11/chapter11.html","titles":[{"text":"Topics to be covered:","hash":"topics-to-be-covered","id":1},{"text":"Introduction to MicroProfile Rest Client","hash":"introduction-to-microprofile-rest-client","id":2},{"text":"Key Features of MicroProfile Rest Client","hash":"key-features-of-microprofile-rest-client","id":3},{"text":"Setting up Dependency for MicroProfile Rest Client","hash":"setting-up-dependency-for-microprofile-rest-client","id":4},{"text":"Maven Configuration","hash":"maven-configuration","id":5},{"text":"Gradle Configuration","hash":"gradle-configuration","id":6},{"text":"Creating MicroProfile Rest Client Interface","hash":"creating-microprofile-rest-client-interface","id":7},{"text":"The @RegisterRestClient Annotation","hash":"the-registerrestclient-annotation","id":8},{"text":"Configuration via MicroProfile Config:","hash":"configuration-via-microprofile-config","id":9},{"text":"Parameter Configurations","hash":"parameter-configurations","id":10},{"text":"Using Path Parameters (@PathParam)","hash":"using-path-parameters-pathparam","id":11},{"text":"Why Use @PathParam?","hash":"why-use-pathparam","id":12},{"text":"Using Query Parameters (@QueryParam)","hash":"using-query-parameters-queryparam","id":13},{"text":"Why Use @QueryParam?","hash":"why-use-queryparam","id":14},{"text":"Using Header Parameters (@HeaderParam)","hash":"using-header-parameters-headerparam","id":15},{"text":"Why Use @HeaderParam?","hash":"why-use-headerparam","id":16},{"text":"Overview of Additional Annotations","hash":"overview-of-additional-annotations","id":17},{"text":"Handling Requests and Responses","hash":"handling-requests-and-responses","id":18},{"text":"Handling JSON Data formats","hash":"handling-json-data-formats","id":19},{"text":"Error Handling","hash":"error-handling","id":20},{"text":"Using ResponseExceptionMapper interface","hash":"using-responseexceptionmapper-interface","id":21},{"text":"Using the RestClientBuilder Class","hash":"using-the-restclientbuilder-class","id":22},{"text":"Example: Inventory Service Calls Product Service","hash":"example-inventory-service-calls-product-service","id":23},{"text":"Explanation","hash":"explanation","id":24},{"text":"Conclusion","hash":"conclusion","id":25},{"text":"Key Takeaways","hash":"key-takeaways","id":26}]}},"components":{},"componentVersions":{"microprofile-tutorial/6.1":{"displayVersion":"6.1","title":"MicroProfile Tutorial","version":"6.1","name":"microprofile-tutorial","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"MicroProfile Tutorial","site-url":"https://microprofile.io","experimental":true,"idprefix":"","idseparator":"-","page-pagination":true,"allow-uri-read":"","page-pdf-download-name":"microprofile-tutorial.pdf","source-language":"asciidoc@","table-caption":false,"xrefstyle":"full"},"sourcemap":false,"extensions":[{},{},{}],"keepSource":true},"url":"/microprofile-tutorial/6.1/index.html","navigation":[{"items":[{"content":"Preface","url":"/microprofile-tutorial/6.1/index.html","urlType":"internal"},{"content":"Introduction to MicroProfile","url":"/microprofile-tutorial/6.1/chapter01/chapter01.html","urlType":"internal"},{"content":"Getting Started with MicroProfile","url":"/microprofile-tutorial/6.1/chapter02/chapter02-00.html","urlType":"internal"},{"content":"Jakarta EE 10 Core Profile","url":"/microprofile-tutorial/6.1/chapter03/chapter03.html","urlType":"internal"},{"content":"MicroProfile OpenAPI","url":"/microprofile-tutorial/6.1/chapter04/chapter04.html","urlType":"internal"},{"content":"MicroProfile Configuration","url":"/microprofile-tutorial/6.1/chapter05/chapter05.html","urlType":"internal"},{"content":"MicroProfile Health","url":"/microprofile-tutorial/6.1/chapter06/chapter06.html","urlType":"internal"},{"content":"MicroProfile Metrics","url":"/microprofile-tutorial/6.1/chapter07/chapter07.html","urlType":"internal"},{"content":"MicroProfile Fault Tolerance","url":"/microprofile-tutorial/6.1/chapter08/chapter08.html","urlType":"internal"},{"content":"MicroProfile Telemetry","url":"/microprofile-tutorial/6.1/chapter09/index.html","urlType":"internal"},{"content":"MicroProfile JWT","url":"/microprofile-tutorial/6.1/chapter10/chapter10.html","urlType":"internal"},{"content":"MicroProfile Rest Client","url":"/microprofile-tutorial/6.1/chapter11/chapter11.html","urlType":"internal"}],"root":true,"order":0}]}}}})